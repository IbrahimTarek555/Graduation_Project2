
grad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007f7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00007f7c  00008010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  00800076  00800076  00008026  2**0
                  ALLOC
  3 .stab         000056e8  00000000  00000000  00008028  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000137b  00000000  00000000  0000d710  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000ea8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000ebcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  0000ed3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00010984  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0001186f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  0001261c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  0001277c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00012a09  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000131d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 65 0f 	jmp	0x1eca	; 0x1eca <__vector_13>
      38:	0c 94 ed 0e 	jmp	0x1dda	; 0x1dda <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e7       	ldi	r30, 0x7C	; 124
      68:	ff e7       	ldi	r31, 0x7F	; 127
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 38       	cpi	r26, 0x85	; 133
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <main>
      8a:	0c 94 bc 3f 	jmp	0x7f78	; 0x7f78 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 85 3f 	jmp	0x7f0a	; 0x7f0a <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 a1 3f 	jmp	0x7f42	; 0x7f42 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 91 3f 	jmp	0x7f22	; 0x7f22 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 ad 3f 	jmp	0x7f5a	; 0x7f5a <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 91 3f 	jmp	0x7f22	; 0x7f22 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 ad 3f 	jmp	0x7f5a	; 0x7f5a <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 85 3f 	jmp	0x7f0a	; 0x7f0a <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 a1 3f 	jmp	0x7f42	; 0x7f42 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 91 3f 	jmp	0x7f22	; 0x7f22 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 ad 3f 	jmp	0x7f5a	; 0x7f5a <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 91 3f 	jmp	0x7f22	; 0x7f22 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 ad 3f 	jmp	0x7f5a	; 0x7f5a <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 91 3f 	jmp	0x7f22	; 0x7f22 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 ad 3f 	jmp	0x7f5a	; 0x7f5a <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 95 3f 	jmp	0x7f2a	; 0x7f2a <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 b1 3f 	jmp	0x7f62	; 0x7f62 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <Timer0_VoidInit>:
 * every 100 tick (200 microsecond) we generate an interrupt
 *
 */

void Timer0_VoidInit(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	/* Choosing Timer Waveform Generation Mode */
	Set_Bit(TCCR0, TCCR0_WGM01);
     b4e:	a3 e5       	ldi	r26, 0x53	; 83
     b50:	b0 e0       	ldi	r27, 0x00	; 0
     b52:	e3 e5       	ldi	r30, 0x53	; 83
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	80 81       	ld	r24, Z
     b58:	88 60       	ori	r24, 0x08	; 8
     b5a:	8c 93       	st	X, r24
	Clr_Bit(TCCR0, TCCR0_WGM00);
     b5c:	a3 e5       	ldi	r26, 0x53	; 83
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	e3 e5       	ldi	r30, 0x53	; 83
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	80 81       	ld	r24, Z
     b66:	8f 7b       	andi	r24, 0xBF	; 191
     b68:	8c 93       	st	X, r24

	/* Setting Compare Match Value */
	OCR0 = 250;
     b6a:	ec e5       	ldi	r30, 0x5C	; 92
     b6c:	f0 e0       	ldi	r31, 0x00	; 0
     b6e:	8a ef       	ldi	r24, 0xFA	; 250
     b70:	80 83       	st	Z, r24


	/* Enabling Output Compare Match Interrupt */
	Set_Bit(TIMSK, TIMSK_OCIE0);
     b72:	a9 e5       	ldi	r26, 0x59	; 89
     b74:	b0 e0       	ldi	r27, 0x00	; 0
     b76:	e9 e5       	ldi	r30, 0x59	; 89
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	80 81       	ld	r24, Z
     b7c:	82 60       	ori	r24, 0x02	; 2
     b7e:	8c 93       	st	X, r24

	/* Choosing Timer 0 Prescaler Division Factor */
	Clr_Bit(TCCR0, TCCR0_CS00);
     b80:	a3 e5       	ldi	r26, 0x53	; 83
     b82:	b0 e0       	ldi	r27, 0x00	; 0
     b84:	e3 e5       	ldi	r30, 0x53	; 83
     b86:	f0 e0       	ldi	r31, 0x00	; 0
     b88:	80 81       	ld	r24, Z
     b8a:	8e 7f       	andi	r24, 0xFE	; 254
     b8c:	8c 93       	st	X, r24
	Set_Bit(TCCR0, TCCR0_CS01);
     b8e:	a3 e5       	ldi	r26, 0x53	; 83
     b90:	b0 e0       	ldi	r27, 0x00	; 0
     b92:	e3 e5       	ldi	r30, 0x53	; 83
     b94:	f0 e0       	ldi	r31, 0x00	; 0
     b96:	80 81       	ld	r24, Z
     b98:	82 60       	ori	r24, 0x02	; 2
     b9a:	8c 93       	st	X, r24
	Clr_Bit(TCCR0, TCCR0_CS02);
     b9c:	a3 e5       	ldi	r26, 0x53	; 83
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	e3 e5       	ldi	r30, 0x53	; 83
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 81       	ld	r24, Z
     ba6:	8b 7f       	andi	r24, 0xFB	; 251
     ba8:	8c 93       	st	X, r24

}
     baa:	cf 91       	pop	r28
     bac:	df 91       	pop	r29
     bae:	08 95       	ret

00000bb0 <Timer0_U8SetCallBack>:



u8 Timer0_U8SetCallBack(void (*Local_PVCallBackFunctoin) (void))
{
     bb0:	df 93       	push	r29
     bb2:	cf 93       	push	r28
     bb4:	00 d0       	rcall	.+0      	; 0xbb6 <Timer0_U8SetCallBack+0x6>
     bb6:	0f 92       	push	r0
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
     bbc:	9b 83       	std	Y+3, r25	; 0x03
     bbe:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ErrorState = Ok;
     bc0:	19 82       	std	Y+1, r1	; 0x01

	if(Local_PVCallBackFunctoin != NULL)
     bc2:	8a 81       	ldd	r24, Y+2	; 0x02
     bc4:	9b 81       	ldd	r25, Y+3	; 0x03
     bc6:	00 97       	sbiw	r24, 0x00	; 0
     bc8:	39 f0       	breq	.+14     	; 0xbd8 <Timer0_U8SetCallBack+0x28>
	{
		Timer0_PVCallBackFunction = Local_PVCallBackFunctoin;
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	9b 81       	ldd	r25, Y+3	; 0x03
     bce:	90 93 77 00 	sts	0x0077, r25
     bd2:	80 93 76 00 	sts	0x0076, r24
     bd6:	02 c0       	rjmp	.+4      	; 0xbdc <Timer0_U8SetCallBack+0x2c>
	}
	else
	{
		Local_u8ErrorState = NOk;
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
     bdc:	89 81       	ldd	r24, Y+1	; 0x01
}
     bde:	0f 90       	pop	r0
     be0:	0f 90       	pop	r0
     be2:	0f 90       	pop	r0
     be4:	cf 91       	pop	r28
     be6:	df 91       	pop	r29
     be8:	08 95       	ret

00000bea <__vector_10>:

ISR(Timer0_COMP)
{
     bea:	1f 92       	push	r1
     bec:	0f 92       	push	r0
     bee:	0f b6       	in	r0, 0x3f	; 63
     bf0:	0f 92       	push	r0
     bf2:	11 24       	eor	r1, r1
     bf4:	2f 93       	push	r18
     bf6:	3f 93       	push	r19
     bf8:	4f 93       	push	r20
     bfa:	5f 93       	push	r21
     bfc:	6f 93       	push	r22
     bfe:	7f 93       	push	r23
     c00:	8f 93       	push	r24
     c02:	9f 93       	push	r25
     c04:	af 93       	push	r26
     c06:	bf 93       	push	r27
     c08:	ef 93       	push	r30
     c0a:	ff 93       	push	r31
     c0c:	df 93       	push	r29
     c0e:	cf 93       	push	r28
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
	if(Timer0_PVCallBackFunction != NULL)
     c14:	80 91 76 00 	lds	r24, 0x0076
     c18:	90 91 77 00 	lds	r25, 0x0077
     c1c:	00 97       	sbiw	r24, 0x00	; 0
     c1e:	29 f0       	breq	.+10     	; 0xc2a <__vector_10+0x40>
	{
		Timer0_PVCallBackFunction();
     c20:	e0 91 76 00 	lds	r30, 0x0076
     c24:	f0 91 77 00 	lds	r31, 0x0077
     c28:	09 95       	icall
	}
}
     c2a:	cf 91       	pop	r28
     c2c:	df 91       	pop	r29
     c2e:	ff 91       	pop	r31
     c30:	ef 91       	pop	r30
     c32:	bf 91       	pop	r27
     c34:	af 91       	pop	r26
     c36:	9f 91       	pop	r25
     c38:	8f 91       	pop	r24
     c3a:	7f 91       	pop	r23
     c3c:	6f 91       	pop	r22
     c3e:	5f 91       	pop	r21
     c40:	4f 91       	pop	r20
     c42:	3f 91       	pop	r19
     c44:	2f 91       	pop	r18
     c46:	0f 90       	pop	r0
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	0f 90       	pop	r0
     c4c:	1f 90       	pop	r1
     c4e:	18 95       	reti

00000c50 <GIE_VoidEnable>:
 */

#include "../Header/GIE_Interface.h"

void GIE_VoidEnable		(void)
{
     c50:	df 93       	push	r29
     c52:	cf 93       	push	r28
     c54:	cd b7       	in	r28, 0x3d	; 61
     c56:	de b7       	in	r29, 0x3e	; 62
	Set_Bit(SREG, SREG_I);
     c58:	af e5       	ldi	r26, 0x5F	; 95
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	ef e5       	ldi	r30, 0x5F	; 95
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	80 81       	ld	r24, Z
     c62:	80 68       	ori	r24, 0x80	; 128
     c64:	8c 93       	st	X, r24
}
     c66:	cf 91       	pop	r28
     c68:	df 91       	pop	r29
     c6a:	08 95       	ret

00000c6c <GIE_VoidDisable>:
void GIE_VoidDisable	(void)
{
     c6c:	df 93       	push	r29
     c6e:	cf 93       	push	r28
     c70:	cd b7       	in	r28, 0x3d	; 61
     c72:	de b7       	in	r29, 0x3e	; 62
	Clr_Bit(SREG, SREG_I);
     c74:	af e5       	ldi	r26, 0x5F	; 95
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	ef e5       	ldi	r30, 0x5F	; 95
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	8f 77       	andi	r24, 0x7F	; 127
     c80:	8c 93       	st	X, r24
}
     c82:	cf 91       	pop	r28
     c84:	df 91       	pop	r29
     c86:	08 95       	ret

00000c88 <DIO_VoidSetPinDir>:
 */

#include "../Header/DIO_Interface.h"

void DIO_VoidSetPinDir(u8 Local_GroupName, u8 Local_PinNumber, u8 Local_PinState)
{
     c88:	df 93       	push	r29
     c8a:	cf 93       	push	r28
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	27 97       	sbiw	r28, 0x07	; 7
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	89 83       	std	Y+1, r24	; 0x01
     c9e:	6a 83       	std	Y+2, r22	; 0x02
     ca0:	4b 83       	std	Y+3, r20	; 0x03
	if((Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
     ca2:	89 81       	ldd	r24, Y+1	; 0x01
     ca4:	85 30       	cpi	r24, 0x05	; 5
     ca6:	08 f0       	brcs	.+2      	; 0xcaa <DIO_VoidSetPinDir+0x22>
     ca8:	f4 c0       	rjmp	.+488    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	88 23       	and	r24, r24
     cae:	09 f4       	brne	.+2      	; 0xcb2 <DIO_VoidSetPinDir+0x2a>
     cb0:	f0 c0       	rjmp	.+480    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
     cb2:	8a 81       	ldd	r24, Y+2	; 0x02
     cb4:	88 30       	cpi	r24, 0x08	; 8
     cb6:	08 f0       	brcs	.+2      	; 0xcba <DIO_VoidSetPinDir+0x32>
     cb8:	ec c0       	rjmp	.+472    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
			&&
			(Local_PinNumber <= DIO_PIN8 && Local_PinNumber >= DIO_PIN1))
	{
		if(Local_PinState == Input)
     cba:	8b 81       	ldd	r24, Y+3	; 0x03
     cbc:	88 23       	and	r24, r24
     cbe:	09 f0       	breq	.+2      	; 0xcc2 <DIO_VoidSetPinDir+0x3a>
     cc0:	75 c0       	rjmp	.+234    	; 0xdac <DIO_VoidSetPinDir+0x124>
		{
			switch(Local_GroupName)
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	28 2f       	mov	r18, r24
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	3f 83       	std	Y+7, r19	; 0x07
     cca:	2e 83       	std	Y+6, r18	; 0x06
     ccc:	8e 81       	ldd	r24, Y+6	; 0x06
     cce:	9f 81       	ldd	r25, Y+7	; 0x07
     cd0:	82 30       	cpi	r24, 0x02	; 2
     cd2:	91 05       	cpc	r25, r1
     cd4:	61 f1       	breq	.+88     	; 0xd2e <DIO_VoidSetPinDir+0xa6>
     cd6:	2e 81       	ldd	r18, Y+6	; 0x06
     cd8:	3f 81       	ldd	r19, Y+7	; 0x07
     cda:	23 30       	cpi	r18, 0x03	; 3
     cdc:	31 05       	cpc	r19, r1
     cde:	34 f4       	brge	.+12     	; 0xcec <DIO_VoidSetPinDir+0x64>
     ce0:	8e 81       	ldd	r24, Y+6	; 0x06
     ce2:	9f 81       	ldd	r25, Y+7	; 0x07
     ce4:	81 30       	cpi	r24, 0x01	; 1
     ce6:	91 05       	cpc	r25, r1
     ce8:	69 f0       	breq	.+26     	; 0xd04 <DIO_VoidSetPinDir+0x7c>
     cea:	d3 c0       	rjmp	.+422    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
     cec:	2e 81       	ldd	r18, Y+6	; 0x06
     cee:	3f 81       	ldd	r19, Y+7	; 0x07
     cf0:	23 30       	cpi	r18, 0x03	; 3
     cf2:	31 05       	cpc	r19, r1
     cf4:	89 f1       	breq	.+98     	; 0xd58 <DIO_VoidSetPinDir+0xd0>
     cf6:	8e 81       	ldd	r24, Y+6	; 0x06
     cf8:	9f 81       	ldd	r25, Y+7	; 0x07
     cfa:	84 30       	cpi	r24, 0x04	; 4
     cfc:	91 05       	cpc	r25, r1
     cfe:	09 f4       	brne	.+2      	; 0xd02 <DIO_VoidSetPinDir+0x7a>
     d00:	40 c0       	rjmp	.+128    	; 0xd82 <DIO_VoidSetPinDir+0xfa>
     d02:	c7 c0       	rjmp	.+398    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
			{
				case DIO_GroupA : DIO_DDRA &= ~(1<<Local_PinNumber);
     d04:	aa e3       	ldi	r26, 0x3A	; 58
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	ea e3       	ldi	r30, 0x3A	; 58
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	48 2f       	mov	r20, r24
     d10:	8a 81       	ldd	r24, Y+2	; 0x02
     d12:	28 2f       	mov	r18, r24
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	02 2e       	mov	r0, r18
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <DIO_VoidSetPinDir+0x9a>
     d1e:	88 0f       	add	r24, r24
     d20:	99 1f       	adc	r25, r25
     d22:	0a 94       	dec	r0
     d24:	e2 f7       	brpl	.-8      	; 0xd1e <DIO_VoidSetPinDir+0x96>
     d26:	80 95       	com	r24
     d28:	84 23       	and	r24, r20
     d2a:	8c 93       	st	X, r24
     d2c:	b2 c0       	rjmp	.+356    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupB : DIO_DDRB &= ~(1<<Local_PinNumber);
     d2e:	a7 e3       	ldi	r26, 0x37	; 55
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	e7 e3       	ldi	r30, 0x37	; 55
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	80 81       	ld	r24, Z
     d38:	48 2f       	mov	r20, r24
     d3a:	8a 81       	ldd	r24, Y+2	; 0x02
     d3c:	28 2f       	mov	r18, r24
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	02 2e       	mov	r0, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <DIO_VoidSetPinDir+0xc4>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	0a 94       	dec	r0
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <DIO_VoidSetPinDir+0xc0>
     d50:	80 95       	com	r24
     d52:	84 23       	and	r24, r20
     d54:	8c 93       	st	X, r24
     d56:	9d c0       	rjmp	.+314    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupC : DIO_DDRC &= ~(1<<Local_PinNumber);
     d58:	a4 e3       	ldi	r26, 0x34	; 52
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	e4 e3       	ldi	r30, 0x34	; 52
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	8a 81       	ldd	r24, Y+2	; 0x02
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 2e       	mov	r0, r18
     d70:	02 c0       	rjmp	.+4      	; 0xd76 <DIO_VoidSetPinDir+0xee>
     d72:	88 0f       	add	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	0a 94       	dec	r0
     d78:	e2 f7       	brpl	.-8      	; 0xd72 <DIO_VoidSetPinDir+0xea>
     d7a:	80 95       	com	r24
     d7c:	84 23       	and	r24, r20
     d7e:	8c 93       	st	X, r24
     d80:	88 c0       	rjmp	.+272    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupD : DIO_DDRD &= ~(1<<Local_PinNumber);
     d82:	a1 e3       	ldi	r26, 0x31	; 49
     d84:	b0 e0       	ldi	r27, 0x00	; 0
     d86:	e1 e3       	ldi	r30, 0x31	; 49
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	80 81       	ld	r24, Z
     d8c:	48 2f       	mov	r20, r24
     d8e:	8a 81       	ldd	r24, Y+2	; 0x02
     d90:	28 2f       	mov	r18, r24
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	02 2e       	mov	r0, r18
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <DIO_VoidSetPinDir+0x118>
     d9c:	88 0f       	add	r24, r24
     d9e:	99 1f       	adc	r25, r25
     da0:	0a 94       	dec	r0
     da2:	e2 f7       	brpl	.-8      	; 0xd9c <DIO_VoidSetPinDir+0x114>
     da4:	80 95       	com	r24
     da6:	84 23       	and	r24, r20
     da8:	8c 93       	st	X, r24
     daa:	73 c0       	rjmp	.+230    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;
			}
		}
		else if(Local_PinState == Output)
     dac:	8b 81       	ldd	r24, Y+3	; 0x03
     dae:	81 30       	cpi	r24, 0x01	; 1
     db0:	09 f0       	breq	.+2      	; 0xdb4 <DIO_VoidSetPinDir+0x12c>
     db2:	6f c0       	rjmp	.+222    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
		{
			switch(Local_GroupName)
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	3d 83       	std	Y+5, r19	; 0x05
     dbc:	2c 83       	std	Y+4, r18	; 0x04
     dbe:	8c 81       	ldd	r24, Y+4	; 0x04
     dc0:	9d 81       	ldd	r25, Y+5	; 0x05
     dc2:	82 30       	cpi	r24, 0x02	; 2
     dc4:	91 05       	cpc	r25, r1
     dc6:	51 f1       	breq	.+84     	; 0xe1c <DIO_VoidSetPinDir+0x194>
     dc8:	2c 81       	ldd	r18, Y+4	; 0x04
     dca:	3d 81       	ldd	r19, Y+5	; 0x05
     dcc:	23 30       	cpi	r18, 0x03	; 3
     dce:	31 05       	cpc	r19, r1
     dd0:	34 f4       	brge	.+12     	; 0xdde <DIO_VoidSetPinDir+0x156>
     dd2:	8c 81       	ldd	r24, Y+4	; 0x04
     dd4:	9d 81       	ldd	r25, Y+5	; 0x05
     dd6:	81 30       	cpi	r24, 0x01	; 1
     dd8:	91 05       	cpc	r25, r1
     dda:	61 f0       	breq	.+24     	; 0xdf4 <DIO_VoidSetPinDir+0x16c>
     ddc:	5a c0       	rjmp	.+180    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
     dde:	2c 81       	ldd	r18, Y+4	; 0x04
     de0:	3d 81       	ldd	r19, Y+5	; 0x05
     de2:	23 30       	cpi	r18, 0x03	; 3
     de4:	31 05       	cpc	r19, r1
     de6:	71 f1       	breq	.+92     	; 0xe44 <DIO_VoidSetPinDir+0x1bc>
     de8:	8c 81       	ldd	r24, Y+4	; 0x04
     dea:	9d 81       	ldd	r25, Y+5	; 0x05
     dec:	84 30       	cpi	r24, 0x04	; 4
     dee:	91 05       	cpc	r25, r1
     df0:	e9 f1       	breq	.+122    	; 0xe6c <DIO_VoidSetPinDir+0x1e4>
     df2:	4f c0       	rjmp	.+158    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
			{
				case DIO_GroupA : DIO_DDRA |= (1<<Local_PinNumber);
     df4:	aa e3       	ldi	r26, 0x3A	; 58
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	ea e3       	ldi	r30, 0x3A	; 58
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	48 2f       	mov	r20, r24
     e00:	8a 81       	ldd	r24, Y+2	; 0x02
     e02:	28 2f       	mov	r18, r24
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	02 2e       	mov	r0, r18
     e0c:	02 c0       	rjmp	.+4      	; 0xe12 <DIO_VoidSetPinDir+0x18a>
     e0e:	88 0f       	add	r24, r24
     e10:	99 1f       	adc	r25, r25
     e12:	0a 94       	dec	r0
     e14:	e2 f7       	brpl	.-8      	; 0xe0e <DIO_VoidSetPinDir+0x186>
     e16:	84 2b       	or	r24, r20
     e18:	8c 93       	st	X, r24
     e1a:	3b c0       	rjmp	.+118    	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupB : DIO_DDRB |= (1<<Local_PinNumber);
     e1c:	a7 e3       	ldi	r26, 0x37	; 55
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	e7 e3       	ldi	r30, 0x37	; 55
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	80 81       	ld	r24, Z
     e26:	48 2f       	mov	r20, r24
     e28:	8a 81       	ldd	r24, Y+2	; 0x02
     e2a:	28 2f       	mov	r18, r24
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	81 e0       	ldi	r24, 0x01	; 1
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	02 2e       	mov	r0, r18
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <DIO_VoidSetPinDir+0x1b2>
     e36:	88 0f       	add	r24, r24
     e38:	99 1f       	adc	r25, r25
     e3a:	0a 94       	dec	r0
     e3c:	e2 f7       	brpl	.-8      	; 0xe36 <DIO_VoidSetPinDir+0x1ae>
     e3e:	84 2b       	or	r24, r20
     e40:	8c 93       	st	X, r24
     e42:	27 c0       	rjmp	.+78     	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupC : DIO_DDRC |= (1<<Local_PinNumber);
     e44:	a4 e3       	ldi	r26, 0x34	; 52
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e4 e3       	ldi	r30, 0x34	; 52
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	80 81       	ld	r24, Z
     e4e:	48 2f       	mov	r20, r24
     e50:	8a 81       	ldd	r24, Y+2	; 0x02
     e52:	28 2f       	mov	r18, r24
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	02 2e       	mov	r0, r18
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <DIO_VoidSetPinDir+0x1da>
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	0a 94       	dec	r0
     e64:	e2 f7       	brpl	.-8      	; 0xe5e <DIO_VoidSetPinDir+0x1d6>
     e66:	84 2b       	or	r24, r20
     e68:	8c 93       	st	X, r24
     e6a:	13 c0       	rjmp	.+38     	; 0xe92 <DIO_VoidSetPinDir+0x20a>
				break;

				case DIO_GroupD : DIO_DDRD |= (1<<Local_PinNumber);
     e6c:	a1 e3       	ldi	r26, 0x31	; 49
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
     e70:	e1 e3       	ldi	r30, 0x31	; 49
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	48 2f       	mov	r20, r24
     e78:	8a 81       	ldd	r24, Y+2	; 0x02
     e7a:	28 2f       	mov	r18, r24
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	02 2e       	mov	r0, r18
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <DIO_VoidSetPinDir+0x202>
     e86:	88 0f       	add	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	0a 94       	dec	r0
     e8c:	e2 f7       	brpl	.-8      	; 0xe86 <DIO_VoidSetPinDir+0x1fe>
     e8e:	84 2b       	or	r24, r20
     e90:	8c 93       	st	X, r24
				break;
			}
		}
	}
}
     e92:	27 96       	adiw	r28, 0x07	; 7
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	f8 94       	cli
     e98:	de bf       	out	0x3e, r29	; 62
     e9a:	0f be       	out	0x3f, r0	; 63
     e9c:	cd bf       	out	0x3d, r28	; 61
     e9e:	cf 91       	pop	r28
     ea0:	df 91       	pop	r29
     ea2:	08 95       	ret

00000ea4 <DIO_VoidSetPinValue>:

void DIO_VoidSetPinValue(u8 Local_GroupName, u8 Local_PinNumber, u8 Local_PinValue)
{
     ea4:	df 93       	push	r29
     ea6:	cf 93       	push	r28
     ea8:	cd b7       	in	r28, 0x3d	; 61
     eaa:	de b7       	in	r29, 0x3e	; 62
     eac:	27 97       	sbiw	r28, 0x07	; 7
     eae:	0f b6       	in	r0, 0x3f	; 63
     eb0:	f8 94       	cli
     eb2:	de bf       	out	0x3e, r29	; 62
     eb4:	0f be       	out	0x3f, r0	; 63
     eb6:	cd bf       	out	0x3d, r28	; 61
     eb8:	89 83       	std	Y+1, r24	; 0x01
     eba:	6a 83       	std	Y+2, r22	; 0x02
     ebc:	4b 83       	std	Y+3, r20	; 0x03
	if((Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
     ebe:	89 81       	ldd	r24, Y+1	; 0x01
     ec0:	85 30       	cpi	r24, 0x05	; 5
     ec2:	08 f0       	brcs	.+2      	; 0xec6 <DIO_VoidSetPinValue+0x22>
     ec4:	f4 c0       	rjmp	.+488    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
     ec6:	89 81       	ldd	r24, Y+1	; 0x01
     ec8:	88 23       	and	r24, r24
     eca:	09 f4       	brne	.+2      	; 0xece <DIO_VoidSetPinValue+0x2a>
     ecc:	f0 c0       	rjmp	.+480    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
     ece:	8a 81       	ldd	r24, Y+2	; 0x02
     ed0:	88 30       	cpi	r24, 0x08	; 8
     ed2:	08 f0       	brcs	.+2      	; 0xed6 <DIO_VoidSetPinValue+0x32>
     ed4:	ec c0       	rjmp	.+472    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
			&&
			(Local_PinNumber <= DIO_PIN8 && Local_PinNumber >= DIO_PIN1))
	{
		if(Local_PinValue == Low)
     ed6:	8b 81       	ldd	r24, Y+3	; 0x03
     ed8:	88 23       	and	r24, r24
     eda:	09 f0       	breq	.+2      	; 0xede <DIO_VoidSetPinValue+0x3a>
     edc:	75 c0       	rjmp	.+234    	; 0xfc8 <DIO_VoidSetPinValue+0x124>
		{
			switch(Local_GroupName)
     ede:	89 81       	ldd	r24, Y+1	; 0x01
     ee0:	28 2f       	mov	r18, r24
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	3f 83       	std	Y+7, r19	; 0x07
     ee6:	2e 83       	std	Y+6, r18	; 0x06
     ee8:	8e 81       	ldd	r24, Y+6	; 0x06
     eea:	9f 81       	ldd	r25, Y+7	; 0x07
     eec:	82 30       	cpi	r24, 0x02	; 2
     eee:	91 05       	cpc	r25, r1
     ef0:	61 f1       	breq	.+88     	; 0xf4a <DIO_VoidSetPinValue+0xa6>
     ef2:	2e 81       	ldd	r18, Y+6	; 0x06
     ef4:	3f 81       	ldd	r19, Y+7	; 0x07
     ef6:	23 30       	cpi	r18, 0x03	; 3
     ef8:	31 05       	cpc	r19, r1
     efa:	34 f4       	brge	.+12     	; 0xf08 <DIO_VoidSetPinValue+0x64>
     efc:	8e 81       	ldd	r24, Y+6	; 0x06
     efe:	9f 81       	ldd	r25, Y+7	; 0x07
     f00:	81 30       	cpi	r24, 0x01	; 1
     f02:	91 05       	cpc	r25, r1
     f04:	69 f0       	breq	.+26     	; 0xf20 <DIO_VoidSetPinValue+0x7c>
     f06:	d3 c0       	rjmp	.+422    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
     f08:	2e 81       	ldd	r18, Y+6	; 0x06
     f0a:	3f 81       	ldd	r19, Y+7	; 0x07
     f0c:	23 30       	cpi	r18, 0x03	; 3
     f0e:	31 05       	cpc	r19, r1
     f10:	89 f1       	breq	.+98     	; 0xf74 <DIO_VoidSetPinValue+0xd0>
     f12:	8e 81       	ldd	r24, Y+6	; 0x06
     f14:	9f 81       	ldd	r25, Y+7	; 0x07
     f16:	84 30       	cpi	r24, 0x04	; 4
     f18:	91 05       	cpc	r25, r1
     f1a:	09 f4       	brne	.+2      	; 0xf1e <DIO_VoidSetPinValue+0x7a>
     f1c:	40 c0       	rjmp	.+128    	; 0xf9e <DIO_VoidSetPinValue+0xfa>
     f1e:	c7 c0       	rjmp	.+398    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
			{
				case DIO_GroupA : DIO_PORTA &= ~(1<<Local_PinNumber);
     f20:	ab e3       	ldi	r26, 0x3B	; 59
     f22:	b0 e0       	ldi	r27, 0x00	; 0
     f24:	eb e3       	ldi	r30, 0x3B	; 59
     f26:	f0 e0       	ldi	r31, 0x00	; 0
     f28:	80 81       	ld	r24, Z
     f2a:	48 2f       	mov	r20, r24
     f2c:	8a 81       	ldd	r24, Y+2	; 0x02
     f2e:	28 2f       	mov	r18, r24
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	81 e0       	ldi	r24, 0x01	; 1
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	02 2e       	mov	r0, r18
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <DIO_VoidSetPinValue+0x9a>
     f3a:	88 0f       	add	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	0a 94       	dec	r0
     f40:	e2 f7       	brpl	.-8      	; 0xf3a <DIO_VoidSetPinValue+0x96>
     f42:	80 95       	com	r24
     f44:	84 23       	and	r24, r20
     f46:	8c 93       	st	X, r24
     f48:	b2 c0       	rjmp	.+356    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupB : DIO_PORTB &= ~(1<<Local_PinNumber);
     f4a:	a8 e3       	ldi	r26, 0x38	; 56
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	e8 e3       	ldi	r30, 0x38	; 56
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	48 2f       	mov	r20, r24
     f56:	8a 81       	ldd	r24, Y+2	; 0x02
     f58:	28 2f       	mov	r18, r24
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	02 2e       	mov	r0, r18
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <DIO_VoidSetPinValue+0xc4>
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	0a 94       	dec	r0
     f6a:	e2 f7       	brpl	.-8      	; 0xf64 <DIO_VoidSetPinValue+0xc0>
     f6c:	80 95       	com	r24
     f6e:	84 23       	and	r24, r20
     f70:	8c 93       	st	X, r24
     f72:	9d c0       	rjmp	.+314    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupC : DIO_PORTC &= ~(1<<Local_PinNumber);
     f74:	a5 e3       	ldi	r26, 0x35	; 53
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e5 e3       	ldi	r30, 0x35	; 53
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	80 81       	ld	r24, Z
     f7e:	48 2f       	mov	r20, r24
     f80:	8a 81       	ldd	r24, Y+2	; 0x02
     f82:	28 2f       	mov	r18, r24
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	02 2e       	mov	r0, r18
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <DIO_VoidSetPinValue+0xee>
     f8e:	88 0f       	add	r24, r24
     f90:	99 1f       	adc	r25, r25
     f92:	0a 94       	dec	r0
     f94:	e2 f7       	brpl	.-8      	; 0xf8e <DIO_VoidSetPinValue+0xea>
     f96:	80 95       	com	r24
     f98:	84 23       	and	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	88 c0       	rjmp	.+272    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupD : DIO_PORTD &= ~(1<<Local_PinNumber);
     f9e:	a2 e3       	ldi	r26, 0x32	; 50
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e2 e3       	ldi	r30, 0x32	; 50
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_VoidSetPinValue+0x118>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_VoidSetPinValue+0x114>
     fc0:	80 95       	com	r24
     fc2:	84 23       	and	r24, r20
     fc4:	8c 93       	st	X, r24
     fc6:	73 c0       	rjmp	.+230    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;
			}
		}
		else if(Local_PinValue == High)
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	81 30       	cpi	r24, 0x01	; 1
     fcc:	09 f0       	breq	.+2      	; 0xfd0 <DIO_VoidSetPinValue+0x12c>
     fce:	6f c0       	rjmp	.+222    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
		{
			switch(Local_GroupName)
     fd0:	89 81       	ldd	r24, Y+1	; 0x01
     fd2:	28 2f       	mov	r18, r24
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	3d 83       	std	Y+5, r19	; 0x05
     fd8:	2c 83       	std	Y+4, r18	; 0x04
     fda:	8c 81       	ldd	r24, Y+4	; 0x04
     fdc:	9d 81       	ldd	r25, Y+5	; 0x05
     fde:	82 30       	cpi	r24, 0x02	; 2
     fe0:	91 05       	cpc	r25, r1
     fe2:	51 f1       	breq	.+84     	; 0x1038 <DIO_VoidSetPinValue+0x194>
     fe4:	2c 81       	ldd	r18, Y+4	; 0x04
     fe6:	3d 81       	ldd	r19, Y+5	; 0x05
     fe8:	23 30       	cpi	r18, 0x03	; 3
     fea:	31 05       	cpc	r19, r1
     fec:	34 f4       	brge	.+12     	; 0xffa <DIO_VoidSetPinValue+0x156>
     fee:	8c 81       	ldd	r24, Y+4	; 0x04
     ff0:	9d 81       	ldd	r25, Y+5	; 0x05
     ff2:	81 30       	cpi	r24, 0x01	; 1
     ff4:	91 05       	cpc	r25, r1
     ff6:	61 f0       	breq	.+24     	; 0x1010 <DIO_VoidSetPinValue+0x16c>
     ff8:	5a c0       	rjmp	.+180    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
     ffa:	2c 81       	ldd	r18, Y+4	; 0x04
     ffc:	3d 81       	ldd	r19, Y+5	; 0x05
     ffe:	23 30       	cpi	r18, 0x03	; 3
    1000:	31 05       	cpc	r19, r1
    1002:	71 f1       	breq	.+92     	; 0x1060 <DIO_VoidSetPinValue+0x1bc>
    1004:	8c 81       	ldd	r24, Y+4	; 0x04
    1006:	9d 81       	ldd	r25, Y+5	; 0x05
    1008:	84 30       	cpi	r24, 0x04	; 4
    100a:	91 05       	cpc	r25, r1
    100c:	e9 f1       	breq	.+122    	; 0x1088 <DIO_VoidSetPinValue+0x1e4>
    100e:	4f c0       	rjmp	.+158    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
			{
				case DIO_GroupA : DIO_PORTA |= (1<<Local_PinNumber);
    1010:	ab e3       	ldi	r26, 0x3B	; 59
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	eb e3       	ldi	r30, 0x3B	; 59
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	80 81       	ld	r24, Z
    101a:	48 2f       	mov	r20, r24
    101c:	8a 81       	ldd	r24, Y+2	; 0x02
    101e:	28 2f       	mov	r18, r24
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	02 2e       	mov	r0, r18
    1028:	02 c0       	rjmp	.+4      	; 0x102e <DIO_VoidSetPinValue+0x18a>
    102a:	88 0f       	add	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	0a 94       	dec	r0
    1030:	e2 f7       	brpl	.-8      	; 0x102a <DIO_VoidSetPinValue+0x186>
    1032:	84 2b       	or	r24, r20
    1034:	8c 93       	st	X, r24
    1036:	3b c0       	rjmp	.+118    	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupB : DIO_PORTB |= (1<<Local_PinNumber);
    1038:	a8 e3       	ldi	r26, 0x38	; 56
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e8 e3       	ldi	r30, 0x38	; 56
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	48 2f       	mov	r20, r24
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	28 2f       	mov	r18, r24
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	02 2e       	mov	r0, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_VoidSetPinValue+0x1b2>
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	0a 94       	dec	r0
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_VoidSetPinValue+0x1ae>
    105a:	84 2b       	or	r24, r20
    105c:	8c 93       	st	X, r24
    105e:	27 c0       	rjmp	.+78     	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupC : DIO_PORTC |= (1<<Local_PinNumber);
    1060:	a5 e3       	ldi	r26, 0x35	; 53
    1062:	b0 e0       	ldi	r27, 0x00	; 0
    1064:	e5 e3       	ldi	r30, 0x35	; 53
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	80 81       	ld	r24, Z
    106a:	48 2f       	mov	r20, r24
    106c:	8a 81       	ldd	r24, Y+2	; 0x02
    106e:	28 2f       	mov	r18, r24
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	02 2e       	mov	r0, r18
    1078:	02 c0       	rjmp	.+4      	; 0x107e <DIO_VoidSetPinValue+0x1da>
    107a:	88 0f       	add	r24, r24
    107c:	99 1f       	adc	r25, r25
    107e:	0a 94       	dec	r0
    1080:	e2 f7       	brpl	.-8      	; 0x107a <DIO_VoidSetPinValue+0x1d6>
    1082:	84 2b       	or	r24, r20
    1084:	8c 93       	st	X, r24
    1086:	13 c0       	rjmp	.+38     	; 0x10ae <DIO_VoidSetPinValue+0x20a>
				break;

				case DIO_GroupD : DIO_PORTD |= (1<<Local_PinNumber);
    1088:	a2 e3       	ldi	r26, 0x32	; 50
    108a:	b0 e0       	ldi	r27, 0x00	; 0
    108c:	e2 e3       	ldi	r30, 0x32	; 50
    108e:	f0 e0       	ldi	r31, 0x00	; 0
    1090:	80 81       	ld	r24, Z
    1092:	48 2f       	mov	r20, r24
    1094:	8a 81       	ldd	r24, Y+2	; 0x02
    1096:	28 2f       	mov	r18, r24
    1098:	30 e0       	ldi	r19, 0x00	; 0
    109a:	81 e0       	ldi	r24, 0x01	; 1
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	02 2e       	mov	r0, r18
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <DIO_VoidSetPinValue+0x202>
    10a2:	88 0f       	add	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	0a 94       	dec	r0
    10a8:	e2 f7       	brpl	.-8      	; 0x10a2 <DIO_VoidSetPinValue+0x1fe>
    10aa:	84 2b       	or	r24, r20
    10ac:	8c 93       	st	X, r24
				break;
			}
		}
	}
}
    10ae:	27 96       	adiw	r28, 0x07	; 7
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	f8 94       	cli
    10b4:	de bf       	out	0x3e, r29	; 62
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	cd bf       	out	0x3d, r28	; 61
    10ba:	cf 91       	pop	r28
    10bc:	df 91       	pop	r29
    10be:	08 95       	ret

000010c0 <DIO_U8GetPinValue>:

u8 DIO_U8GetPinValue(u8 Local_GroupName, u8 Local_PinNumber)
{
    10c0:	df 93       	push	r29
    10c2:	cf 93       	push	r28
    10c4:	00 d0       	rcall	.+0      	; 0x10c6 <DIO_U8GetPinValue+0x6>
    10c6:	00 d0       	rcall	.+0      	; 0x10c8 <DIO_U8GetPinValue+0x8>
    10c8:	0f 92       	push	r0
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62
    10ce:	89 83       	std	Y+1, r24	; 0x01
    10d0:	6a 83       	std	Y+2, r22	; 0x02
	if((Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    10d2:	89 81       	ldd	r24, Y+1	; 0x01
    10d4:	85 30       	cpi	r24, 0x05	; 5
    10d6:	08 f0       	brcs	.+2      	; 0x10da <DIO_U8GetPinValue+0x1a>
    10d8:	74 c0       	rjmp	.+232    	; 0x11c2 <DIO_U8GetPinValue+0x102>
    10da:	89 81       	ldd	r24, Y+1	; 0x01
    10dc:	88 23       	and	r24, r24
    10de:	09 f4       	brne	.+2      	; 0x10e2 <DIO_U8GetPinValue+0x22>
    10e0:	70 c0       	rjmp	.+224    	; 0x11c2 <DIO_U8GetPinValue+0x102>
    10e2:	8a 81       	ldd	r24, Y+2	; 0x02
    10e4:	88 30       	cpi	r24, 0x08	; 8
    10e6:	08 f0       	brcs	.+2      	; 0x10ea <DIO_U8GetPinValue+0x2a>
    10e8:	6c c0       	rjmp	.+216    	; 0x11c2 <DIO_U8GetPinValue+0x102>
			&&
			(Local_PinNumber <= DIO_PIN8 && Local_PinNumber >= DIO_PIN1))
	{
		switch(Local_GroupName)
    10ea:	89 81       	ldd	r24, Y+1	; 0x01
    10ec:	28 2f       	mov	r18, r24
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	3d 83       	std	Y+5, r19	; 0x05
    10f2:	2c 83       	std	Y+4, r18	; 0x04
    10f4:	4c 81       	ldd	r20, Y+4	; 0x04
    10f6:	5d 81       	ldd	r21, Y+5	; 0x05
    10f8:	42 30       	cpi	r20, 0x02	; 2
    10fa:	51 05       	cpc	r21, r1
    10fc:	49 f1       	breq	.+82     	; 0x1150 <DIO_U8GetPinValue+0x90>
    10fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1100:	9d 81       	ldd	r25, Y+5	; 0x05
    1102:	83 30       	cpi	r24, 0x03	; 3
    1104:	91 05       	cpc	r25, r1
    1106:	34 f4       	brge	.+12     	; 0x1114 <DIO_U8GetPinValue+0x54>
    1108:	2c 81       	ldd	r18, Y+4	; 0x04
    110a:	3d 81       	ldd	r19, Y+5	; 0x05
    110c:	21 30       	cpi	r18, 0x01	; 1
    110e:	31 05       	cpc	r19, r1
    1110:	61 f0       	breq	.+24     	; 0x112a <DIO_U8GetPinValue+0x6a>
    1112:	57 c0       	rjmp	.+174    	; 0x11c2 <DIO_U8GetPinValue+0x102>
    1114:	4c 81       	ldd	r20, Y+4	; 0x04
    1116:	5d 81       	ldd	r21, Y+5	; 0x05
    1118:	43 30       	cpi	r20, 0x03	; 3
    111a:	51 05       	cpc	r21, r1
    111c:	61 f1       	breq	.+88     	; 0x1176 <DIO_U8GetPinValue+0xb6>
    111e:	8c 81       	ldd	r24, Y+4	; 0x04
    1120:	9d 81       	ldd	r25, Y+5	; 0x05
    1122:	84 30       	cpi	r24, 0x04	; 4
    1124:	91 05       	cpc	r25, r1
    1126:	d1 f1       	breq	.+116    	; 0x119c <DIO_U8GetPinValue+0xdc>
    1128:	4c c0       	rjmp	.+152    	; 0x11c2 <DIO_U8GetPinValue+0x102>
		{
			case DIO_GroupA : return ((DIO_PINA >> Local_PinNumber) & 0x01);
    112a:	e9 e3       	ldi	r30, 0x39	; 57
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	80 81       	ld	r24, Z
    1130:	28 2f       	mov	r18, r24
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	8a 81       	ldd	r24, Y+2	; 0x02
    1136:	88 2f       	mov	r24, r24
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	a9 01       	movw	r20, r18
    113c:	02 c0       	rjmp	.+4      	; 0x1142 <DIO_U8GetPinValue+0x82>
    113e:	55 95       	asr	r21
    1140:	47 95       	ror	r20
    1142:	8a 95       	dec	r24
    1144:	e2 f7       	brpl	.-8      	; 0x113e <DIO_U8GetPinValue+0x7e>
    1146:	ca 01       	movw	r24, r20
    1148:	58 2f       	mov	r21, r24
    114a:	51 70       	andi	r21, 0x01	; 1
    114c:	5b 83       	std	Y+3, r21	; 0x03
    114e:	3b c0       	rjmp	.+118    	; 0x11c6 <DIO_U8GetPinValue+0x106>
			case DIO_GroupB : return ((DIO_PINB >> Local_PinNumber) & 0x01);
    1150:	e6 e3       	ldi	r30, 0x36	; 54
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	80 81       	ld	r24, Z
    1156:	28 2f       	mov	r18, r24
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	8a 81       	ldd	r24, Y+2	; 0x02
    115c:	88 2f       	mov	r24, r24
    115e:	90 e0       	ldi	r25, 0x00	; 0
    1160:	a9 01       	movw	r20, r18
    1162:	02 c0       	rjmp	.+4      	; 0x1168 <DIO_U8GetPinValue+0xa8>
    1164:	55 95       	asr	r21
    1166:	47 95       	ror	r20
    1168:	8a 95       	dec	r24
    116a:	e2 f7       	brpl	.-8      	; 0x1164 <DIO_U8GetPinValue+0xa4>
    116c:	ca 01       	movw	r24, r20
    116e:	58 2f       	mov	r21, r24
    1170:	51 70       	andi	r21, 0x01	; 1
    1172:	5b 83       	std	Y+3, r21	; 0x03
    1174:	28 c0       	rjmp	.+80     	; 0x11c6 <DIO_U8GetPinValue+0x106>
			case DIO_GroupC : return ((DIO_PINC >> Local_PinNumber) & 0x01);
    1176:	e3 e3       	ldi	r30, 0x33	; 51
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	80 81       	ld	r24, Z
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	8a 81       	ldd	r24, Y+2	; 0x02
    1182:	88 2f       	mov	r24, r24
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	a9 01       	movw	r20, r18
    1188:	02 c0       	rjmp	.+4      	; 0x118e <DIO_U8GetPinValue+0xce>
    118a:	55 95       	asr	r21
    118c:	47 95       	ror	r20
    118e:	8a 95       	dec	r24
    1190:	e2 f7       	brpl	.-8      	; 0x118a <DIO_U8GetPinValue+0xca>
    1192:	ca 01       	movw	r24, r20
    1194:	58 2f       	mov	r21, r24
    1196:	51 70       	andi	r21, 0x01	; 1
    1198:	5b 83       	std	Y+3, r21	; 0x03
    119a:	15 c0       	rjmp	.+42     	; 0x11c6 <DIO_U8GetPinValue+0x106>
			case DIO_GroupD : return ((DIO_PIND >> Local_PinNumber) & 0x01);
    119c:	e0 e3       	ldi	r30, 0x30	; 48
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	28 2f       	mov	r18, r24
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	8a 81       	ldd	r24, Y+2	; 0x02
    11a8:	88 2f       	mov	r24, r24
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	a9 01       	movw	r20, r18
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <DIO_U8GetPinValue+0xf4>
    11b0:	55 95       	asr	r21
    11b2:	47 95       	ror	r20
    11b4:	8a 95       	dec	r24
    11b6:	e2 f7       	brpl	.-8      	; 0x11b0 <DIO_U8GetPinValue+0xf0>
    11b8:	ca 01       	movw	r24, r20
    11ba:	58 2f       	mov	r21, r24
    11bc:	51 70       	andi	r21, 0x01	; 1
    11be:	5b 83       	std	Y+3, r21	; 0x03
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <DIO_U8GetPinValue+0x106>
		}
	}

	return 2;
    11c2:	82 e0       	ldi	r24, 0x02	; 2
    11c4:	8b 83       	std	Y+3, r24	; 0x03
    11c6:	8b 81       	ldd	r24, Y+3	; 0x03
}
    11c8:	0f 90       	pop	r0
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	cf 91       	pop	r28
    11d4:	df 91       	pop	r29
    11d6:	08 95       	ret

000011d8 <DIO_VoidSetPortDir>:


void DIO_VoidSetPortDir(u8 Local_GroupName, u8 Local_PortState)
{
    11d8:	df 93       	push	r29
    11da:	cf 93       	push	r28
    11dc:	00 d0       	rcall	.+0      	; 0x11de <DIO_VoidSetPortDir+0x6>
    11de:	00 d0       	rcall	.+0      	; 0x11e0 <DIO_VoidSetPortDir+0x8>
    11e0:	00 d0       	rcall	.+0      	; 0x11e2 <DIO_VoidSetPortDir+0xa>
    11e2:	cd b7       	in	r28, 0x3d	; 61
    11e4:	de b7       	in	r29, 0x3e	; 62
    11e6:	89 83       	std	Y+1, r24	; 0x01
    11e8:	6a 83       	std	Y+2, r22	; 0x02
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	85 30       	cpi	r24, 0x05	; 5
    11ee:	08 f0       	brcs	.+2      	; 0x11f2 <DIO_VoidSetPortDir+0x1a>
    11f0:	6d c0       	rjmp	.+218    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
    11f2:	89 81       	ldd	r24, Y+1	; 0x01
    11f4:	88 23       	and	r24, r24
    11f6:	09 f4       	brne	.+2      	; 0x11fa <DIO_VoidSetPortDir+0x22>
    11f8:	69 c0       	rjmp	.+210    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
	{
		if(Local_PortState == OUTPUT)
    11fa:	8a 81       	ldd	r24, Y+2	; 0x02
    11fc:	8f 3f       	cpi	r24, 0xFF	; 255
    11fe:	a1 f5       	brne	.+104    	; 0x1268 <DIO_VoidSetPortDir+0x90>
		{
			switch(Local_GroupName)
    1200:	89 81       	ldd	r24, Y+1	; 0x01
    1202:	28 2f       	mov	r18, r24
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	3e 83       	std	Y+6, r19	; 0x06
    1208:	2d 83       	std	Y+5, r18	; 0x05
    120a:	8d 81       	ldd	r24, Y+5	; 0x05
    120c:	9e 81       	ldd	r25, Y+6	; 0x06
    120e:	82 30       	cpi	r24, 0x02	; 2
    1210:	91 05       	cpc	r25, r1
    1212:	d9 f0       	breq	.+54     	; 0x124a <DIO_VoidSetPortDir+0x72>
    1214:	2d 81       	ldd	r18, Y+5	; 0x05
    1216:	3e 81       	ldd	r19, Y+6	; 0x06
    1218:	23 30       	cpi	r18, 0x03	; 3
    121a:	31 05       	cpc	r19, r1
    121c:	34 f4       	brge	.+12     	; 0x122a <DIO_VoidSetPortDir+0x52>
    121e:	8d 81       	ldd	r24, Y+5	; 0x05
    1220:	9e 81       	ldd	r25, Y+6	; 0x06
    1222:	81 30       	cpi	r24, 0x01	; 1
    1224:	91 05       	cpc	r25, r1
    1226:	61 f0       	breq	.+24     	; 0x1240 <DIO_VoidSetPortDir+0x68>
    1228:	51 c0       	rjmp	.+162    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
    122a:	2d 81       	ldd	r18, Y+5	; 0x05
    122c:	3e 81       	ldd	r19, Y+6	; 0x06
    122e:	23 30       	cpi	r18, 0x03	; 3
    1230:	31 05       	cpc	r19, r1
    1232:	81 f0       	breq	.+32     	; 0x1254 <DIO_VoidSetPortDir+0x7c>
    1234:	8d 81       	ldd	r24, Y+5	; 0x05
    1236:	9e 81       	ldd	r25, Y+6	; 0x06
    1238:	84 30       	cpi	r24, 0x04	; 4
    123a:	91 05       	cpc	r25, r1
    123c:	81 f0       	breq	.+32     	; 0x125e <DIO_VoidSetPortDir+0x86>
    123e:	46 c0       	rjmp	.+140    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
			{
				case DIO_GroupA : DIO_DDRA = 0xff;
    1240:	ea e3       	ldi	r30, 0x3A	; 58
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	8f ef       	ldi	r24, 0xFF	; 255
    1246:	80 83       	st	Z, r24
    1248:	41 c0       	rjmp	.+130    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupB : DIO_DDRB = 0xff;
    124a:	e7 e3       	ldi	r30, 0x37	; 55
    124c:	f0 e0       	ldi	r31, 0x00	; 0
    124e:	8f ef       	ldi	r24, 0xFF	; 255
    1250:	80 83       	st	Z, r24
    1252:	3c c0       	rjmp	.+120    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupC : DIO_DDRC = 0xff;
    1254:	e4 e3       	ldi	r30, 0x34	; 52
    1256:	f0 e0       	ldi	r31, 0x00	; 0
    1258:	8f ef       	ldi	r24, 0xFF	; 255
    125a:	80 83       	st	Z, r24
    125c:	37 c0       	rjmp	.+110    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupD : DIO_DDRD = 0xff;
    125e:	e1 e3       	ldi	r30, 0x31	; 49
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	8f ef       	ldi	r24, 0xFF	; 255
    1264:	80 83       	st	Z, r24
    1266:	32 c0       	rjmp	.+100    	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
			}
		}
		else if(Local_PortState == INPUT)
    1268:	8a 81       	ldd	r24, Y+2	; 0x02
    126a:	88 23       	and	r24, r24
    126c:	79 f5       	brne	.+94     	; 0x12cc <DIO_VoidSetPortDir+0xf4>
		{
			switch(Local_GroupName)
    126e:	89 81       	ldd	r24, Y+1	; 0x01
    1270:	28 2f       	mov	r18, r24
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	3c 83       	std	Y+4, r19	; 0x04
    1276:	2b 83       	std	Y+3, r18	; 0x03
    1278:	8b 81       	ldd	r24, Y+3	; 0x03
    127a:	9c 81       	ldd	r25, Y+4	; 0x04
    127c:	82 30       	cpi	r24, 0x02	; 2
    127e:	91 05       	cpc	r25, r1
    1280:	d1 f0       	breq	.+52     	; 0x12b6 <DIO_VoidSetPortDir+0xde>
    1282:	2b 81       	ldd	r18, Y+3	; 0x03
    1284:	3c 81       	ldd	r19, Y+4	; 0x04
    1286:	23 30       	cpi	r18, 0x03	; 3
    1288:	31 05       	cpc	r19, r1
    128a:	34 f4       	brge	.+12     	; 0x1298 <DIO_VoidSetPortDir+0xc0>
    128c:	8b 81       	ldd	r24, Y+3	; 0x03
    128e:	9c 81       	ldd	r25, Y+4	; 0x04
    1290:	81 30       	cpi	r24, 0x01	; 1
    1292:	91 05       	cpc	r25, r1
    1294:	61 f0       	breq	.+24     	; 0x12ae <DIO_VoidSetPortDir+0xd6>
    1296:	1a c0       	rjmp	.+52     	; 0x12cc <DIO_VoidSetPortDir+0xf4>
    1298:	2b 81       	ldd	r18, Y+3	; 0x03
    129a:	3c 81       	ldd	r19, Y+4	; 0x04
    129c:	23 30       	cpi	r18, 0x03	; 3
    129e:	31 05       	cpc	r19, r1
    12a0:	71 f0       	breq	.+28     	; 0x12be <DIO_VoidSetPortDir+0xe6>
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	9c 81       	ldd	r25, Y+4	; 0x04
    12a6:	84 30       	cpi	r24, 0x04	; 4
    12a8:	91 05       	cpc	r25, r1
    12aa:	69 f0       	breq	.+26     	; 0x12c6 <DIO_VoidSetPortDir+0xee>
    12ac:	0f c0       	rjmp	.+30     	; 0x12cc <DIO_VoidSetPortDir+0xf4>
			{
				case DIO_GroupA : DIO_DDRA = 0x00;
    12ae:	ea e3       	ldi	r30, 0x3A	; 58
    12b0:	f0 e0       	ldi	r31, 0x00	; 0
    12b2:	10 82       	st	Z, r1
    12b4:	0b c0       	rjmp	.+22     	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupB : DIO_DDRB = 0x00;
    12b6:	e7 e3       	ldi	r30, 0x37	; 55
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	10 82       	st	Z, r1
    12bc:	07 c0       	rjmp	.+14     	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupC : DIO_DDRC = 0x00;
    12be:	e4 e3       	ldi	r30, 0x34	; 52
    12c0:	f0 e0       	ldi	r31, 0x00	; 0
    12c2:	10 82       	st	Z, r1
    12c4:	03 c0       	rjmp	.+6      	; 0x12cc <DIO_VoidSetPortDir+0xf4>
				break;
				case DIO_GroupD : DIO_DDRD = 0x00;
    12c6:	e1 e3       	ldi	r30, 0x31	; 49
    12c8:	f0 e0       	ldi	r31, 0x00	; 0
    12ca:	10 82       	st	Z, r1
				break;
			}
		}
	}
}
    12cc:	26 96       	adiw	r28, 0x06	; 6
    12ce:	0f b6       	in	r0, 0x3f	; 63
    12d0:	f8 94       	cli
    12d2:	de bf       	out	0x3e, r29	; 62
    12d4:	0f be       	out	0x3f, r0	; 63
    12d6:	cd bf       	out	0x3d, r28	; 61
    12d8:	cf 91       	pop	r28
    12da:	df 91       	pop	r29
    12dc:	08 95       	ret

000012de <DIO_VoidSetPortValue>:

void DIO_VoidSetPortValue(u8 Local_GroupName, u8 Local_PortValue)
{
    12de:	df 93       	push	r29
    12e0:	cf 93       	push	r28
    12e2:	00 d0       	rcall	.+0      	; 0x12e4 <DIO_VoidSetPortValue+0x6>
    12e4:	00 d0       	rcall	.+0      	; 0x12e6 <DIO_VoidSetPortValue+0x8>
    12e6:	00 d0       	rcall	.+0      	; 0x12e8 <DIO_VoidSetPortValue+0xa>
    12e8:	cd b7       	in	r28, 0x3d	; 61
    12ea:	de b7       	in	r29, 0x3e	; 62
    12ec:	89 83       	std	Y+1, r24	; 0x01
    12ee:	6a 83       	std	Y+2, r22	; 0x02
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	85 30       	cpi	r24, 0x05	; 5
    12f4:	08 f0       	brcs	.+2      	; 0x12f8 <DIO_VoidSetPortValue+0x1a>
    12f6:	6d c0       	rjmp	.+218    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
    12f8:	89 81       	ldd	r24, Y+1	; 0x01
    12fa:	88 23       	and	r24, r24
    12fc:	09 f4       	brne	.+2      	; 0x1300 <DIO_VoidSetPortValue+0x22>
    12fe:	69 c0       	rjmp	.+210    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
	{
		if(Local_PortValue == HIGH)
    1300:	8a 81       	ldd	r24, Y+2	; 0x02
    1302:	8f 3f       	cpi	r24, 0xFF	; 255
    1304:	a1 f5       	brne	.+104    	; 0x136e <DIO_VoidSetPortValue+0x90>
		{
			switch(Local_GroupName)
    1306:	89 81       	ldd	r24, Y+1	; 0x01
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	3e 83       	std	Y+6, r19	; 0x06
    130e:	2d 83       	std	Y+5, r18	; 0x05
    1310:	8d 81       	ldd	r24, Y+5	; 0x05
    1312:	9e 81       	ldd	r25, Y+6	; 0x06
    1314:	82 30       	cpi	r24, 0x02	; 2
    1316:	91 05       	cpc	r25, r1
    1318:	d9 f0       	breq	.+54     	; 0x1350 <DIO_VoidSetPortValue+0x72>
    131a:	2d 81       	ldd	r18, Y+5	; 0x05
    131c:	3e 81       	ldd	r19, Y+6	; 0x06
    131e:	23 30       	cpi	r18, 0x03	; 3
    1320:	31 05       	cpc	r19, r1
    1322:	34 f4       	brge	.+12     	; 0x1330 <DIO_VoidSetPortValue+0x52>
    1324:	8d 81       	ldd	r24, Y+5	; 0x05
    1326:	9e 81       	ldd	r25, Y+6	; 0x06
    1328:	81 30       	cpi	r24, 0x01	; 1
    132a:	91 05       	cpc	r25, r1
    132c:	61 f0       	breq	.+24     	; 0x1346 <DIO_VoidSetPortValue+0x68>
    132e:	51 c0       	rjmp	.+162    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
    1330:	2d 81       	ldd	r18, Y+5	; 0x05
    1332:	3e 81       	ldd	r19, Y+6	; 0x06
    1334:	23 30       	cpi	r18, 0x03	; 3
    1336:	31 05       	cpc	r19, r1
    1338:	81 f0       	breq	.+32     	; 0x135a <DIO_VoidSetPortValue+0x7c>
    133a:	8d 81       	ldd	r24, Y+5	; 0x05
    133c:	9e 81       	ldd	r25, Y+6	; 0x06
    133e:	84 30       	cpi	r24, 0x04	; 4
    1340:	91 05       	cpc	r25, r1
    1342:	81 f0       	breq	.+32     	; 0x1364 <DIO_VoidSetPortValue+0x86>
    1344:	46 c0       	rjmp	.+140    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
			{
				case DIO_GroupA : DIO_PORTA = 0xff;
    1346:	eb e3       	ldi	r30, 0x3B	; 59
    1348:	f0 e0       	ldi	r31, 0x00	; 0
    134a:	8f ef       	ldi	r24, 0xFF	; 255
    134c:	80 83       	st	Z, r24
    134e:	41 c0       	rjmp	.+130    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupB : DIO_PORTB = 0xff;
    1350:	e8 e3       	ldi	r30, 0x38	; 56
    1352:	f0 e0       	ldi	r31, 0x00	; 0
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	80 83       	st	Z, r24
    1358:	3c c0       	rjmp	.+120    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupC : DIO_PORTC = 0xff;
    135a:	e5 e3       	ldi	r30, 0x35	; 53
    135c:	f0 e0       	ldi	r31, 0x00	; 0
    135e:	8f ef       	ldi	r24, 0xFF	; 255
    1360:	80 83       	st	Z, r24
    1362:	37 c0       	rjmp	.+110    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupD : DIO_PORTD = 0xff;
    1364:	e2 e3       	ldi	r30, 0x32	; 50
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	8f ef       	ldi	r24, 0xFF	; 255
    136a:	80 83       	st	Z, r24
    136c:	32 c0       	rjmp	.+100    	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
			}
		}
		else if(Local_PortValue == LOW)
    136e:	8a 81       	ldd	r24, Y+2	; 0x02
    1370:	88 23       	and	r24, r24
    1372:	79 f5       	brne	.+94     	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
		{
			switch(Local_GroupName)
    1374:	89 81       	ldd	r24, Y+1	; 0x01
    1376:	28 2f       	mov	r18, r24
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	3c 83       	std	Y+4, r19	; 0x04
    137c:	2b 83       	std	Y+3, r18	; 0x03
    137e:	8b 81       	ldd	r24, Y+3	; 0x03
    1380:	9c 81       	ldd	r25, Y+4	; 0x04
    1382:	82 30       	cpi	r24, 0x02	; 2
    1384:	91 05       	cpc	r25, r1
    1386:	d1 f0       	breq	.+52     	; 0x13bc <DIO_VoidSetPortValue+0xde>
    1388:	2b 81       	ldd	r18, Y+3	; 0x03
    138a:	3c 81       	ldd	r19, Y+4	; 0x04
    138c:	23 30       	cpi	r18, 0x03	; 3
    138e:	31 05       	cpc	r19, r1
    1390:	34 f4       	brge	.+12     	; 0x139e <DIO_VoidSetPortValue+0xc0>
    1392:	8b 81       	ldd	r24, Y+3	; 0x03
    1394:	9c 81       	ldd	r25, Y+4	; 0x04
    1396:	81 30       	cpi	r24, 0x01	; 1
    1398:	91 05       	cpc	r25, r1
    139a:	61 f0       	breq	.+24     	; 0x13b4 <DIO_VoidSetPortValue+0xd6>
    139c:	1a c0       	rjmp	.+52     	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
    139e:	2b 81       	ldd	r18, Y+3	; 0x03
    13a0:	3c 81       	ldd	r19, Y+4	; 0x04
    13a2:	23 30       	cpi	r18, 0x03	; 3
    13a4:	31 05       	cpc	r19, r1
    13a6:	71 f0       	breq	.+28     	; 0x13c4 <DIO_VoidSetPortValue+0xe6>
    13a8:	8b 81       	ldd	r24, Y+3	; 0x03
    13aa:	9c 81       	ldd	r25, Y+4	; 0x04
    13ac:	84 30       	cpi	r24, 0x04	; 4
    13ae:	91 05       	cpc	r25, r1
    13b0:	69 f0       	breq	.+26     	; 0x13cc <DIO_VoidSetPortValue+0xee>
    13b2:	0f c0       	rjmp	.+30     	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
			{
				case DIO_GroupA : DIO_PORTA = 0x00;
    13b4:	eb e3       	ldi	r30, 0x3B	; 59
    13b6:	f0 e0       	ldi	r31, 0x00	; 0
    13b8:	10 82       	st	Z, r1
    13ba:	0b c0       	rjmp	.+22     	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupB : DIO_PORTB = 0x00;
    13bc:	e8 e3       	ldi	r30, 0x38	; 56
    13be:	f0 e0       	ldi	r31, 0x00	; 0
    13c0:	10 82       	st	Z, r1
    13c2:	07 c0       	rjmp	.+14     	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupC : DIO_PORTC = 0x00;
    13c4:	e5 e3       	ldi	r30, 0x35	; 53
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	10 82       	st	Z, r1
    13ca:	03 c0       	rjmp	.+6      	; 0x13d2 <DIO_VoidSetPortValue+0xf4>
				break;
				case DIO_GroupD : DIO_PORTD = 0x00;
    13cc:	e2 e3       	ldi	r30, 0x32	; 50
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	10 82       	st	Z, r1
				break;
			}
		}
	}
}
    13d2:	26 96       	adiw	r28, 0x06	; 6
    13d4:	0f b6       	in	r0, 0x3f	; 63
    13d6:	f8 94       	cli
    13d8:	de bf       	out	0x3e, r29	; 62
    13da:	0f be       	out	0x3f, r0	; 63
    13dc:	cd bf       	out	0x3d, r28	; 61
    13de:	cf 91       	pop	r28
    13e0:	df 91       	pop	r29
    13e2:	08 95       	ret

000013e4 <DIO_U8GetPortValue>:

u8 DIO_U8GetPortValue(u8 Local_GroupName)
{
    13e4:	df 93       	push	r29
    13e6:	cf 93       	push	r28
    13e8:	00 d0       	rcall	.+0      	; 0x13ea <DIO_U8GetPortValue+0x6>
    13ea:	00 d0       	rcall	.+0      	; 0x13ec <DIO_U8GetPortValue+0x8>
    13ec:	cd b7       	in	r28, 0x3d	; 61
    13ee:	de b7       	in	r29, 0x3e	; 62
    13f0:	89 83       	std	Y+1, r24	; 0x01
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    13f2:	89 81       	ldd	r24, Y+1	; 0x01
    13f4:	85 30       	cpi	r24, 0x05	; 5
    13f6:	b8 f5       	brcc	.+110    	; 0x1466 <DIO_U8GetPortValue+0x82>
    13f8:	89 81       	ldd	r24, Y+1	; 0x01
    13fa:	88 23       	and	r24, r24
    13fc:	a1 f1       	breq	.+104    	; 0x1466 <DIO_U8GetPortValue+0x82>
	{
		switch(Local_GroupName)
    13fe:	89 81       	ldd	r24, Y+1	; 0x01
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	3c 83       	std	Y+4, r19	; 0x04
    1406:	2b 83       	std	Y+3, r18	; 0x03
    1408:	8b 81       	ldd	r24, Y+3	; 0x03
    140a:	9c 81       	ldd	r25, Y+4	; 0x04
    140c:	82 30       	cpi	r24, 0x02	; 2
    140e:	91 05       	cpc	r25, r1
    1410:	d9 f0       	breq	.+54     	; 0x1448 <DIO_U8GetPortValue+0x64>
    1412:	2b 81       	ldd	r18, Y+3	; 0x03
    1414:	3c 81       	ldd	r19, Y+4	; 0x04
    1416:	23 30       	cpi	r18, 0x03	; 3
    1418:	31 05       	cpc	r19, r1
    141a:	34 f4       	brge	.+12     	; 0x1428 <DIO_U8GetPortValue+0x44>
    141c:	8b 81       	ldd	r24, Y+3	; 0x03
    141e:	9c 81       	ldd	r25, Y+4	; 0x04
    1420:	81 30       	cpi	r24, 0x01	; 1
    1422:	91 05       	cpc	r25, r1
    1424:	61 f0       	breq	.+24     	; 0x143e <DIO_U8GetPortValue+0x5a>
    1426:	1f c0       	rjmp	.+62     	; 0x1466 <DIO_U8GetPortValue+0x82>
    1428:	2b 81       	ldd	r18, Y+3	; 0x03
    142a:	3c 81       	ldd	r19, Y+4	; 0x04
    142c:	23 30       	cpi	r18, 0x03	; 3
    142e:	31 05       	cpc	r19, r1
    1430:	81 f0       	breq	.+32     	; 0x1452 <DIO_U8GetPortValue+0x6e>
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	9c 81       	ldd	r25, Y+4	; 0x04
    1436:	84 30       	cpi	r24, 0x04	; 4
    1438:	91 05       	cpc	r25, r1
    143a:	81 f0       	breq	.+32     	; 0x145c <DIO_U8GetPortValue+0x78>
    143c:	14 c0       	rjmp	.+40     	; 0x1466 <DIO_U8GetPortValue+0x82>
		{
			case DIO_GroupA : return DIO_PINA;
    143e:	e9 e3       	ldi	r30, 0x39	; 57
    1440:	f0 e0       	ldi	r31, 0x00	; 0
    1442:	90 81       	ld	r25, Z
    1444:	9a 83       	std	Y+2, r25	; 0x02
    1446:	11 c0       	rjmp	.+34     	; 0x146a <DIO_U8GetPortValue+0x86>
			case DIO_GroupB : return DIO_PINB;
    1448:	e6 e3       	ldi	r30, 0x36	; 54
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	20 81       	ld	r18, Z
    144e:	2a 83       	std	Y+2, r18	; 0x02
    1450:	0c c0       	rjmp	.+24     	; 0x146a <DIO_U8GetPortValue+0x86>
			case DIO_GroupC : return DIO_PINC;
    1452:	e3 e3       	ldi	r30, 0x33	; 51
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	30 81       	ld	r19, Z
    1458:	3a 83       	std	Y+2, r19	; 0x02
    145a:	07 c0       	rjmp	.+14     	; 0x146a <DIO_U8GetPortValue+0x86>
			case DIO_GroupD : return DIO_PIND;
    145c:	e0 e3       	ldi	r30, 0x30	; 48
    145e:	f0 e0       	ldi	r31, 0x00	; 0
    1460:	80 81       	ld	r24, Z
    1462:	8a 83       	std	Y+2, r24	; 0x02
    1464:	02 c0       	rjmp	.+4      	; 0x146a <DIO_U8GetPortValue+0x86>
		}
	}
	return 2;
    1466:	92 e0       	ldi	r25, 0x02	; 2
    1468:	9a 83       	std	Y+2, r25	; 0x02
    146a:	8a 81       	ldd	r24, Y+2	; 0x02
}
    146c:	0f 90       	pop	r0
    146e:	0f 90       	pop	r0
    1470:	0f 90       	pop	r0
    1472:	0f 90       	pop	r0
    1474:	cf 91       	pop	r28
    1476:	df 91       	pop	r29
    1478:	08 95       	ret

0000147a <DIO_VoidPinInternalPullUpControl>:

void DIO_VoidPinInternalPullUpControl(u8 Local_GroupName, u8 Local_PinNumber, u8 Local_PullUpState)
{
    147a:	df 93       	push	r29
    147c:	cf 93       	push	r28
    147e:	cd b7       	in	r28, 0x3d	; 61
    1480:	de b7       	in	r29, 0x3e	; 62
    1482:	27 97       	sbiw	r28, 0x07	; 7
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	de bf       	out	0x3e, r29	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	cd bf       	out	0x3d, r28	; 61
    148e:	89 83       	std	Y+1, r24	; 0x01
    1490:	6a 83       	std	Y+2, r22	; 0x02
    1492:	4b 83       	std	Y+3, r20	; 0x03
	if((Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    1494:	89 81       	ldd	r24, Y+1	; 0x01
    1496:	85 30       	cpi	r24, 0x05	; 5
    1498:	08 f0       	brcs	.+2      	; 0x149c <DIO_VoidPinInternalPullUpControl+0x22>
    149a:	f4 c0       	rjmp	.+488    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
    149c:	89 81       	ldd	r24, Y+1	; 0x01
    149e:	88 23       	and	r24, r24
    14a0:	09 f4       	brne	.+2      	; 0x14a4 <DIO_VoidPinInternalPullUpControl+0x2a>
    14a2:	f0 c0       	rjmp	.+480    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
    14a4:	8a 81       	ldd	r24, Y+2	; 0x02
    14a6:	88 30       	cpi	r24, 0x08	; 8
    14a8:	08 f0       	brcs	.+2      	; 0x14ac <DIO_VoidPinInternalPullUpControl+0x32>
    14aa:	ec c0       	rjmp	.+472    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
			&&
			(Local_PinNumber <= DIO_PIN8 && Local_PinNumber >= DIO_PIN1))
	{
		if(Local_PullUpState == DIO_PullUpDis)
    14ac:	8b 81       	ldd	r24, Y+3	; 0x03
    14ae:	88 23       	and	r24, r24
    14b0:	09 f0       	breq	.+2      	; 0x14b4 <DIO_VoidPinInternalPullUpControl+0x3a>
    14b2:	75 c0       	rjmp	.+234    	; 0x159e <DIO_VoidPinInternalPullUpControl+0x124>
		{
			switch(Local_GroupName)
    14b4:	89 81       	ldd	r24, Y+1	; 0x01
    14b6:	28 2f       	mov	r18, r24
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	3f 83       	std	Y+7, r19	; 0x07
    14bc:	2e 83       	std	Y+6, r18	; 0x06
    14be:	8e 81       	ldd	r24, Y+6	; 0x06
    14c0:	9f 81       	ldd	r25, Y+7	; 0x07
    14c2:	82 30       	cpi	r24, 0x02	; 2
    14c4:	91 05       	cpc	r25, r1
    14c6:	61 f1       	breq	.+88     	; 0x1520 <DIO_VoidPinInternalPullUpControl+0xa6>
    14c8:	2e 81       	ldd	r18, Y+6	; 0x06
    14ca:	3f 81       	ldd	r19, Y+7	; 0x07
    14cc:	23 30       	cpi	r18, 0x03	; 3
    14ce:	31 05       	cpc	r19, r1
    14d0:	34 f4       	brge	.+12     	; 0x14de <DIO_VoidPinInternalPullUpControl+0x64>
    14d2:	8e 81       	ldd	r24, Y+6	; 0x06
    14d4:	9f 81       	ldd	r25, Y+7	; 0x07
    14d6:	81 30       	cpi	r24, 0x01	; 1
    14d8:	91 05       	cpc	r25, r1
    14da:	69 f0       	breq	.+26     	; 0x14f6 <DIO_VoidPinInternalPullUpControl+0x7c>
    14dc:	d3 c0       	rjmp	.+422    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
    14de:	2e 81       	ldd	r18, Y+6	; 0x06
    14e0:	3f 81       	ldd	r19, Y+7	; 0x07
    14e2:	23 30       	cpi	r18, 0x03	; 3
    14e4:	31 05       	cpc	r19, r1
    14e6:	89 f1       	breq	.+98     	; 0x154a <DIO_VoidPinInternalPullUpControl+0xd0>
    14e8:	8e 81       	ldd	r24, Y+6	; 0x06
    14ea:	9f 81       	ldd	r25, Y+7	; 0x07
    14ec:	84 30       	cpi	r24, 0x04	; 4
    14ee:	91 05       	cpc	r25, r1
    14f0:	09 f4       	brne	.+2      	; 0x14f4 <DIO_VoidPinInternalPullUpControl+0x7a>
    14f2:	40 c0       	rjmp	.+128    	; 0x1574 <DIO_VoidPinInternalPullUpControl+0xfa>
    14f4:	c7 c0       	rjmp	.+398    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
			{
				case DIO_GroupA : DIO_PORTA &= ~(1<<Local_PinNumber);
    14f6:	ab e3       	ldi	r26, 0x3B	; 59
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	eb e3       	ldi	r30, 0x3B	; 59
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	48 2f       	mov	r20, r24
    1502:	8a 81       	ldd	r24, Y+2	; 0x02
    1504:	28 2f       	mov	r18, r24
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	81 e0       	ldi	r24, 0x01	; 1
    150a:	90 e0       	ldi	r25, 0x00	; 0
    150c:	02 2e       	mov	r0, r18
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <DIO_VoidPinInternalPullUpControl+0x9a>
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	0a 94       	dec	r0
    1516:	e2 f7       	brpl	.-8      	; 0x1510 <DIO_VoidPinInternalPullUpControl+0x96>
    1518:	80 95       	com	r24
    151a:	84 23       	and	r24, r20
    151c:	8c 93       	st	X, r24
    151e:	b2 c0       	rjmp	.+356    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupB : DIO_PORTB &= ~(1<<Local_PinNumber);
    1520:	a8 e3       	ldi	r26, 0x38	; 56
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	e8 e3       	ldi	r30, 0x38	; 56
    1526:	f0 e0       	ldi	r31, 0x00	; 0
    1528:	80 81       	ld	r24, Z
    152a:	48 2f       	mov	r20, r24
    152c:	8a 81       	ldd	r24, Y+2	; 0x02
    152e:	28 2f       	mov	r18, r24
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	02 2e       	mov	r0, r18
    1538:	02 c0       	rjmp	.+4      	; 0x153e <DIO_VoidPinInternalPullUpControl+0xc4>
    153a:	88 0f       	add	r24, r24
    153c:	99 1f       	adc	r25, r25
    153e:	0a 94       	dec	r0
    1540:	e2 f7       	brpl	.-8      	; 0x153a <DIO_VoidPinInternalPullUpControl+0xc0>
    1542:	80 95       	com	r24
    1544:	84 23       	and	r24, r20
    1546:	8c 93       	st	X, r24
    1548:	9d c0       	rjmp	.+314    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupC : DIO_PORTC &= ~(1<<Local_PinNumber);
    154a:	a5 e3       	ldi	r26, 0x35	; 53
    154c:	b0 e0       	ldi	r27, 0x00	; 0
    154e:	e5 e3       	ldi	r30, 0x35	; 53
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	80 81       	ld	r24, Z
    1554:	48 2f       	mov	r20, r24
    1556:	8a 81       	ldd	r24, Y+2	; 0x02
    1558:	28 2f       	mov	r18, r24
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	02 2e       	mov	r0, r18
    1562:	02 c0       	rjmp	.+4      	; 0x1568 <DIO_VoidPinInternalPullUpControl+0xee>
    1564:	88 0f       	add	r24, r24
    1566:	99 1f       	adc	r25, r25
    1568:	0a 94       	dec	r0
    156a:	e2 f7       	brpl	.-8      	; 0x1564 <DIO_VoidPinInternalPullUpControl+0xea>
    156c:	80 95       	com	r24
    156e:	84 23       	and	r24, r20
    1570:	8c 93       	st	X, r24
    1572:	88 c0       	rjmp	.+272    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupD : DIO_PORTD &= ~(1<<Local_PinNumber);
    1574:	a2 e3       	ldi	r26, 0x32	; 50
    1576:	b0 e0       	ldi	r27, 0x00	; 0
    1578:	e2 e3       	ldi	r30, 0x32	; 50
    157a:	f0 e0       	ldi	r31, 0x00	; 0
    157c:	80 81       	ld	r24, Z
    157e:	48 2f       	mov	r20, r24
    1580:	8a 81       	ldd	r24, Y+2	; 0x02
    1582:	28 2f       	mov	r18, r24
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	02 2e       	mov	r0, r18
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <DIO_VoidPinInternalPullUpControl+0x118>
    158e:	88 0f       	add	r24, r24
    1590:	99 1f       	adc	r25, r25
    1592:	0a 94       	dec	r0
    1594:	e2 f7       	brpl	.-8      	; 0x158e <DIO_VoidPinInternalPullUpControl+0x114>
    1596:	80 95       	com	r24
    1598:	84 23       	and	r24, r20
    159a:	8c 93       	st	X, r24
    159c:	73 c0       	rjmp	.+230    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;
			}
		}

		else if(Local_PullUpState == DIO_PullUpEn)
    159e:	8b 81       	ldd	r24, Y+3	; 0x03
    15a0:	81 30       	cpi	r24, 0x01	; 1
    15a2:	09 f0       	breq	.+2      	; 0x15a6 <DIO_VoidPinInternalPullUpControl+0x12c>
    15a4:	6f c0       	rjmp	.+222    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
		{
			switch(Local_GroupName)
    15a6:	89 81       	ldd	r24, Y+1	; 0x01
    15a8:	28 2f       	mov	r18, r24
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	3d 83       	std	Y+5, r19	; 0x05
    15ae:	2c 83       	std	Y+4, r18	; 0x04
    15b0:	8c 81       	ldd	r24, Y+4	; 0x04
    15b2:	9d 81       	ldd	r25, Y+5	; 0x05
    15b4:	82 30       	cpi	r24, 0x02	; 2
    15b6:	91 05       	cpc	r25, r1
    15b8:	51 f1       	breq	.+84     	; 0x160e <DIO_VoidPinInternalPullUpControl+0x194>
    15ba:	2c 81       	ldd	r18, Y+4	; 0x04
    15bc:	3d 81       	ldd	r19, Y+5	; 0x05
    15be:	23 30       	cpi	r18, 0x03	; 3
    15c0:	31 05       	cpc	r19, r1
    15c2:	34 f4       	brge	.+12     	; 0x15d0 <DIO_VoidPinInternalPullUpControl+0x156>
    15c4:	8c 81       	ldd	r24, Y+4	; 0x04
    15c6:	9d 81       	ldd	r25, Y+5	; 0x05
    15c8:	81 30       	cpi	r24, 0x01	; 1
    15ca:	91 05       	cpc	r25, r1
    15cc:	61 f0       	breq	.+24     	; 0x15e6 <DIO_VoidPinInternalPullUpControl+0x16c>
    15ce:	5a c0       	rjmp	.+180    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
    15d0:	2c 81       	ldd	r18, Y+4	; 0x04
    15d2:	3d 81       	ldd	r19, Y+5	; 0x05
    15d4:	23 30       	cpi	r18, 0x03	; 3
    15d6:	31 05       	cpc	r19, r1
    15d8:	71 f1       	breq	.+92     	; 0x1636 <DIO_VoidPinInternalPullUpControl+0x1bc>
    15da:	8c 81       	ldd	r24, Y+4	; 0x04
    15dc:	9d 81       	ldd	r25, Y+5	; 0x05
    15de:	84 30       	cpi	r24, 0x04	; 4
    15e0:	91 05       	cpc	r25, r1
    15e2:	e9 f1       	breq	.+122    	; 0x165e <DIO_VoidPinInternalPullUpControl+0x1e4>
    15e4:	4f c0       	rjmp	.+158    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
			{
				case DIO_GroupA : DIO_PORTA |= (1<<Local_PinNumber);
    15e6:	ab e3       	ldi	r26, 0x3B	; 59
    15e8:	b0 e0       	ldi	r27, 0x00	; 0
    15ea:	eb e3       	ldi	r30, 0x3B	; 59
    15ec:	f0 e0       	ldi	r31, 0x00	; 0
    15ee:	80 81       	ld	r24, Z
    15f0:	48 2f       	mov	r20, r24
    15f2:	8a 81       	ldd	r24, Y+2	; 0x02
    15f4:	28 2f       	mov	r18, r24
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	02 2e       	mov	r0, r18
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <DIO_VoidPinInternalPullUpControl+0x18a>
    1600:	88 0f       	add	r24, r24
    1602:	99 1f       	adc	r25, r25
    1604:	0a 94       	dec	r0
    1606:	e2 f7       	brpl	.-8      	; 0x1600 <DIO_VoidPinInternalPullUpControl+0x186>
    1608:	84 2b       	or	r24, r20
    160a:	8c 93       	st	X, r24
    160c:	3b c0       	rjmp	.+118    	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupB : DIO_PORTB |= (1<<Local_PinNumber);
    160e:	a8 e3       	ldi	r26, 0x38	; 56
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	e8 e3       	ldi	r30, 0x38	; 56
    1614:	f0 e0       	ldi	r31, 0x00	; 0
    1616:	80 81       	ld	r24, Z
    1618:	48 2f       	mov	r20, r24
    161a:	8a 81       	ldd	r24, Y+2	; 0x02
    161c:	28 2f       	mov	r18, r24
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	02 2e       	mov	r0, r18
    1626:	02 c0       	rjmp	.+4      	; 0x162c <DIO_VoidPinInternalPullUpControl+0x1b2>
    1628:	88 0f       	add	r24, r24
    162a:	99 1f       	adc	r25, r25
    162c:	0a 94       	dec	r0
    162e:	e2 f7       	brpl	.-8      	; 0x1628 <DIO_VoidPinInternalPullUpControl+0x1ae>
    1630:	84 2b       	or	r24, r20
    1632:	8c 93       	st	X, r24
    1634:	27 c0       	rjmp	.+78     	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupC : DIO_PORTC |= (1<<Local_PinNumber);
    1636:	a5 e3       	ldi	r26, 0x35	; 53
    1638:	b0 e0       	ldi	r27, 0x00	; 0
    163a:	e5 e3       	ldi	r30, 0x35	; 53
    163c:	f0 e0       	ldi	r31, 0x00	; 0
    163e:	80 81       	ld	r24, Z
    1640:	48 2f       	mov	r20, r24
    1642:	8a 81       	ldd	r24, Y+2	; 0x02
    1644:	28 2f       	mov	r18, r24
    1646:	30 e0       	ldi	r19, 0x00	; 0
    1648:	81 e0       	ldi	r24, 0x01	; 1
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	02 2e       	mov	r0, r18
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <DIO_VoidPinInternalPullUpControl+0x1da>
    1650:	88 0f       	add	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	0a 94       	dec	r0
    1656:	e2 f7       	brpl	.-8      	; 0x1650 <DIO_VoidPinInternalPullUpControl+0x1d6>
    1658:	84 2b       	or	r24, r20
    165a:	8c 93       	st	X, r24
    165c:	13 c0       	rjmp	.+38     	; 0x1684 <DIO_VoidPinInternalPullUpControl+0x20a>
				break;

				case DIO_GroupD : DIO_PORTD |= (1<<Local_PinNumber);
    165e:	a2 e3       	ldi	r26, 0x32	; 50
    1660:	b0 e0       	ldi	r27, 0x00	; 0
    1662:	e2 e3       	ldi	r30, 0x32	; 50
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	80 81       	ld	r24, Z
    1668:	48 2f       	mov	r20, r24
    166a:	8a 81       	ldd	r24, Y+2	; 0x02
    166c:	28 2f       	mov	r18, r24
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	02 2e       	mov	r0, r18
    1676:	02 c0       	rjmp	.+4      	; 0x167c <DIO_VoidPinInternalPullUpControl+0x202>
    1678:	88 0f       	add	r24, r24
    167a:	99 1f       	adc	r25, r25
    167c:	0a 94       	dec	r0
    167e:	e2 f7       	brpl	.-8      	; 0x1678 <DIO_VoidPinInternalPullUpControl+0x1fe>
    1680:	84 2b       	or	r24, r20
    1682:	8c 93       	st	X, r24
				break;
			}
		}
	}
}
    1684:	27 96       	adiw	r28, 0x07	; 7
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	f8 94       	cli
    168a:	de bf       	out	0x3e, r29	; 62
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	cd bf       	out	0x3d, r28	; 61
    1690:	cf 91       	pop	r28
    1692:	df 91       	pop	r29
    1694:	08 95       	ret

00001696 <DIO_VoidPortInternalPullUpControl>:

void DIO_VoidPortInternalPullUpControl(u8 Local_GroupName, u8 Local_PullUpState)
{
    1696:	df 93       	push	r29
    1698:	cf 93       	push	r28
    169a:	00 d0       	rcall	.+0      	; 0x169c <DIO_VoidPortInternalPullUpControl+0x6>
    169c:	00 d0       	rcall	.+0      	; 0x169e <DIO_VoidPortInternalPullUpControl+0x8>
    169e:	00 d0       	rcall	.+0      	; 0x16a0 <DIO_VoidPortInternalPullUpControl+0xa>
    16a0:	cd b7       	in	r28, 0x3d	; 61
    16a2:	de b7       	in	r29, 0x3e	; 62
    16a4:	89 83       	std	Y+1, r24	; 0x01
    16a6:	6a 83       	std	Y+2, r22	; 0x02
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    16a8:	89 81       	ldd	r24, Y+1	; 0x01
    16aa:	85 30       	cpi	r24, 0x05	; 5
    16ac:	08 f0       	brcs	.+2      	; 0x16b0 <DIO_VoidPortInternalPullUpControl+0x1a>
    16ae:	6d c0       	rjmp	.+218    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
    16b0:	89 81       	ldd	r24, Y+1	; 0x01
    16b2:	88 23       	and	r24, r24
    16b4:	09 f4       	brne	.+2      	; 0x16b8 <DIO_VoidPortInternalPullUpControl+0x22>
    16b6:	69 c0       	rjmp	.+210    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
	{
		if(Local_PullUpState == DIO_PullUpDis)
    16b8:	8a 81       	ldd	r24, Y+2	; 0x02
    16ba:	88 23       	and	r24, r24
    16bc:	81 f5       	brne	.+96     	; 0x171e <DIO_VoidPortInternalPullUpControl+0x88>
		{
			switch(Local_GroupName)
    16be:	89 81       	ldd	r24, Y+1	; 0x01
    16c0:	28 2f       	mov	r18, r24
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	3e 83       	std	Y+6, r19	; 0x06
    16c6:	2d 83       	std	Y+5, r18	; 0x05
    16c8:	8d 81       	ldd	r24, Y+5	; 0x05
    16ca:	9e 81       	ldd	r25, Y+6	; 0x06
    16cc:	82 30       	cpi	r24, 0x02	; 2
    16ce:	91 05       	cpc	r25, r1
    16d0:	d1 f0       	breq	.+52     	; 0x1706 <DIO_VoidPortInternalPullUpControl+0x70>
    16d2:	2d 81       	ldd	r18, Y+5	; 0x05
    16d4:	3e 81       	ldd	r19, Y+6	; 0x06
    16d6:	23 30       	cpi	r18, 0x03	; 3
    16d8:	31 05       	cpc	r19, r1
    16da:	34 f4       	brge	.+12     	; 0x16e8 <DIO_VoidPortInternalPullUpControl+0x52>
    16dc:	8d 81       	ldd	r24, Y+5	; 0x05
    16de:	9e 81       	ldd	r25, Y+6	; 0x06
    16e0:	81 30       	cpi	r24, 0x01	; 1
    16e2:	91 05       	cpc	r25, r1
    16e4:	61 f0       	breq	.+24     	; 0x16fe <DIO_VoidPortInternalPullUpControl+0x68>
    16e6:	51 c0       	rjmp	.+162    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
    16e8:	2d 81       	ldd	r18, Y+5	; 0x05
    16ea:	3e 81       	ldd	r19, Y+6	; 0x06
    16ec:	23 30       	cpi	r18, 0x03	; 3
    16ee:	31 05       	cpc	r19, r1
    16f0:	71 f0       	breq	.+28     	; 0x170e <DIO_VoidPortInternalPullUpControl+0x78>
    16f2:	8d 81       	ldd	r24, Y+5	; 0x05
    16f4:	9e 81       	ldd	r25, Y+6	; 0x06
    16f6:	84 30       	cpi	r24, 0x04	; 4
    16f8:	91 05       	cpc	r25, r1
    16fa:	69 f0       	breq	.+26     	; 0x1716 <DIO_VoidPortInternalPullUpControl+0x80>
    16fc:	46 c0       	rjmp	.+140    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
			{
				case DIO_GroupA : DIO_PORTA = 0x00;
    16fe:	eb e3       	ldi	r30, 0x3B	; 59
    1700:	f0 e0       	ldi	r31, 0x00	; 0
    1702:	10 82       	st	Z, r1
    1704:	42 c0       	rjmp	.+132    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupB : DIO_PORTB = 0x00;
    1706:	e8 e3       	ldi	r30, 0x38	; 56
    1708:	f0 e0       	ldi	r31, 0x00	; 0
    170a:	10 82       	st	Z, r1
    170c:	3e c0       	rjmp	.+124    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupC : DIO_PORTC = 0x00;
    170e:	e5 e3       	ldi	r30, 0x35	; 53
    1710:	f0 e0       	ldi	r31, 0x00	; 0
    1712:	10 82       	st	Z, r1
    1714:	3a c0       	rjmp	.+116    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupD : DIO_PORTD = 0x00;
    1716:	e2 e3       	ldi	r30, 0x32	; 50
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	10 82       	st	Z, r1
    171c:	36 c0       	rjmp	.+108    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;
			}
		}

		else if(Local_PullUpState == DIO_PullUpEn)
    171e:	8a 81       	ldd	r24, Y+2	; 0x02
    1720:	81 30       	cpi	r24, 0x01	; 1
    1722:	99 f5       	brne	.+102    	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
		{
			switch(Local_GroupName)
    1724:	89 81       	ldd	r24, Y+1	; 0x01
    1726:	28 2f       	mov	r18, r24
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	3c 83       	std	Y+4, r19	; 0x04
    172c:	2b 83       	std	Y+3, r18	; 0x03
    172e:	8b 81       	ldd	r24, Y+3	; 0x03
    1730:	9c 81       	ldd	r25, Y+4	; 0x04
    1732:	82 30       	cpi	r24, 0x02	; 2
    1734:	91 05       	cpc	r25, r1
    1736:	d9 f0       	breq	.+54     	; 0x176e <DIO_VoidPortInternalPullUpControl+0xd8>
    1738:	2b 81       	ldd	r18, Y+3	; 0x03
    173a:	3c 81       	ldd	r19, Y+4	; 0x04
    173c:	23 30       	cpi	r18, 0x03	; 3
    173e:	31 05       	cpc	r19, r1
    1740:	34 f4       	brge	.+12     	; 0x174e <DIO_VoidPortInternalPullUpControl+0xb8>
    1742:	8b 81       	ldd	r24, Y+3	; 0x03
    1744:	9c 81       	ldd	r25, Y+4	; 0x04
    1746:	81 30       	cpi	r24, 0x01	; 1
    1748:	91 05       	cpc	r25, r1
    174a:	61 f0       	breq	.+24     	; 0x1764 <DIO_VoidPortInternalPullUpControl+0xce>
    174c:	1e c0       	rjmp	.+60     	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
    174e:	2b 81       	ldd	r18, Y+3	; 0x03
    1750:	3c 81       	ldd	r19, Y+4	; 0x04
    1752:	23 30       	cpi	r18, 0x03	; 3
    1754:	31 05       	cpc	r19, r1
    1756:	81 f0       	breq	.+32     	; 0x1778 <DIO_VoidPortInternalPullUpControl+0xe2>
    1758:	8b 81       	ldd	r24, Y+3	; 0x03
    175a:	9c 81       	ldd	r25, Y+4	; 0x04
    175c:	84 30       	cpi	r24, 0x04	; 4
    175e:	91 05       	cpc	r25, r1
    1760:	81 f0       	breq	.+32     	; 0x1782 <DIO_VoidPortInternalPullUpControl+0xec>
    1762:	13 c0       	rjmp	.+38     	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
			{
				case DIO_GroupA : DIO_PORTA = 0xff;
    1764:	eb e3       	ldi	r30, 0x3B	; 59
    1766:	f0 e0       	ldi	r31, 0x00	; 0
    1768:	8f ef       	ldi	r24, 0xFF	; 255
    176a:	80 83       	st	Z, r24
    176c:	0e c0       	rjmp	.+28     	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupB : DIO_PORTB = 0xff;
    176e:	e8 e3       	ldi	r30, 0x38	; 56
    1770:	f0 e0       	ldi	r31, 0x00	; 0
    1772:	8f ef       	ldi	r24, 0xFF	; 255
    1774:	80 83       	st	Z, r24
    1776:	09 c0       	rjmp	.+18     	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupC : DIO_PORTC = 0xff;
    1778:	e5 e3       	ldi	r30, 0x35	; 53
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	8f ef       	ldi	r24, 0xFF	; 255
    177e:	80 83       	st	Z, r24
    1780:	04 c0       	rjmp	.+8      	; 0x178a <DIO_VoidPortInternalPullUpControl+0xf4>
				break;

				case DIO_GroupD : DIO_PORTD = 0xff;
    1782:	e2 e3       	ldi	r30, 0x32	; 50
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	8f ef       	ldi	r24, 0xFF	; 255
    1788:	80 83       	st	Z, r24
				break;
			}
		}
	}
}
    178a:	26 96       	adiw	r28, 0x06	; 6
    178c:	0f b6       	in	r0, 0x3f	; 63
    178e:	f8 94       	cli
    1790:	de bf       	out	0x3e, r29	; 62
    1792:	0f be       	out	0x3f, r0	; 63
    1794:	cd bf       	out	0x3d, r28	; 61
    1796:	cf 91       	pop	r28
    1798:	df 91       	pop	r29
    179a:	08 95       	ret

0000179c <DIO_VoidManualSetPortDir>:

void DIO_VoidManualSetPortDir(u8 Local_GroupName, u8 Local_PortState)
{
    179c:	df 93       	push	r29
    179e:	cf 93       	push	r28
    17a0:	00 d0       	rcall	.+0      	; 0x17a2 <DIO_VoidManualSetPortDir+0x6>
    17a2:	00 d0       	rcall	.+0      	; 0x17a4 <DIO_VoidManualSetPortDir+0x8>
    17a4:	cd b7       	in	r28, 0x3d	; 61
    17a6:	de b7       	in	r29, 0x3e	; 62
    17a8:	89 83       	std	Y+1, r24	; 0x01
    17aa:	6a 83       	std	Y+2, r22	; 0x02
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    17ac:	89 81       	ldd	r24, Y+1	; 0x01
    17ae:	85 30       	cpi	r24, 0x05	; 5
    17b0:	b0 f5       	brcc	.+108    	; 0x181e <DIO_VoidManualSetPortDir+0x82>
    17b2:	89 81       	ldd	r24, Y+1	; 0x01
    17b4:	88 23       	and	r24, r24
    17b6:	99 f1       	breq	.+102    	; 0x181e <DIO_VoidManualSetPortDir+0x82>
	{
		switch(Local_GroupName)
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	28 2f       	mov	r18, r24
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	3c 83       	std	Y+4, r19	; 0x04
    17c0:	2b 83       	std	Y+3, r18	; 0x03
    17c2:	8b 81       	ldd	r24, Y+3	; 0x03
    17c4:	9c 81       	ldd	r25, Y+4	; 0x04
    17c6:	82 30       	cpi	r24, 0x02	; 2
    17c8:	91 05       	cpc	r25, r1
    17ca:	d9 f0       	breq	.+54     	; 0x1802 <DIO_VoidManualSetPortDir+0x66>
    17cc:	2b 81       	ldd	r18, Y+3	; 0x03
    17ce:	3c 81       	ldd	r19, Y+4	; 0x04
    17d0:	23 30       	cpi	r18, 0x03	; 3
    17d2:	31 05       	cpc	r19, r1
    17d4:	34 f4       	brge	.+12     	; 0x17e2 <DIO_VoidManualSetPortDir+0x46>
    17d6:	8b 81       	ldd	r24, Y+3	; 0x03
    17d8:	9c 81       	ldd	r25, Y+4	; 0x04
    17da:	81 30       	cpi	r24, 0x01	; 1
    17dc:	91 05       	cpc	r25, r1
    17de:	61 f0       	breq	.+24     	; 0x17f8 <DIO_VoidManualSetPortDir+0x5c>
    17e0:	1e c0       	rjmp	.+60     	; 0x181e <DIO_VoidManualSetPortDir+0x82>
    17e2:	2b 81       	ldd	r18, Y+3	; 0x03
    17e4:	3c 81       	ldd	r19, Y+4	; 0x04
    17e6:	23 30       	cpi	r18, 0x03	; 3
    17e8:	31 05       	cpc	r19, r1
    17ea:	81 f0       	breq	.+32     	; 0x180c <DIO_VoidManualSetPortDir+0x70>
    17ec:	8b 81       	ldd	r24, Y+3	; 0x03
    17ee:	9c 81       	ldd	r25, Y+4	; 0x04
    17f0:	84 30       	cpi	r24, 0x04	; 4
    17f2:	91 05       	cpc	r25, r1
    17f4:	81 f0       	breq	.+32     	; 0x1816 <DIO_VoidManualSetPortDir+0x7a>
    17f6:	13 c0       	rjmp	.+38     	; 0x181e <DIO_VoidManualSetPortDir+0x82>
		{
			case DIO_GroupA : DIO_DDRA = Local_PortState;
    17f8:	ea e3       	ldi	r30, 0x3A	; 58
    17fa:	f0 e0       	ldi	r31, 0x00	; 0
    17fc:	8a 81       	ldd	r24, Y+2	; 0x02
    17fe:	80 83       	st	Z, r24
    1800:	0e c0       	rjmp	.+28     	; 0x181e <DIO_VoidManualSetPortDir+0x82>
			break;
			case DIO_GroupB : DIO_DDRB = Local_PortState;
    1802:	e7 e3       	ldi	r30, 0x37	; 55
    1804:	f0 e0       	ldi	r31, 0x00	; 0
    1806:	8a 81       	ldd	r24, Y+2	; 0x02
    1808:	80 83       	st	Z, r24
    180a:	09 c0       	rjmp	.+18     	; 0x181e <DIO_VoidManualSetPortDir+0x82>
			break;
			case DIO_GroupC : DIO_DDRC = Local_PortState;
    180c:	e4 e3       	ldi	r30, 0x34	; 52
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	8a 81       	ldd	r24, Y+2	; 0x02
    1812:	80 83       	st	Z, r24
    1814:	04 c0       	rjmp	.+8      	; 0x181e <DIO_VoidManualSetPortDir+0x82>
			break;
			case DIO_GroupD : DIO_DDRD = Local_PortState;
    1816:	e1 e3       	ldi	r30, 0x31	; 49
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	8a 81       	ldd	r24, Y+2	; 0x02
    181c:	80 83       	st	Z, r24
			break;
		}
	}
}
    181e:	0f 90       	pop	r0
    1820:	0f 90       	pop	r0
    1822:	0f 90       	pop	r0
    1824:	0f 90       	pop	r0
    1826:	cf 91       	pop	r28
    1828:	df 91       	pop	r29
    182a:	08 95       	ret

0000182c <DIO_VoidManualSetPortValue>:

void DIO_VoidManualSetPortValue(u8 Local_GroupName, u8 Local_PortValue)
{
    182c:	df 93       	push	r29
    182e:	cf 93       	push	r28
    1830:	00 d0       	rcall	.+0      	; 0x1832 <DIO_VoidManualSetPortValue+0x6>
    1832:	00 d0       	rcall	.+0      	; 0x1834 <DIO_VoidManualSetPortValue+0x8>
    1834:	cd b7       	in	r28, 0x3d	; 61
    1836:	de b7       	in	r29, 0x3e	; 62
    1838:	89 83       	std	Y+1, r24	; 0x01
    183a:	6a 83       	std	Y+2, r22	; 0x02
	if(Local_GroupName <= DIO_GroupD && Local_GroupName >= DIO_GroupA)
    183c:	89 81       	ldd	r24, Y+1	; 0x01
    183e:	85 30       	cpi	r24, 0x05	; 5
    1840:	b0 f5       	brcc	.+108    	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
    1842:	89 81       	ldd	r24, Y+1	; 0x01
    1844:	88 23       	and	r24, r24
    1846:	99 f1       	breq	.+102    	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
	{
		switch(Local_GroupName)
    1848:	89 81       	ldd	r24, Y+1	; 0x01
    184a:	28 2f       	mov	r18, r24
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	3c 83       	std	Y+4, r19	; 0x04
    1850:	2b 83       	std	Y+3, r18	; 0x03
    1852:	8b 81       	ldd	r24, Y+3	; 0x03
    1854:	9c 81       	ldd	r25, Y+4	; 0x04
    1856:	82 30       	cpi	r24, 0x02	; 2
    1858:	91 05       	cpc	r25, r1
    185a:	d9 f0       	breq	.+54     	; 0x1892 <DIO_VoidManualSetPortValue+0x66>
    185c:	2b 81       	ldd	r18, Y+3	; 0x03
    185e:	3c 81       	ldd	r19, Y+4	; 0x04
    1860:	23 30       	cpi	r18, 0x03	; 3
    1862:	31 05       	cpc	r19, r1
    1864:	34 f4       	brge	.+12     	; 0x1872 <DIO_VoidManualSetPortValue+0x46>
    1866:	8b 81       	ldd	r24, Y+3	; 0x03
    1868:	9c 81       	ldd	r25, Y+4	; 0x04
    186a:	81 30       	cpi	r24, 0x01	; 1
    186c:	91 05       	cpc	r25, r1
    186e:	61 f0       	breq	.+24     	; 0x1888 <DIO_VoidManualSetPortValue+0x5c>
    1870:	1e c0       	rjmp	.+60     	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
    1872:	2b 81       	ldd	r18, Y+3	; 0x03
    1874:	3c 81       	ldd	r19, Y+4	; 0x04
    1876:	23 30       	cpi	r18, 0x03	; 3
    1878:	31 05       	cpc	r19, r1
    187a:	81 f0       	breq	.+32     	; 0x189c <DIO_VoidManualSetPortValue+0x70>
    187c:	8b 81       	ldd	r24, Y+3	; 0x03
    187e:	9c 81       	ldd	r25, Y+4	; 0x04
    1880:	84 30       	cpi	r24, 0x04	; 4
    1882:	91 05       	cpc	r25, r1
    1884:	81 f0       	breq	.+32     	; 0x18a6 <DIO_VoidManualSetPortValue+0x7a>
    1886:	13 c0       	rjmp	.+38     	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
		{
			case DIO_GroupA : DIO_PORTA = Local_PortValue;
    1888:	eb e3       	ldi	r30, 0x3B	; 59
    188a:	f0 e0       	ldi	r31, 0x00	; 0
    188c:	8a 81       	ldd	r24, Y+2	; 0x02
    188e:	80 83       	st	Z, r24
    1890:	0e c0       	rjmp	.+28     	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
			break;
			case DIO_GroupB : DIO_PORTB = Local_PortValue;
    1892:	e8 e3       	ldi	r30, 0x38	; 56
    1894:	f0 e0       	ldi	r31, 0x00	; 0
    1896:	8a 81       	ldd	r24, Y+2	; 0x02
    1898:	80 83       	st	Z, r24
    189a:	09 c0       	rjmp	.+18     	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
			break;
			case DIO_GroupC : DIO_PORTC = Local_PortValue;
    189c:	e5 e3       	ldi	r30, 0x35	; 53
    189e:	f0 e0       	ldi	r31, 0x00	; 0
    18a0:	8a 81       	ldd	r24, Y+2	; 0x02
    18a2:	80 83       	st	Z, r24
    18a4:	04 c0       	rjmp	.+8      	; 0x18ae <DIO_VoidManualSetPortValue+0x82>
			break;
			case DIO_GroupD : DIO_PORTD = Local_PortValue;
    18a6:	e2 e3       	ldi	r30, 0x32	; 50
    18a8:	f0 e0       	ldi	r31, 0x00	; 0
    18aa:	8a 81       	ldd	r24, Y+2	; 0x02
    18ac:	80 83       	st	Z, r24
			break;
		}
	}
}
    18ae:	0f 90       	pop	r0
    18b0:	0f 90       	pop	r0
    18b2:	0f 90       	pop	r0
    18b4:	0f 90       	pop	r0
    18b6:	cf 91       	pop	r28
    18b8:	df 91       	pop	r29
    18ba:	08 95       	ret

000018bc <Blutooth_Init>:

#include "USART_interface.h"
#include "Bluetooth_interface.h"

void Blutooth_Init(void)
{
    18bc:	df 93       	push	r29
    18be:	cf 93       	push	r28
    18c0:	cd b7       	in	r28, 0x3d	; 61
    18c2:	de b7       	in	r29, 0x3e	; 62
	USART_voidInit();
    18c4:	0e 94 ae 0c 	call	0x195c	; 0x195c <USART_voidInit>
}
    18c8:	cf 91       	pop	r28
    18ca:	df 91       	pop	r29
    18cc:	08 95       	ret

000018ce <Blutooth_SendChar>:

void Blutooth_SendChar(u16 Copy_u8Char)
{
    18ce:	df 93       	push	r29
    18d0:	cf 93       	push	r28
    18d2:	00 d0       	rcall	.+0      	; 0x18d4 <Blutooth_SendChar+0x6>
    18d4:	cd b7       	in	r28, 0x3d	; 61
    18d6:	de b7       	in	r29, 0x3e	; 62
    18d8:	9a 83       	std	Y+2, r25	; 0x02
    18da:	89 83       	std	Y+1, r24	; 0x01
	USART_voidSendCharSynch(Copy_u8Char);
    18dc:	89 81       	ldd	r24, Y+1	; 0x01
    18de:	9a 81       	ldd	r25, Y+2	; 0x02
    18e0:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <USART_voidSendCharSynch>
}
    18e4:	0f 90       	pop	r0
    18e6:	0f 90       	pop	r0
    18e8:	cf 91       	pop	r28
    18ea:	df 91       	pop	r29
    18ec:	08 95       	ret

000018ee <Blutooth_SendString>:

void Blutooth_SendString(char* Copy_pcString)
{
    18ee:	df 93       	push	r29
    18f0:	cf 93       	push	r28
    18f2:	00 d0       	rcall	.+0      	; 0x18f4 <Blutooth_SendString+0x6>
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62
    18f8:	9a 83       	std	Y+2, r25	; 0x02
    18fa:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pcString != NULL)
    18fc:	89 81       	ldd	r24, Y+1	; 0x01
    18fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1900:	00 97       	sbiw	r24, 0x00	; 0
    1902:	21 f0       	breq	.+8      	; 0x190c <Blutooth_SendString+0x1e>
	{
		USART_u8SendStringSynch(Copy_pcString);
    1904:	89 81       	ldd	r24, Y+1	; 0x01
    1906:	9a 81       	ldd	r25, Y+2	; 0x02
    1908:	0e 94 97 0d 	call	0x1b2e	; 0x1b2e <USART_u8SendStringSynch>
	}
}
    190c:	0f 90       	pop	r0
    190e:	0f 90       	pop	r0
    1910:	cf 91       	pop	r28
    1912:	df 91       	pop	r29
    1914:	08 95       	ret

00001916 <Blutooth_ReceiveChar>:

u8 Blutooth_ReceiveChar(void)
{
    1916:	df 93       	push	r29
    1918:	cf 93       	push	r28
    191a:	0f 92       	push	r0
    191c:	cd b7       	in	r28, 0x3d	; 61
    191e:	de b7       	in	r29, 0x3e	; 62
	u8 Data=0;
    1920:	19 82       	std	Y+1, r1	; 0x01
	USART_u8ReceiveCharSynch(&Data);
    1922:	ce 01       	movw	r24, r28
    1924:	01 96       	adiw	r24, 0x01	; 1
    1926:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <USART_u8ReceiveCharSynch>
	return Data;
    192a:	89 81       	ldd	r24, Y+1	; 0x01
}
    192c:	0f 90       	pop	r0
    192e:	cf 91       	pop	r28
    1930:	df 91       	pop	r29
    1932:	08 95       	ret

00001934 <Blutooth_receiveBuffer>:

void Blutooth_receiveBuffer(u8* Copy_pcBuffer,u8 BufferSize)
{
    1934:	df 93       	push	r29
    1936:	cf 93       	push	r28
    1938:	00 d0       	rcall	.+0      	; 0x193a <Blutooth_receiveBuffer+0x6>
    193a:	0f 92       	push	r0
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	9a 83       	std	Y+2, r25	; 0x02
    1942:	89 83       	std	Y+1, r24	; 0x01
    1944:	6b 83       	std	Y+3, r22	; 0x03
	USART_u8ReceiveBufferSynch(Copy_pcBuffer,BufferSize);
    1946:	89 81       	ldd	r24, Y+1	; 0x01
    1948:	9a 81       	ldd	r25, Y+2	; 0x02
    194a:	6b 81       	ldd	r22, Y+3	; 0x03
    194c:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <USART_u8ReceiveBufferSynch>
}
    1950:	0f 90       	pop	r0
    1952:	0f 90       	pop	r0
    1954:	0f 90       	pop	r0
    1956:	cf 91       	pop	r28
    1958:	df 91       	pop	r29
    195a:	08 95       	ret

0000195c <USART_voidInit>:
static u8 USART_u8CharIndex=0;
static u8 USART_u8BufferLength=0;
static u8* USART_pu8Data=NULL;

void USART_voidInit(void)
{
    195c:	df 93       	push	r29
    195e:	cf 93       	push	r28
    1960:	00 d0       	rcall	.+0      	; 0x1962 <USART_voidInit+0x6>
    1962:	0f 92       	push	r0
    1964:	cd b7       	in	r28, 0x3d	; 61
    1966:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8UCSRCValue=0;
    1968:	1b 82       	std	Y+3, r1	; 0x03
	u16 Local_u16UBRRValue=0;
    196a:	1a 82       	std	Y+2, r1	; 0x02
    196c:	19 82       	std	Y+1, r1	; 0x01
	/*Access UCSRB Value*/
	SET_BIT(Local_u8UCSRCValue,UCSRC_URSEL);
    196e:	8b 81       	ldd	r24, Y+3	; 0x03
    1970:	80 68       	ori	r24, 0x80	; 128
    1972:	8b 83       	std	Y+3, r24	; 0x03
	/*Synchronization mode*/
#if USART_MODE==ASYNCH
	CLR_BIT(Local_u8UCSRCValue,UCSRC_UMSEL);
    1974:	8b 81       	ldd	r24, Y+3	; 0x03
    1976:	8f 7b       	andi	r24, 0xBF	; 191
    1978:	8b 83       	std	Y+3, r24	; 0x03
	/*Choose Speed*/
#if TRANS_SPEED==NORMAL_SPEED
	CLR_BIT(UCSRB,UCSRA_U2X);
    197a:	aa e2       	ldi	r26, 0x2A	; 42
    197c:	b0 e0       	ldi	r27, 0x00	; 0
    197e:	ea e2       	ldi	r30, 0x2A	; 42
    1980:	f0 e0       	ldi	r31, 0x00	; 0
    1982:	80 81       	ld	r24, Z
    1984:	8d 7f       	andi	r24, 0xFD	; 253
    1986:	8c 93       	st	X, r24
	Local_u16UBRRValue=(500000ul/(u32)BAUD_RATE)-1;
    1988:	83 e3       	ldi	r24, 0x33	; 51
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	9a 83       	std	Y+2, r25	; 0x02
    198e:	89 83       	std	Y+1, r24	; 0x01
	Local_u16UBRRValue=(4000000ul/(u32)BAUD_RATE)-1;
#else
#error "Wrong USART Mode"
#endif
	/*Parity Mode*/
	Local_u8UCSRCValue&=PARITY_MASK;
    1990:	8b 81       	ldd	r24, Y+3	; 0x03
    1992:	8f 7c       	andi	r24, 0xCF	; 207
    1994:	8b 83       	std	Y+3, r24	; 0x03
	Local_u8UCSRCValue|=PARITY_MODE;
	/*NO. of stop bits*/
#if STOP_BIT==ONE_BIT
	CLR_BIT(Local_u8UCSRCValue,UCSRC_USBS);
    1996:	8b 81       	ldd	r24, Y+3	; 0x03
    1998:	87 7f       	andi	r24, 0xF7	; 247
    199a:	8b 83       	std	Y+3, r24	; 0x03
#if DATA_BIT==NINE_BIT
	SET_BIT(UCSRB,UCSRB_UCSZ2);
	SET_BIT(Local_u8UCSRCValue,UCSRC_UCSZ0);
	SET_BIT(Local_u8UCSRCValue,UCSRC_UCSZ1);
#elif DATA_BIT<NINE_BIT
	Local_u8UCSRCValue&=DATA_MASK;
    199c:	8b 81       	ldd	r24, Y+3	; 0x03
    199e:	89 7f       	andi	r24, 0xF9	; 249
    19a0:	8b 83       	std	Y+3, r24	; 0x03
	Local_u8UCSRCValue|=DATA_BIT;
    19a2:	8b 81       	ldd	r24, Y+3	; 0x03
    19a4:	86 60       	ori	r24, 0x06	; 6
    19a6:	8b 83       	std	Y+3, r24	; 0x03
#else
#error "Wrong Data Bit Number"
#endif
	UCSRC = Local_u8UCSRCValue;
    19a8:	e0 e4       	ldi	r30, 0x40	; 64
    19aa:	f0 e0       	ldi	r31, 0x00	; 0
    19ac:	8b 81       	ldd	r24, Y+3	; 0x03
    19ae:	80 83       	st	Z, r24
	/*Baud Rate*/
	UBRRL=(u8)Local_u16UBRRValue;
    19b0:	e9 e2       	ldi	r30, 0x29	; 41
    19b2:	f0 e0       	ldi	r31, 0x00	; 0
    19b4:	89 81       	ldd	r24, Y+1	; 0x01
    19b6:	80 83       	st	Z, r24
	UBRRH=(Local_u16UBRRValue>>8);
    19b8:	e0 e4       	ldi	r30, 0x40	; 64
    19ba:	f0 e0       	ldi	r31, 0x00	; 0
    19bc:	89 81       	ldd	r24, Y+1	; 0x01
    19be:	9a 81       	ldd	r25, Y+2	; 0x02
    19c0:	89 2f       	mov	r24, r25
    19c2:	99 27       	eor	r25, r25
    19c4:	80 83       	st	Z, r24
	/*Enable the Transmit and Receive modes*/
	SET_BIT(UCSRB,UCSRB_TXEN);
    19c6:	aa e2       	ldi	r26, 0x2A	; 42
    19c8:	b0 e0       	ldi	r27, 0x00	; 0
    19ca:	ea e2       	ldi	r30, 0x2A	; 42
    19cc:	f0 e0       	ldi	r31, 0x00	; 0
    19ce:	80 81       	ld	r24, Z
    19d0:	88 60       	ori	r24, 0x08	; 8
    19d2:	8c 93       	st	X, r24
	SET_BIT(UCSRB,UCSRB_RXEN);
    19d4:	aa e2       	ldi	r26, 0x2A	; 42
    19d6:	b0 e0       	ldi	r27, 0x00	; 0
    19d8:	ea e2       	ldi	r30, 0x2A	; 42
    19da:	f0 e0       	ldi	r31, 0x00	; 0
    19dc:	80 81       	ld	r24, Z
    19de:	80 61       	ori	r24, 0x10	; 16
    19e0:	8c 93       	st	X, r24
}
    19e2:	0f 90       	pop	r0
    19e4:	0f 90       	pop	r0
    19e6:	0f 90       	pop	r0
    19e8:	cf 91       	pop	r28
    19ea:	df 91       	pop	r29
    19ec:	08 95       	ret

000019ee <USART_voidSendCharSynch>:

u8 USART_voidSendCharSynch(u16 Copy_u16Data)
{
    19ee:	df 93       	push	r29
    19f0:	cf 93       	push	r28
    19f2:	cd b7       	in	r28, 0x3d	; 61
    19f4:	de b7       	in	r29, 0x3e	; 62
    19f6:	27 97       	sbiw	r28, 0x07	; 7
    19f8:	0f b6       	in	r0, 0x3f	; 63
    19fa:	f8 94       	cli
    19fc:	de bf       	out	0x3e, r29	; 62
    19fe:	0f be       	out	0x3f, r0	; 63
    1a00:	cd bf       	out	0x3d, r28	; 61
    1a02:	9f 83       	std	Y+7, r25	; 0x07
    1a04:	8e 83       	std	Y+6, r24	; 0x06
	u8 Local_u8StateError=OK;
    1a06:	1d 82       	std	Y+5, r1	; 0x05
	u32 Local_u32Counter=0;
    1a08:	19 82       	std	Y+1, r1	; 0x01
    1a0a:	1a 82       	std	Y+2, r1	; 0x02
    1a0c:	1b 82       	std	Y+3, r1	; 0x03
    1a0e:	1c 82       	std	Y+4, r1	; 0x04
	if(USART_u8BusyState==IDLE)
    1a10:	80 91 68 00 	lds	r24, 0x0068
    1a14:	81 30       	cpi	r24, 0x01	; 1
    1a16:	09 f0       	breq	.+2      	; 0x1a1a <USART_voidSendCharSynch+0x2c>
    1a18:	45 c0       	rjmp	.+138    	; 0x1aa4 <USART_voidSendCharSynch+0xb6>
	{
		/*Make USART Busy*/
		USART_u8BusyState=BUSY;
    1a1a:	82 e0       	ldi	r24, 0x02	; 2
    1a1c:	80 93 68 00 	sts	0x0068, r24
    1a20:	0b c0       	rjmp	.+22     	; 0x1a38 <USART_voidSendCharSynch+0x4a>
		/*Busy Waiting For Data Register Empty*/
		while((GET_BIT(UCSRA,UCSRA_UDRE)==0) && (Local_u32Counter<USART_TIMEOUT))
		{
			Local_u32Counter++;
    1a22:	89 81       	ldd	r24, Y+1	; 0x01
    1a24:	9a 81       	ldd	r25, Y+2	; 0x02
    1a26:	ab 81       	ldd	r26, Y+3	; 0x03
    1a28:	bc 81       	ldd	r27, Y+4	; 0x04
    1a2a:	01 96       	adiw	r24, 0x01	; 1
    1a2c:	a1 1d       	adc	r26, r1
    1a2e:	b1 1d       	adc	r27, r1
    1a30:	89 83       	std	Y+1, r24	; 0x01
    1a32:	9a 83       	std	Y+2, r25	; 0x02
    1a34:	ab 83       	std	Y+3, r26	; 0x03
    1a36:	bc 83       	std	Y+4, r27	; 0x04
	if(USART_u8BusyState==IDLE)
	{
		/*Make USART Busy*/
		USART_u8BusyState=BUSY;
		/*Busy Waiting For Data Register Empty*/
		while((GET_BIT(UCSRA,UCSRA_UDRE)==0) && (Local_u32Counter<USART_TIMEOUT))
    1a38:	eb e2       	ldi	r30, 0x2B	; 43
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	80 81       	ld	r24, Z
    1a3e:	82 95       	swap	r24
    1a40:	86 95       	lsr	r24
    1a42:	87 70       	andi	r24, 0x07	; 7
    1a44:	88 2f       	mov	r24, r24
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	81 70       	andi	r24, 0x01	; 1
    1a4a:	90 70       	andi	r25, 0x00	; 0
    1a4c:	00 97       	sbiw	r24, 0x00	; 0
    1a4e:	61 f4       	brne	.+24     	; 0x1a68 <USART_voidSendCharSynch+0x7a>
    1a50:	89 81       	ldd	r24, Y+1	; 0x01
    1a52:	9a 81       	ldd	r25, Y+2	; 0x02
    1a54:	ab 81       	ldd	r26, Y+3	; 0x03
    1a56:	bc 81       	ldd	r27, Y+4	; 0x04
    1a58:	80 35       	cpi	r24, 0x50	; 80
    1a5a:	23 ec       	ldi	r18, 0xC3	; 195
    1a5c:	92 07       	cpc	r25, r18
    1a5e:	20 e0       	ldi	r18, 0x00	; 0
    1a60:	a2 07       	cpc	r26, r18
    1a62:	20 e0       	ldi	r18, 0x00	; 0
    1a64:	b2 07       	cpc	r27, r18
    1a66:	e8 f2       	brcs	.-70     	; 0x1a22 <USART_voidSendCharSynch+0x34>
		{
			Local_u32Counter++;
		}
		if(Local_u32Counter==USART_TIMEOUT)
    1a68:	89 81       	ldd	r24, Y+1	; 0x01
    1a6a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a6c:	ab 81       	ldd	r26, Y+3	; 0x03
    1a6e:	bc 81       	ldd	r27, Y+4	; 0x04
    1a70:	80 35       	cpi	r24, 0x50	; 80
    1a72:	23 ec       	ldi	r18, 0xC3	; 195
    1a74:	92 07       	cpc	r25, r18
    1a76:	20 e0       	ldi	r18, 0x00	; 0
    1a78:	a2 07       	cpc	r26, r18
    1a7a:	20 e0       	ldi	r18, 0x00	; 0
    1a7c:	b2 07       	cpc	r27, r18
    1a7e:	19 f4       	brne	.+6      	; 0x1a86 <USART_voidSendCharSynch+0x98>
		{
			Local_u8StateError=NOK;
    1a80:	81 e0       	ldi	r24, 0x01	; 1
    1a82:	8d 83       	std	Y+5, r24	; 0x05
    1a84:	11 c0       	rjmp	.+34     	; 0x1aa8 <USART_voidSendCharSynch+0xba>
		}
		else
		{
			/*clear transmit complete flag*/
			SET_BIT(UCSRA,UCSRA_UDRE);
    1a86:	ab e2       	ldi	r26, 0x2B	; 43
    1a88:	b0 e0       	ldi	r27, 0x00	; 0
    1a8a:	eb e2       	ldi	r30, 0x2B	; 43
    1a8c:	f0 e0       	ldi	r31, 0x00	; 0
    1a8e:	80 81       	ld	r24, Z
    1a90:	80 62       	ori	r24, 0x20	; 32
    1a92:	8c 93       	st	X, r24
#if DATA_BIT==NINE_BIT
			UDR=(u8)Copy_u16Data;
			UCSRB|=(Copy_u16Data>>8);
			USART_u8BusyState=IDLE;
#elif DATA_BIT<NINE_BIT
			UDR=(u8)Copy_u16Data;
    1a94:	ec e2       	ldi	r30, 0x2C	; 44
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	8e 81       	ldd	r24, Y+6	; 0x06
    1a9a:	80 83       	st	Z, r24
			USART_u8BusyState=IDLE;
    1a9c:	81 e0       	ldi	r24, 0x01	; 1
    1a9e:	80 93 68 00 	sts	0x0068, r24
    1aa2:	02 c0       	rjmp	.+4      	; 0x1aa8 <USART_voidSendCharSynch+0xba>
#endif
		}
	}
	else
	{
		Local_u8StateError=BUSY_FUNC;
    1aa4:	83 e0       	ldi	r24, 0x03	; 3
    1aa6:	8d 83       	std	Y+5, r24	; 0x05
	}
	return Local_u8StateError;
    1aa8:	8d 81       	ldd	r24, Y+5	; 0x05
}
    1aaa:	27 96       	adiw	r28, 0x07	; 7
    1aac:	0f b6       	in	r0, 0x3f	; 63
    1aae:	f8 94       	cli
    1ab0:	de bf       	out	0x3e, r29	; 62
    1ab2:	0f be       	out	0x3f, r0	; 63
    1ab4:	cd bf       	out	0x3d, r28	; 61
    1ab6:	cf 91       	pop	r28
    1ab8:	df 91       	pop	r29
    1aba:	08 95       	ret

00001abc <USART_voidSendCharAsynch>:

u8 USART_voidSendCharAsynch(u16 Copy_u16Data, void (*Copy_pvNotificationFunc)(void))
{
    1abc:	df 93       	push	r29
    1abe:	cf 93       	push	r28
    1ac0:	00 d0       	rcall	.+0      	; 0x1ac2 <USART_voidSendCharAsynch+0x6>
    1ac2:	00 d0       	rcall	.+0      	; 0x1ac4 <USART_voidSendCharAsynch+0x8>
    1ac4:	0f 92       	push	r0
    1ac6:	cd b7       	in	r28, 0x3d	; 61
    1ac8:	de b7       	in	r29, 0x3e	; 62
    1aca:	9b 83       	std	Y+3, r25	; 0x03
    1acc:	8a 83       	std	Y+2, r24	; 0x02
    1ace:	7d 83       	std	Y+5, r23	; 0x05
    1ad0:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8StateError=OK;
    1ad2:	19 82       	std	Y+1, r1	; 0x01
	if(USART_u8BusyState==IDLE)
    1ad4:	80 91 68 00 	lds	r24, 0x0068
    1ad8:	81 30       	cpi	r24, 0x01	; 1
    1ada:	01 f5       	brne	.+64     	; 0x1b1c <USART_voidSendCharAsynch+0x60>
	{
		if(Copy_pvNotificationFunc==NULL)
    1adc:	8c 81       	ldd	r24, Y+4	; 0x04
    1ade:	9d 81       	ldd	r25, Y+5	; 0x05
    1ae0:	00 97       	sbiw	r24, 0x00	; 0
    1ae2:	19 f4       	brne	.+6      	; 0x1aea <USART_voidSendCharAsynch+0x2e>
		{
			Local_u8StateError=NULL_POINTER;
    1ae4:	82 e0       	ldi	r24, 0x02	; 2
    1ae6:	89 83       	std	Y+1, r24	; 0x01
    1ae8:	19 c0       	rjmp	.+50     	; 0x1b1c <USART_voidSendCharAsynch+0x60>
		}
		else
		{
			/*Busy Waiting For Data Register Empty*/
			USART_u8BusyState=BUSY;
    1aea:	82 e0       	ldi	r24, 0x02	; 2
    1aec:	80 93 68 00 	sts	0x0068, r24
			/*Configure ISR Source As Sending Character*/
			USART_u8ISRSource=SEND_CHAR;
    1af0:	81 e0       	ldi	r24, 0x01	; 1
    1af2:	80 93 7e 00 	sts	0x007E, r24
			USART_pvCallBackFunc=Copy_pvNotificationFunc;
    1af6:	8c 81       	ldd	r24, Y+4	; 0x04
    1af8:	9d 81       	ldd	r25, Y+5	; 0x05
    1afa:	90 93 79 00 	sts	0x0079, r25
    1afe:	80 93 78 00 	sts	0x0078, r24
			USART_u16SentData=Copy_u16Data;
    1b02:	8a 81       	ldd	r24, Y+2	; 0x02
    1b04:	9b 81       	ldd	r25, Y+3	; 0x03
    1b06:	90 93 7b 00 	sts	0x007B, r25
    1b0a:	80 93 7a 00 	sts	0x007A, r24
			/*USART Data Register Empty Interrupt Enable*/
			SET_BIT(UCSRB,UCSRB_UDRIE);
    1b0e:	aa e2       	ldi	r26, 0x2A	; 42
    1b10:	b0 e0       	ldi	r27, 0x00	; 0
    1b12:	ea e2       	ldi	r30, 0x2A	; 42
    1b14:	f0 e0       	ldi	r31, 0x00	; 0
    1b16:	80 81       	ld	r24, Z
    1b18:	80 62       	ori	r24, 0x20	; 32
    1b1a:	8c 93       	st	X, r24
		}
	}
	return Local_u8StateError;
    1b1c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b1e:	0f 90       	pop	r0
    1b20:	0f 90       	pop	r0
    1b22:	0f 90       	pop	r0
    1b24:	0f 90       	pop	r0
    1b26:	0f 90       	pop	r0
    1b28:	cf 91       	pop	r28
    1b2a:	df 91       	pop	r29
    1b2c:	08 95       	ret

00001b2e <USART_u8SendStringSynch>:
u8 USART_u8SendStringSynch(const char* Copy_pcharString)
{
    1b2e:	df 93       	push	r29
    1b30:	cf 93       	push	r28
    1b32:	00 d0       	rcall	.+0      	; 0x1b34 <USART_u8SendStringSynch+0x6>
    1b34:	00 d0       	rcall	.+0      	; 0x1b36 <USART_u8SendStringSynch+0x8>
    1b36:	cd b7       	in	r28, 0x3d	; 61
    1b38:	de b7       	in	r29, 0x3e	; 62
    1b3a:	9c 83       	std	Y+4, r25	; 0x04
    1b3c:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8StateError=OK;
    1b3e:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    1b40:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_pcharString==NULL)
    1b42:	8b 81       	ldd	r24, Y+3	; 0x03
    1b44:	9c 81       	ldd	r25, Y+4	; 0x04
    1b46:	00 97       	sbiw	r24, 0x00	; 0
    1b48:	99 f4       	brne	.+38     	; 0x1b70 <USART_u8SendStringSynch+0x42>
	{
		Local_u8StateError=NULL_POINTER;
    1b4a:	82 e0       	ldi	r24, 0x02	; 2
    1b4c:	8a 83       	std	Y+2, r24	; 0x02
    1b4e:	1b c0       	rjmp	.+54     	; 0x1b86 <USART_u8SendStringSynch+0x58>
	else
	{
		/*Send All Characters until the string ended*/
		while(Copy_pcharString[Local_u8Counter]!='\0')
		{
			USART_voidSendCharSynch(Copy_pcharString[Local_u8Counter]);
    1b50:	89 81       	ldd	r24, Y+1	; 0x01
    1b52:	28 2f       	mov	r18, r24
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	8b 81       	ldd	r24, Y+3	; 0x03
    1b58:	9c 81       	ldd	r25, Y+4	; 0x04
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	e2 0f       	add	r30, r18
    1b5e:	f3 1f       	adc	r31, r19
    1b60:	80 81       	ld	r24, Z
    1b62:	88 2f       	mov	r24, r24
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <USART_voidSendCharSynch>
			Local_u8Counter++;
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	8f 5f       	subi	r24, 0xFF	; 255
    1b6e:	89 83       	std	Y+1, r24	; 0x01
		Local_u8StateError=NULL_POINTER;
	}
	else
	{
		/*Send All Characters until the string ended*/
		while(Copy_pcharString[Local_u8Counter]!='\0')
    1b70:	89 81       	ldd	r24, Y+1	; 0x01
    1b72:	28 2f       	mov	r18, r24
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	8b 81       	ldd	r24, Y+3	; 0x03
    1b78:	9c 81       	ldd	r25, Y+4	; 0x04
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	e2 0f       	add	r30, r18
    1b7e:	f3 1f       	adc	r31, r19
    1b80:	80 81       	ld	r24, Z
    1b82:	88 23       	and	r24, r24
    1b84:	29 f7       	brne	.-54     	; 0x1b50 <USART_u8SendStringSynch+0x22>
		{
			USART_voidSendCharSynch(Copy_pcharString[Local_u8Counter]);
			Local_u8Counter++;
		}
	}
	return Local_u8StateError;
    1b86:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1b88:	0f 90       	pop	r0
    1b8a:	0f 90       	pop	r0
    1b8c:	0f 90       	pop	r0
    1b8e:	0f 90       	pop	r0
    1b90:	cf 91       	pop	r28
    1b92:	df 91       	pop	r29
    1b94:	08 95       	ret

00001b96 <USART_u8SendStringASynch>:
u8 USART_u8SendStringASynch(const char* Copy_pcharString, void(* Copy_pvNotificationFunc)(void))
{
    1b96:	df 93       	push	r29
    1b98:	cf 93       	push	r28
    1b9a:	00 d0       	rcall	.+0      	; 0x1b9c <USART_u8SendStringASynch+0x6>
    1b9c:	00 d0       	rcall	.+0      	; 0x1b9e <USART_u8SendStringASynch+0x8>
    1b9e:	0f 92       	push	r0
    1ba0:	cd b7       	in	r28, 0x3d	; 61
    1ba2:	de b7       	in	r29, 0x3e	; 62
    1ba4:	9b 83       	std	Y+3, r25	; 0x03
    1ba6:	8a 83       	std	Y+2, r24	; 0x02
    1ba8:	7d 83       	std	Y+5, r23	; 0x05
    1baa:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8StateError=0;
    1bac:	19 82       	std	Y+1, r1	; 0x01
	if(USART_u8BusyState==IDLE)
    1bae:	80 91 68 00 	lds	r24, 0x0068
    1bb2:	81 30       	cpi	r24, 0x01	; 1
    1bb4:	39 f5       	brne	.+78     	; 0x1c04 <USART_u8SendStringASynch+0x6e>
	{
		if((Copy_pcharString==NULL) || (Copy_pvNotificationFunc==NULL))
    1bb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bba:	00 97       	sbiw	r24, 0x00	; 0
    1bbc:	21 f0       	breq	.+8      	; 0x1bc6 <USART_u8SendStringASynch+0x30>
    1bbe:	8c 81       	ldd	r24, Y+4	; 0x04
    1bc0:	9d 81       	ldd	r25, Y+5	; 0x05
    1bc2:	00 97       	sbiw	r24, 0x00	; 0
    1bc4:	19 f4       	brne	.+6      	; 0x1bcc <USART_u8SendStringASynch+0x36>
		{
			Local_u8StateError=NULL_POINTER;
    1bc6:	82 e0       	ldi	r24, 0x02	; 2
    1bc8:	89 83       	std	Y+1, r24	; 0x01
    1bca:	1e c0       	rjmp	.+60     	; 0x1c08 <USART_u8SendStringASynch+0x72>
		}
		else
		{
			/*Make USART Busy*/
			USART_u8BusyState=BUSY;
    1bcc:	82 e0       	ldi	r24, 0x02	; 2
    1bce:	80 93 68 00 	sts	0x0068, r24
			/*Configure ISR Source As Sending String*/
			USART_u8ISRSource=SEND_STRING;
    1bd2:	82 e0       	ldi	r24, 0x02	; 2
    1bd4:	80 93 7e 00 	sts	0x007E, r24
			/*Initialize the variables & CallBack Notification Function Globally*/
			USART_pcString=Copy_pcharString;
    1bd8:	8a 81       	ldd	r24, Y+2	; 0x02
    1bda:	9b 81       	ldd	r25, Y+3	; 0x03
    1bdc:	90 93 7d 00 	sts	0x007D, r25
    1be0:	80 93 7c 00 	sts	0x007C, r24
			USART_pvCallBackFunc=Copy_pvNotificationFunc;
    1be4:	8c 81       	ldd	r24, Y+4	; 0x04
    1be6:	9d 81       	ldd	r25, Y+5	; 0x05
    1be8:	90 93 79 00 	sts	0x0079, r25
    1bec:	80 93 78 00 	sts	0x0078, r24
			USART_u8CharIndex=0;
    1bf0:	10 92 7f 00 	sts	0x007F, r1
			/*USART Data Register Empty Interrupt Enable*/
			SET_BIT(UCSRB,UCSRB_UDRIE);
    1bf4:	aa e2       	ldi	r26, 0x2A	; 42
    1bf6:	b0 e0       	ldi	r27, 0x00	; 0
    1bf8:	ea e2       	ldi	r30, 0x2A	; 42
    1bfa:	f0 e0       	ldi	r31, 0x00	; 0
    1bfc:	80 81       	ld	r24, Z
    1bfe:	80 62       	ori	r24, 0x20	; 32
    1c00:	8c 93       	st	X, r24
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <USART_u8SendStringASynch+0x72>
		}
	}
	else
	{
		Local_u8StateError=BUSY_FUNC;
    1c04:	83 e0       	ldi	r24, 0x03	; 3
    1c06:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError;
    1c08:	89 81       	ldd	r24, Y+1	; 0x01
}
    1c0a:	0f 90       	pop	r0
    1c0c:	0f 90       	pop	r0
    1c0e:	0f 90       	pop	r0
    1c10:	0f 90       	pop	r0
    1c12:	0f 90       	pop	r0
    1c14:	cf 91       	pop	r28
    1c16:	df 91       	pop	r29
    1c18:	08 95       	ret

00001c1a <USART_u8ReceiveCharSynch>:
u8 USART_u8ReceiveCharSynch(u8 *Copy_pu8Data)
{
    1c1a:	df 93       	push	r29
    1c1c:	cf 93       	push	r28
    1c1e:	00 d0       	rcall	.+0      	; 0x1c20 <USART_u8ReceiveCharSynch+0x6>
    1c20:	0f 92       	push	r0
    1c22:	cd b7       	in	r28, 0x3d	; 61
    1c24:	de b7       	in	r29, 0x3e	; 62
    1c26:	9b 83       	std	Y+3, r25	; 0x03
    1c28:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8StateError=OK;
    1c2a:	19 82       	std	Y+1, r1	; 0x01
	if(USART_u8BusyState==IDLE)
    1c2c:	80 91 68 00 	lds	r24, 0x0068
    1c30:	81 30       	cpi	r24, 0x01	; 1
    1c32:	c9 f4       	brne	.+50     	; 0x1c66 <USART_u8ReceiveCharSynch+0x4c>
	{
		/*Make USART Busy*/
		USART_u8BusyState=BUSY;
    1c34:	82 e0       	ldi	r24, 0x02	; 2
    1c36:	80 93 68 00 	sts	0x0068, r24
		/*Busy waiting For receive Complete*/
		while(GET_BIT(UCSRA,UCSRA_RXC)==0);
    1c3a:	eb e2       	ldi	r30, 0x2B	; 43
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	80 81       	ld	r24, Z
    1c40:	88 23       	and	r24, r24
    1c42:	dc f7       	brge	.-10     	; 0x1c3a <USART_u8ReceiveCharSynch+0x20>
		SET_BIT(UCSRA,UCSRA_RXC);
    1c44:	ab e2       	ldi	r26, 0x2B	; 43
    1c46:	b0 e0       	ldi	r27, 0x00	; 0
    1c48:	eb e2       	ldi	r30, 0x2B	; 43
    1c4a:	f0 e0       	ldi	r31, 0x00	; 0
    1c4c:	80 81       	ld	r24, Z
    1c4e:	80 68       	ori	r24, 0x80	; 128
    1c50:	8c 93       	st	X, r24
		/*Send Data*/
		*Copy_pu8Data=UDR;
    1c52:	ec e2       	ldi	r30, 0x2C	; 44
    1c54:	f0 e0       	ldi	r31, 0x00	; 0
    1c56:	80 81       	ld	r24, Z
    1c58:	ea 81       	ldd	r30, Y+2	; 0x02
    1c5a:	fb 81       	ldd	r31, Y+3	; 0x03
    1c5c:	80 83       	st	Z, r24
		/*Make USART IDLE*/
		USART_u8BusyState=IDLE;
    1c5e:	81 e0       	ldi	r24, 0x01	; 1
    1c60:	80 93 68 00 	sts	0x0068, r24
    1c64:	02 c0       	rjmp	.+4      	; 0x1c6a <USART_u8ReceiveCharSynch+0x50>
	}
	else
	{
		Local_u8StateError=BUSY_FUNC;
    1c66:	83 e0       	ldi	r24, 0x03	; 3
    1c68:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError;
    1c6a:	89 81       	ldd	r24, Y+1	; 0x01
}
    1c6c:	0f 90       	pop	r0
    1c6e:	0f 90       	pop	r0
    1c70:	0f 90       	pop	r0
    1c72:	cf 91       	pop	r28
    1c74:	df 91       	pop	r29
    1c76:	08 95       	ret

00001c78 <USART_u8ReceiveCharASynch>:
u8 USART_u8ReceiveCharASynch(u8 *Copy_pu8Data, void (*Copy_pvNotificationFunc)(void))
{
    1c78:	df 93       	push	r29
    1c7a:	cf 93       	push	r28
    1c7c:	00 d0       	rcall	.+0      	; 0x1c7e <USART_u8ReceiveCharASynch+0x6>
    1c7e:	00 d0       	rcall	.+0      	; 0x1c80 <USART_u8ReceiveCharASynch+0x8>
    1c80:	0f 92       	push	r0
    1c82:	cd b7       	in	r28, 0x3d	; 61
    1c84:	de b7       	in	r29, 0x3e	; 62
    1c86:	9b 83       	std	Y+3, r25	; 0x03
    1c88:	8a 83       	std	Y+2, r24	; 0x02
    1c8a:	7d 83       	std	Y+5, r23	; 0x05
    1c8c:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8StateError=OK;
    1c8e:	19 82       	std	Y+1, r1	; 0x01
	if(USART_u8BusyState==IDLE)
    1c90:	80 91 68 00 	lds	r24, 0x0068
    1c94:	81 30       	cpi	r24, 0x01	; 1
    1c96:	29 f5       	brne	.+74     	; 0x1ce2 <USART_u8ReceiveCharASynch+0x6a>
	{
		if((Copy_pu8Data==NULL) || (Copy_pvNotificationFunc==NULL))
    1c98:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c9c:	00 97       	sbiw	r24, 0x00	; 0
    1c9e:	21 f0       	breq	.+8      	; 0x1ca8 <USART_u8ReceiveCharASynch+0x30>
    1ca0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca2:	9d 81       	ldd	r25, Y+5	; 0x05
    1ca4:	00 97       	sbiw	r24, 0x00	; 0
    1ca6:	19 f4       	brne	.+6      	; 0x1cae <USART_u8ReceiveCharASynch+0x36>
		{
			Local_u8StateError=NULL_POINTER;
    1ca8:	82 e0       	ldi	r24, 0x02	; 2
    1caa:	89 83       	std	Y+1, r24	; 0x01
    1cac:	1c c0       	rjmp	.+56     	; 0x1ce6 <USART_u8ReceiveCharASynch+0x6e>
		}
		else
		{
			/*Make USART Busy*/
			USART_u8BusyState=BUSY;
    1cae:	82 e0       	ldi	r24, 0x02	; 2
    1cb0:	80 93 68 00 	sts	0x0068, r24
			/*Configure ISR Source As Receiving Character*/
			USART_u8ISRSource=RECEIVE_CHAR;
    1cb4:	81 e0       	ldi	r24, 0x01	; 1
    1cb6:	80 93 7e 00 	sts	0x007E, r24
			Copy_pu8Data=USART_pu8Data;
    1cba:	80 91 81 00 	lds	r24, 0x0081
    1cbe:	90 91 82 00 	lds	r25, 0x0082
    1cc2:	9b 83       	std	Y+3, r25	; 0x03
    1cc4:	8a 83       	std	Y+2, r24	; 0x02
			USART_pvCallBackFunc=Copy_pvNotificationFunc;
    1cc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1cc8:	9d 81       	ldd	r25, Y+5	; 0x05
    1cca:	90 93 79 00 	sts	0x0079, r25
    1cce:	80 93 78 00 	sts	0x0078, r24
			/*Receive Complete Interrupt Enable*/
			SET_BIT(UCSRB,UCSRB_RXCIE);
    1cd2:	aa e2       	ldi	r26, 0x2A	; 42
    1cd4:	b0 e0       	ldi	r27, 0x00	; 0
    1cd6:	ea e2       	ldi	r30, 0x2A	; 42
    1cd8:	f0 e0       	ldi	r31, 0x00	; 0
    1cda:	80 81       	ld	r24, Z
    1cdc:	80 68       	ori	r24, 0x80	; 128
    1cde:	8c 93       	st	X, r24
    1ce0:	02 c0       	rjmp	.+4      	; 0x1ce6 <USART_u8ReceiveCharASynch+0x6e>
		}
	}
	else
	{
		Local_u8StateError=BUSY_FUNC;
    1ce2:	83 e0       	ldi	r24, 0x03	; 3
    1ce4:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError;
    1ce6:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ce8:	0f 90       	pop	r0
    1cea:	0f 90       	pop	r0
    1cec:	0f 90       	pop	r0
    1cee:	0f 90       	pop	r0
    1cf0:	0f 90       	pop	r0
    1cf2:	cf 91       	pop	r28
    1cf4:	df 91       	pop	r29
    1cf6:	08 95       	ret

00001cf8 <USART_u8ReceiveBufferSynch>:

u8 USART_u8ReceiveBufferSynch(u8* Copy_pu8Buffer,u8 Copy_u8BufferSize)
{
    1cf8:	df 93       	push	r29
    1cfa:	cf 93       	push	r28
    1cfc:	00 d0       	rcall	.+0      	; 0x1cfe <USART_u8ReceiveBufferSynch+0x6>
    1cfe:	00 d0       	rcall	.+0      	; 0x1d00 <USART_u8ReceiveBufferSynch+0x8>
    1d00:	0f 92       	push	r0
    1d02:	cd b7       	in	r28, 0x3d	; 61
    1d04:	de b7       	in	r29, 0x3e	; 62
    1d06:	9c 83       	std	Y+4, r25	; 0x04
    1d08:	8b 83       	std	Y+3, r24	; 0x03
    1d0a:	6d 83       	std	Y+5, r22	; 0x05
	u8 Local_u8StateError=OK;
    1d0c:	1a 82       	std	Y+2, r1	; 0x02
	u8 Local_u8Counter=0;
    1d0e:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_pu8Buffer==NULL)
    1d10:	8b 81       	ldd	r24, Y+3	; 0x03
    1d12:	9c 81       	ldd	r25, Y+4	; 0x04
    1d14:	00 97       	sbiw	r24, 0x00	; 0
    1d16:	11 f4       	brne	.+4      	; 0x1d1c <USART_u8ReceiveBufferSynch+0x24>
	{
		Local_u8StateError=NULL_POINTER;
    1d18:	82 e0       	ldi	r24, 0x02	; 2
    1d1a:	8a 83       	std	Y+2, r24	; 0x02
	}
	for(Local_u8Counter=0;Local_u8Counter<Copy_u8BufferSize;Local_u8Counter++)
    1d1c:	19 82       	std	Y+1, r1	; 0x01
    1d1e:	0c c0       	rjmp	.+24     	; 0x1d38 <USART_u8ReceiveBufferSynch+0x40>
	{
		/*Receive Buffer in Array*/
		USART_u8ReceiveCharSynch(&Copy_pu8Buffer[Local_u8Counter]);
    1d20:	89 81       	ldd	r24, Y+1	; 0x01
    1d22:	28 2f       	mov	r18, r24
    1d24:	30 e0       	ldi	r19, 0x00	; 0
    1d26:	8b 81       	ldd	r24, Y+3	; 0x03
    1d28:	9c 81       	ldd	r25, Y+4	; 0x04
    1d2a:	82 0f       	add	r24, r18
    1d2c:	93 1f       	adc	r25, r19
    1d2e:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <USART_u8ReceiveCharSynch>
	u8 Local_u8Counter=0;
	if(Copy_pu8Buffer==NULL)
	{
		Local_u8StateError=NULL_POINTER;
	}
	for(Local_u8Counter=0;Local_u8Counter<Copy_u8BufferSize;Local_u8Counter++)
    1d32:	89 81       	ldd	r24, Y+1	; 0x01
    1d34:	8f 5f       	subi	r24, 0xFF	; 255
    1d36:	89 83       	std	Y+1, r24	; 0x01
    1d38:	99 81       	ldd	r25, Y+1	; 0x01
    1d3a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d3c:	98 17       	cp	r25, r24
    1d3e:	80 f3       	brcs	.-32     	; 0x1d20 <USART_u8ReceiveBufferSynch+0x28>
	{
		/*Receive Buffer in Array*/
		USART_u8ReceiveCharSynch(&Copy_pu8Buffer[Local_u8Counter]);
	}
	return Local_u8StateError;
    1d40:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1d42:	0f 90       	pop	r0
    1d44:	0f 90       	pop	r0
    1d46:	0f 90       	pop	r0
    1d48:	0f 90       	pop	r0
    1d4a:	0f 90       	pop	r0
    1d4c:	cf 91       	pop	r28
    1d4e:	df 91       	pop	r29
    1d50:	08 95       	ret

00001d52 <USART_u8ReceiveBufferASynch>:

u8 USART_u8ReceiveBufferASynch(u8* Copy_pu8Buffer,u8 Copy_u8BufferSize, void (*Copy_pvNotificationFunc)(void))
{
    1d52:	df 93       	push	r29
    1d54:	cf 93       	push	r28
    1d56:	00 d0       	rcall	.+0      	; 0x1d58 <USART_u8ReceiveBufferASynch+0x6>
    1d58:	00 d0       	rcall	.+0      	; 0x1d5a <USART_u8ReceiveBufferASynch+0x8>
    1d5a:	00 d0       	rcall	.+0      	; 0x1d5c <USART_u8ReceiveBufferASynch+0xa>
    1d5c:	cd b7       	in	r28, 0x3d	; 61
    1d5e:	de b7       	in	r29, 0x3e	; 62
    1d60:	9b 83       	std	Y+3, r25	; 0x03
    1d62:	8a 83       	std	Y+2, r24	; 0x02
    1d64:	6c 83       	std	Y+4, r22	; 0x04
    1d66:	5e 83       	std	Y+6, r21	; 0x06
    1d68:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8StateError=OK;
    1d6a:	19 82       	std	Y+1, r1	; 0x01
	if(USART_u8BusyState==IDLE)
    1d6c:	80 91 68 00 	lds	r24, 0x0068
    1d70:	81 30       	cpi	r24, 0x01	; 1
    1d72:	39 f5       	brne	.+78     	; 0x1dc2 <USART_u8ReceiveBufferASynch+0x70>
	{
		if((Copy_pu8Buffer==NULL) || (Copy_pvNotificationFunc==NULL))
    1d74:	8a 81       	ldd	r24, Y+2	; 0x02
    1d76:	9b 81       	ldd	r25, Y+3	; 0x03
    1d78:	00 97       	sbiw	r24, 0x00	; 0
    1d7a:	21 f0       	breq	.+8      	; 0x1d84 <USART_u8ReceiveBufferASynch+0x32>
    1d7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1d7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1d80:	00 97       	sbiw	r24, 0x00	; 0
    1d82:	19 f4       	brne	.+6      	; 0x1d8a <USART_u8ReceiveBufferASynch+0x38>
		{
			Local_u8StateError=NULL_POINTER;
    1d84:	82 e0       	ldi	r24, 0x02	; 2
    1d86:	89 83       	std	Y+1, r24	; 0x01
    1d88:	1e c0       	rjmp	.+60     	; 0x1dc6 <USART_u8ReceiveBufferASynch+0x74>
		}
		else
		{
			/*Make USART Busy*/
			USART_u8BusyState=BUSY;
    1d8a:	82 e0       	ldi	r24, 0x02	; 2
    1d8c:	80 93 68 00 	sts	0x0068, r24
			/*Configure ISR Source As Receiving String*/
			USART_u8ISRSource=RECEIVE_STRING;
    1d90:	82 e0       	ldi	r24, 0x02	; 2
    1d92:	80 93 7e 00 	sts	0x007E, r24
			/*Initialize the variables & CallBack Notification Function Globally*/
			USART_u8CharIndex=0;
    1d96:	10 92 7f 00 	sts	0x007F, r1
			Copy_pu8Buffer=USART_pu8Data;
    1d9a:	80 91 81 00 	lds	r24, 0x0081
    1d9e:	90 91 82 00 	lds	r25, 0x0082
    1da2:	9b 83       	std	Y+3, r25	; 0x03
    1da4:	8a 83       	std	Y+2, r24	; 0x02
			USART_pvCallBackFunc=Copy_pvNotificationFunc;
    1da6:	8d 81       	ldd	r24, Y+5	; 0x05
    1da8:	9e 81       	ldd	r25, Y+6	; 0x06
    1daa:	90 93 79 00 	sts	0x0079, r25
    1dae:	80 93 78 00 	sts	0x0078, r24
			/*Receive Complete Interrupt Enable*/
			SET_BIT(UCSRB,UCSRB_RXCIE);
    1db2:	aa e2       	ldi	r26, 0x2A	; 42
    1db4:	b0 e0       	ldi	r27, 0x00	; 0
    1db6:	ea e2       	ldi	r30, 0x2A	; 42
    1db8:	f0 e0       	ldi	r31, 0x00	; 0
    1dba:	80 81       	ld	r24, Z
    1dbc:	80 68       	ori	r24, 0x80	; 128
    1dbe:	8c 93       	st	X, r24
    1dc0:	02 c0       	rjmp	.+4      	; 0x1dc6 <USART_u8ReceiveBufferASynch+0x74>
		}
	}
	else
	{
		Local_u8StateError=BUSY_FUNC;
    1dc2:	83 e0       	ldi	r24, 0x03	; 3
    1dc4:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8StateError;
    1dc6:	89 81       	ldd	r24, Y+1	; 0x01
}
    1dc8:	26 96       	adiw	r28, 0x06	; 6
    1dca:	0f b6       	in	r0, 0x3f	; 63
    1dcc:	f8 94       	cli
    1dce:	de bf       	out	0x3e, r29	; 62
    1dd0:	0f be       	out	0x3f, r0	; 63
    1dd2:	cd bf       	out	0x3d, r28	; 61
    1dd4:	cf 91       	pop	r28
    1dd6:	df 91       	pop	r29
    1dd8:	08 95       	ret

00001dda <__vector_14>:

void __vector_14 ( void) __attribute__((signal));
void __vector_14 (void)
{
    1dda:	1f 92       	push	r1
    1ddc:	0f 92       	push	r0
    1dde:	0f b6       	in	r0, 0x3f	; 63
    1de0:	0f 92       	push	r0
    1de2:	11 24       	eor	r1, r1
    1de4:	2f 93       	push	r18
    1de6:	3f 93       	push	r19
    1de8:	4f 93       	push	r20
    1dea:	5f 93       	push	r21
    1dec:	6f 93       	push	r22
    1dee:	7f 93       	push	r23
    1df0:	8f 93       	push	r24
    1df2:	9f 93       	push	r25
    1df4:	af 93       	push	r26
    1df6:	bf 93       	push	r27
    1df8:	ef 93       	push	r30
    1dfa:	ff 93       	push	r31
    1dfc:	df 93       	push	r29
    1dfe:	cf 93       	push	r28
    1e00:	cd b7       	in	r28, 0x3d	; 61
    1e02:	de b7       	in	r29, 0x3e	; 62
	if(USART_u8ISRSource==SEND_CHAR)
    1e04:	80 91 7e 00 	lds	r24, 0x007E
    1e08:	81 30       	cpi	r24, 0x01	; 1
    1e0a:	b9 f4       	brne	.+46     	; 0x1e3a <__vector_14+0x60>
		/*Send Data*/
#if DATA_BIT==NINE_BIT_BIT
		UDR=(u8)USART_u16SentData;
		UCSRB|=(USART_u16SentData>>8);
#elif DATA_BIT<NINE_BIT
		UDR=(u8)USART_u16SentData;
    1e0c:	ec e2       	ldi	r30, 0x2C	; 44
    1e0e:	f0 e0       	ldi	r31, 0x00	; 0
    1e10:	80 91 7a 00 	lds	r24, 0x007A
    1e14:	90 91 7b 00 	lds	r25, 0x007B
    1e18:	80 83       	st	Z, r24
#endif
		/*Make USART Busy State Idle*/
		USART_u8BusyState=IDLE;
    1e1a:	81 e0       	ldi	r24, 0x01	; 1
    1e1c:	80 93 68 00 	sts	0x0068, r24
		/*Disable USART Data Register Empty Interrupt*/
		CLR_BIT(UCSRB,UCSRB_UDRIE);
    1e20:	aa e2       	ldi	r26, 0x2A	; 42
    1e22:	b0 e0       	ldi	r27, 0x00	; 0
    1e24:	ea e2       	ldi	r30, 0x2A	; 42
    1e26:	f0 e0       	ldi	r31, 0x00	; 0
    1e28:	80 81       	ld	r24, Z
    1e2a:	8f 7d       	andi	r24, 0xDF	; 223
    1e2c:	8c 93       	st	X, r24
		/*Invoke the call Back Notification*/
		USART_pvCallBackFunc();
    1e2e:	e0 91 78 00 	lds	r30, 0x0078
    1e32:	f0 91 79 00 	lds	r31, 0x0079
    1e36:	09 95       	icall
    1e38:	35 c0       	rjmp	.+106    	; 0x1ea4 <__vector_14+0xca>
	}
	else if(USART_u8ISRSource==SEND_STRING)
    1e3a:	80 91 7e 00 	lds	r24, 0x007E
    1e3e:	82 30       	cpi	r24, 0x02	; 2
    1e40:	89 f5       	brne	.+98     	; 0x1ea4 <__vector_14+0xca>
	{
		UDR=USART_pcString[USART_u8CharIndex];
    1e42:	ac e2       	ldi	r26, 0x2C	; 44
    1e44:	b0 e0       	ldi	r27, 0x00	; 0
    1e46:	20 91 7c 00 	lds	r18, 0x007C
    1e4a:	30 91 7d 00 	lds	r19, 0x007D
    1e4e:	80 91 7f 00 	lds	r24, 0x007F
    1e52:	88 2f       	mov	r24, r24
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	f9 01       	movw	r30, r18
    1e58:	e8 0f       	add	r30, r24
    1e5a:	f9 1f       	adc	r31, r25
    1e5c:	80 81       	ld	r24, Z
    1e5e:	8c 93       	st	X, r24
		USART_u8CharIndex++;
    1e60:	80 91 7f 00 	lds	r24, 0x007F
    1e64:	8f 5f       	subi	r24, 0xFF	; 255
    1e66:	80 93 7f 00 	sts	0x007F, r24
		if(USART_pcString[USART_u8CharIndex]=='\0')
    1e6a:	20 91 7c 00 	lds	r18, 0x007C
    1e6e:	30 91 7d 00 	lds	r19, 0x007D
    1e72:	80 91 7f 00 	lds	r24, 0x007F
    1e76:	88 2f       	mov	r24, r24
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	f9 01       	movw	r30, r18
    1e7c:	e8 0f       	add	r30, r24
    1e7e:	f9 1f       	adc	r31, r25
    1e80:	80 81       	ld	r24, Z
    1e82:	88 23       	and	r24, r24
    1e84:	79 f4       	brne	.+30     	; 0x1ea4 <__vector_14+0xca>
		{
			/*Make USART Busy State Idle*/
			USART_u8BusyState=IDLE;
    1e86:	81 e0       	ldi	r24, 0x01	; 1
    1e88:	80 93 68 00 	sts	0x0068, r24
			/*Disable USART Data Register Empty Interrupt*/
			CLR_BIT(UCSRB,UCSRB_UDRIE);
    1e8c:	aa e2       	ldi	r26, 0x2A	; 42
    1e8e:	b0 e0       	ldi	r27, 0x00	; 0
    1e90:	ea e2       	ldi	r30, 0x2A	; 42
    1e92:	f0 e0       	ldi	r31, 0x00	; 0
    1e94:	80 81       	ld	r24, Z
    1e96:	8f 7d       	andi	r24, 0xDF	; 223
    1e98:	8c 93       	st	X, r24
			/*Invoke the call Back Notification*/
			USART_pvCallBackFunc();
    1e9a:	e0 91 78 00 	lds	r30, 0x0078
    1e9e:	f0 91 79 00 	lds	r31, 0x0079
    1ea2:	09 95       	icall
		}
	}
}
    1ea4:	cf 91       	pop	r28
    1ea6:	df 91       	pop	r29
    1ea8:	ff 91       	pop	r31
    1eaa:	ef 91       	pop	r30
    1eac:	bf 91       	pop	r27
    1eae:	af 91       	pop	r26
    1eb0:	9f 91       	pop	r25
    1eb2:	8f 91       	pop	r24
    1eb4:	7f 91       	pop	r23
    1eb6:	6f 91       	pop	r22
    1eb8:	5f 91       	pop	r21
    1eba:	4f 91       	pop	r20
    1ebc:	3f 91       	pop	r19
    1ebe:	2f 91       	pop	r18
    1ec0:	0f 90       	pop	r0
    1ec2:	0f be       	out	0x3f, r0	; 63
    1ec4:	0f 90       	pop	r0
    1ec6:	1f 90       	pop	r1
    1ec8:	18 95       	reti

00001eca <__vector_13>:
void __vector_13 (void) __attribute__((signal));
void __vector_13 (void)
{
    1eca:	1f 92       	push	r1
    1ecc:	0f 92       	push	r0
    1ece:	0f b6       	in	r0, 0x3f	; 63
    1ed0:	0f 92       	push	r0
    1ed2:	11 24       	eor	r1, r1
    1ed4:	2f 93       	push	r18
    1ed6:	3f 93       	push	r19
    1ed8:	4f 93       	push	r20
    1eda:	5f 93       	push	r21
    1edc:	6f 93       	push	r22
    1ede:	7f 93       	push	r23
    1ee0:	8f 93       	push	r24
    1ee2:	9f 93       	push	r25
    1ee4:	af 93       	push	r26
    1ee6:	bf 93       	push	r27
    1ee8:	ef 93       	push	r30
    1eea:	ff 93       	push	r31
    1eec:	df 93       	push	r29
    1eee:	cf 93       	push	r28
    1ef0:	cd b7       	in	r28, 0x3d	; 61
    1ef2:	de b7       	in	r29, 0x3e	; 62
	if(USART_u8ISRSource==RECEIVE_CHAR)
    1ef4:	80 91 7e 00 	lds	r24, 0x007E
    1ef8:	81 30       	cpi	r24, 0x01	; 1
    1efa:	c1 f4       	brne	.+48     	; 0x1f2c <__vector_13+0x62>
	{
		*USART_pu8Data=UDR;
    1efc:	a0 91 81 00 	lds	r26, 0x0081
    1f00:	b0 91 82 00 	lds	r27, 0x0082
    1f04:	ec e2       	ldi	r30, 0x2C	; 44
    1f06:	f0 e0       	ldi	r31, 0x00	; 0
    1f08:	80 81       	ld	r24, Z
    1f0a:	8c 93       	st	X, r24
		/*Make USART Busy State Idle*/
		USART_u8BusyState=IDLE;
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	80 93 68 00 	sts	0x0068, r24
		/*Receive Complete Interrupt Disable*/
		CLR_BIT(UCSRB,UCSRB_RXCIE);
    1f12:	aa e2       	ldi	r26, 0x2A	; 42
    1f14:	b0 e0       	ldi	r27, 0x00	; 0
    1f16:	ea e2       	ldi	r30, 0x2A	; 42
    1f18:	f0 e0       	ldi	r31, 0x00	; 0
    1f1a:	80 81       	ld	r24, Z
    1f1c:	8f 77       	andi	r24, 0x7F	; 127
    1f1e:	8c 93       	st	X, r24
		/*Invoke the call Back Notification*/
		USART_pvCallBackFunc();
    1f20:	e0 91 78 00 	lds	r30, 0x0078
    1f24:	f0 91 79 00 	lds	r31, 0x0079
    1f28:	09 95       	icall
    1f2a:	2d c0       	rjmp	.+90     	; 0x1f86 <__vector_13+0xbc>
	}
	else if(USART_u8ISRSource==RECEIVE_STRING)
    1f2c:	80 91 7e 00 	lds	r24, 0x007E
    1f30:	82 30       	cpi	r24, 0x02	; 2
    1f32:	49 f5       	brne	.+82     	; 0x1f86 <__vector_13+0xbc>
	{
		USART_pu8Data[USART_u8CharIndex]=UDR;
    1f34:	20 91 81 00 	lds	r18, 0x0081
    1f38:	30 91 82 00 	lds	r19, 0x0082
    1f3c:	80 91 7f 00 	lds	r24, 0x007F
    1f40:	88 2f       	mov	r24, r24
    1f42:	90 e0       	ldi	r25, 0x00	; 0
    1f44:	d9 01       	movw	r26, r18
    1f46:	a8 0f       	add	r26, r24
    1f48:	b9 1f       	adc	r27, r25
    1f4a:	ec e2       	ldi	r30, 0x2C	; 44
    1f4c:	f0 e0       	ldi	r31, 0x00	; 0
    1f4e:	80 81       	ld	r24, Z
    1f50:	8c 93       	st	X, r24
		USART_u8CharIndex++;
    1f52:	80 91 7f 00 	lds	r24, 0x007F
    1f56:	8f 5f       	subi	r24, 0xFF	; 255
    1f58:	80 93 7f 00 	sts	0x007F, r24
		if(USART_u8CharIndex==USART_u8BufferLength)
    1f5c:	90 91 7f 00 	lds	r25, 0x007F
    1f60:	80 91 80 00 	lds	r24, 0x0080
    1f64:	98 17       	cp	r25, r24
    1f66:	79 f4       	brne	.+30     	; 0x1f86 <__vector_13+0xbc>
		{
			USART_u8BusyState=IDLE;
    1f68:	81 e0       	ldi	r24, 0x01	; 1
    1f6a:	80 93 68 00 	sts	0x0068, r24
			/*Receive Complete Interrupt Disable*/
			CLR_BIT(UCSRB,UCSRB_RXCIE);
    1f6e:	aa e2       	ldi	r26, 0x2A	; 42
    1f70:	b0 e0       	ldi	r27, 0x00	; 0
    1f72:	ea e2       	ldi	r30, 0x2A	; 42
    1f74:	f0 e0       	ldi	r31, 0x00	; 0
    1f76:	80 81       	ld	r24, Z
    1f78:	8f 77       	andi	r24, 0x7F	; 127
    1f7a:	8c 93       	st	X, r24
			/*Invoke the call Back Notification*/
			USART_pvCallBackFunc();
    1f7c:	e0 91 78 00 	lds	r30, 0x0078
    1f80:	f0 91 79 00 	lds	r31, 0x0079
    1f84:	09 95       	icall
		}
	}
}
    1f86:	cf 91       	pop	r28
    1f88:	df 91       	pop	r29
    1f8a:	ff 91       	pop	r31
    1f8c:	ef 91       	pop	r30
    1f8e:	bf 91       	pop	r27
    1f90:	af 91       	pop	r26
    1f92:	9f 91       	pop	r25
    1f94:	8f 91       	pop	r24
    1f96:	7f 91       	pop	r23
    1f98:	6f 91       	pop	r22
    1f9a:	5f 91       	pop	r21
    1f9c:	4f 91       	pop	r20
    1f9e:	3f 91       	pop	r19
    1fa0:	2f 91       	pop	r18
    1fa2:	0f 90       	pop	r0
    1fa4:	0f be       	out	0x3f, r0	; 63
    1fa6:	0f 90       	pop	r0
    1fa8:	1f 90       	pop	r1
    1faa:	18 95       	reti

00001fac <main>:
u8 angle10 = NaturalPos, angle11 = NaturalPos, angle12 = POS8N;



int main()
{
    1fac:	df 93       	push	r29
    1fae:	cf 93       	push	r28
    1fb0:	cd b7       	in	r28, 0x3d	; 61
    1fb2:	de b7       	in	r29, 0x3e	; 62
    1fb4:	2f 97       	sbiw	r28, 0x0f	; 15
    1fb6:	0f b6       	in	r0, 0x3f	; 63
    1fb8:	f8 94       	cli
    1fba:	de bf       	out	0x3e, r29	; 62
    1fbc:	0f be       	out	0x3f, r0	; 63
    1fbe:	cd bf       	out	0x3d, r28	; 61
	/*Enabling Global Interrupt*/
	GIE_VoidEnable();
    1fc0:	0e 94 28 06 	call	0xc50	; 0xc50 <GIE_VoidEnable>

	/*Enabling Bluetooth Module*/
	Blutooth_Init();
    1fc4:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <Blutooth_Init>
	u8 BluetoothChar = 0;
    1fc8:	1f 86       	std	Y+15, r1	; 0x0f

	/*Initializing and Enabling Timer 0*/
	Timer0_VoidInit();
    1fca:	0e 94 a3 05 	call	0xb46	; 0xb46 <Timer0_VoidInit>
	Timer0_U8SetCallBack(&PWM);
    1fce:	88 ed       	ldi	r24, 0xD8	; 216
    1fd0:	90 e1       	ldi	r25, 0x10	; 16
    1fd2:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <Timer0_U8SetCallBack>

	/*Make the pins output*/
	/*Leg 1*/
	DIO_VoidSetPinDir(DIO_GroupD, DIO_PIN5, Output);
    1fd6:	84 e0       	ldi	r24, 0x04	; 4
    1fd8:	64 e0       	ldi	r22, 0x04	; 4
    1fda:	41 e0       	ldi	r20, 0x01	; 1
    1fdc:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupD, DIO_PIN6, Output);
    1fe0:	84 e0       	ldi	r24, 0x04	; 4
    1fe2:	65 e0       	ldi	r22, 0x05	; 5
    1fe4:	41 e0       	ldi	r20, 0x01	; 1
    1fe6:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupD, DIO_PIN7, Output);
    1fea:	84 e0       	ldi	r24, 0x04	; 4
    1fec:	66 e0       	ldi	r22, 0x06	; 6
    1fee:	41 e0       	ldi	r20, 0x01	; 1
    1ff0:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	/*Leg 2*/
	DIO_VoidSetPinDir(DIO_GroupC, DIO_PIN1, Output);
    1ff4:	83 e0       	ldi	r24, 0x03	; 3
    1ff6:	60 e0       	ldi	r22, 0x00	; 0
    1ff8:	41 e0       	ldi	r20, 0x01	; 1
    1ffa:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupC, DIO_PIN2, Output);
    1ffe:	83 e0       	ldi	r24, 0x03	; 3
    2000:	61 e0       	ldi	r22, 0x01	; 1
    2002:	41 e0       	ldi	r20, 0x01	; 1
    2004:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupC, DIO_PIN3, Output);
    2008:	83 e0       	ldi	r24, 0x03	; 3
    200a:	62 e0       	ldi	r22, 0x02	; 2
    200c:	41 e0       	ldi	r20, 0x01	; 1
    200e:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	/*Leg 3*/
	DIO_VoidSetPinDir(DIO_GroupD, DIO_PIN3, Output);
    2012:	84 e0       	ldi	r24, 0x04	; 4
    2014:	62 e0       	ldi	r22, 0x02	; 2
    2016:	41 e0       	ldi	r20, 0x01	; 1
    2018:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupD, DIO_PIN4, Output);
    201c:	84 e0       	ldi	r24, 0x04	; 4
    201e:	63 e0       	ldi	r22, 0x03	; 3
    2020:	41 e0       	ldi	r20, 0x01	; 1
    2022:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupA, DIO_PIN1, Output);
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	41 e0       	ldi	r20, 0x01	; 1
    202c:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	/*Leg 4*/
	DIO_VoidSetPinDir(DIO_GroupA, DIO_PIN2, Output);
    2030:	81 e0       	ldi	r24, 0x01	; 1
    2032:	61 e0       	ldi	r22, 0x01	; 1
    2034:	41 e0       	ldi	r20, 0x01	; 1
    2036:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupA, DIO_PIN3, Output);
    203a:	81 e0       	ldi	r24, 0x01	; 1
    203c:	62 e0       	ldi	r22, 0x02	; 2
    203e:	41 e0       	ldi	r20, 0x01	; 1
    2040:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>
	DIO_VoidSetPinDir(DIO_GroupA, DIO_PIN4, Output);
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	63 e0       	ldi	r22, 0x03	; 3
    2048:	41 e0       	ldi	r20, 0x01	; 1
    204a:	0e 94 44 06 	call	0xc88	; 0xc88 <DIO_VoidSetPinDir>

	/*Initial values for all pins is high*/
	/*Leg 1*/
	DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN5, High);
    204e:	84 e0       	ldi	r24, 0x04	; 4
    2050:	64 e0       	ldi	r22, 0x04	; 4
    2052:	41 e0       	ldi	r20, 0x01	; 1
    2054:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN6, High);
    2058:	84 e0       	ldi	r24, 0x04	; 4
    205a:	65 e0       	ldi	r22, 0x05	; 5
    205c:	41 e0       	ldi	r20, 0x01	; 1
    205e:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN7, High);
    2062:	84 e0       	ldi	r24, 0x04	; 4
    2064:	66 e0       	ldi	r22, 0x06	; 6
    2066:	41 e0       	ldi	r20, 0x01	; 1
    2068:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	/*Leg 2*/
	DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN1, High);
    206c:	83 e0       	ldi	r24, 0x03	; 3
    206e:	60 e0       	ldi	r22, 0x00	; 0
    2070:	41 e0       	ldi	r20, 0x01	; 1
    2072:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN2, High);
    2076:	83 e0       	ldi	r24, 0x03	; 3
    2078:	61 e0       	ldi	r22, 0x01	; 1
    207a:	41 e0       	ldi	r20, 0x01	; 1
    207c:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN3, High);
    2080:	83 e0       	ldi	r24, 0x03	; 3
    2082:	62 e0       	ldi	r22, 0x02	; 2
    2084:	41 e0       	ldi	r20, 0x01	; 1
    2086:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	/*Leg 3*/
	DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN3, High);
    208a:	84 e0       	ldi	r24, 0x04	; 4
    208c:	62 e0       	ldi	r22, 0x02	; 2
    208e:	41 e0       	ldi	r20, 0x01	; 1
    2090:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN4, High);
    2094:	84 e0       	ldi	r24, 0x04	; 4
    2096:	63 e0       	ldi	r22, 0x03	; 3
    2098:	41 e0       	ldi	r20, 0x01	; 1
    209a:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN1, High);
    209e:	81 e0       	ldi	r24, 0x01	; 1
    20a0:	60 e0       	ldi	r22, 0x00	; 0
    20a2:	41 e0       	ldi	r20, 0x01	; 1
    20a4:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	/*Leg 4*/
	DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN2, High);
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	61 e0       	ldi	r22, 0x01	; 1
    20ac:	41 e0       	ldi	r20, 0x01	; 1
    20ae:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN3, High);
    20b2:	81 e0       	ldi	r24, 0x01	; 1
    20b4:	62 e0       	ldi	r22, 0x02	; 2
    20b6:	41 e0       	ldi	r20, 0x01	; 1
    20b8:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN4, High);
    20bc:	81 e0       	ldi	r24, 0x01	; 1
    20be:	63 e0       	ldi	r22, 0x03	; 3
    20c0:	41 e0       	ldi	r20, 0x01	; 1
    20c2:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
    20c6:	80 e0       	ldi	r24, 0x00	; 0
    20c8:	90 e4       	ldi	r25, 0x40	; 64
    20ca:	ac e9       	ldi	r26, 0x9C	; 156
    20cc:	b5 e4       	ldi	r27, 0x45	; 69
    20ce:	8b 87       	std	Y+11, r24	; 0x0b
    20d0:	9c 87       	std	Y+12, r25	; 0x0c
    20d2:	ad 87       	std	Y+13, r26	; 0x0d
    20d4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    20d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    20da:	8d 85       	ldd	r24, Y+13	; 0x0d
    20dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    20de:	20 e0       	ldi	r18, 0x00	; 0
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	4a e7       	ldi	r20, 0x7A	; 122
    20e4:	55 e4       	ldi	r21, 0x45	; 69
    20e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20ea:	dc 01       	movw	r26, r24
    20ec:	cb 01       	movw	r24, r22
    20ee:	8f 83       	std	Y+7, r24	; 0x07
    20f0:	98 87       	std	Y+8, r25	; 0x08
    20f2:	a9 87       	std	Y+9, r26	; 0x09
    20f4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    20f6:	6f 81       	ldd	r22, Y+7	; 0x07
    20f8:	78 85       	ldd	r23, Y+8	; 0x08
    20fa:	89 85       	ldd	r24, Y+9	; 0x09
    20fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    20fe:	20 e0       	ldi	r18, 0x00	; 0
    2100:	30 e0       	ldi	r19, 0x00	; 0
    2102:	40 e8       	ldi	r20, 0x80	; 128
    2104:	5f e3       	ldi	r21, 0x3F	; 63
    2106:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    210a:	88 23       	and	r24, r24
    210c:	2c f4       	brge	.+10     	; 0x2118 <main+0x16c>
		__ticks = 1;
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	9e 83       	std	Y+6, r25	; 0x06
    2114:	8d 83       	std	Y+5, r24	; 0x05
    2116:	3f c0       	rjmp	.+126    	; 0x2196 <main+0x1ea>
	else if (__tmp > 65535)
    2118:	6f 81       	ldd	r22, Y+7	; 0x07
    211a:	78 85       	ldd	r23, Y+8	; 0x08
    211c:	89 85       	ldd	r24, Y+9	; 0x09
    211e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2120:	20 e0       	ldi	r18, 0x00	; 0
    2122:	3f ef       	ldi	r19, 0xFF	; 255
    2124:	4f e7       	ldi	r20, 0x7F	; 127
    2126:	57 e4       	ldi	r21, 0x47	; 71
    2128:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    212c:	18 16       	cp	r1, r24
    212e:	4c f5       	brge	.+82     	; 0x2182 <main+0x1d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2130:	6b 85       	ldd	r22, Y+11	; 0x0b
    2132:	7c 85       	ldd	r23, Y+12	; 0x0c
    2134:	8d 85       	ldd	r24, Y+13	; 0x0d
    2136:	9e 85       	ldd	r25, Y+14	; 0x0e
    2138:	20 e0       	ldi	r18, 0x00	; 0
    213a:	30 e0       	ldi	r19, 0x00	; 0
    213c:	40 e2       	ldi	r20, 0x20	; 32
    213e:	51 e4       	ldi	r21, 0x41	; 65
    2140:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2144:	dc 01       	movw	r26, r24
    2146:	cb 01       	movw	r24, r22
    2148:	bc 01       	movw	r22, r24
    214a:	cd 01       	movw	r24, r26
    214c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2150:	dc 01       	movw	r26, r24
    2152:	cb 01       	movw	r24, r22
    2154:	9e 83       	std	Y+6, r25	; 0x06
    2156:	8d 83       	std	Y+5, r24	; 0x05
    2158:	0f c0       	rjmp	.+30     	; 0x2178 <main+0x1cc>
    215a:	80 e9       	ldi	r24, 0x90	; 144
    215c:	91 e0       	ldi	r25, 0x01	; 1
    215e:	9c 83       	std	Y+4, r25	; 0x04
    2160:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2162:	8b 81       	ldd	r24, Y+3	; 0x03
    2164:	9c 81       	ldd	r25, Y+4	; 0x04
    2166:	01 97       	sbiw	r24, 0x01	; 1
    2168:	f1 f7       	brne	.-4      	; 0x2166 <main+0x1ba>
    216a:	9c 83       	std	Y+4, r25	; 0x04
    216c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    216e:	8d 81       	ldd	r24, Y+5	; 0x05
    2170:	9e 81       	ldd	r25, Y+6	; 0x06
    2172:	01 97       	sbiw	r24, 0x01	; 1
    2174:	9e 83       	std	Y+6, r25	; 0x06
    2176:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2178:	8d 81       	ldd	r24, Y+5	; 0x05
    217a:	9e 81       	ldd	r25, Y+6	; 0x06
    217c:	00 97       	sbiw	r24, 0x00	; 0
    217e:	69 f7       	brne	.-38     	; 0x215a <main+0x1ae>
    2180:	14 c0       	rjmp	.+40     	; 0x21aa <main+0x1fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2182:	6f 81       	ldd	r22, Y+7	; 0x07
    2184:	78 85       	ldd	r23, Y+8	; 0x08
    2186:	89 85       	ldd	r24, Y+9	; 0x09
    2188:	9a 85       	ldd	r25, Y+10	; 0x0a
    218a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    218e:	dc 01       	movw	r26, r24
    2190:	cb 01       	movw	r24, r22
    2192:	9e 83       	std	Y+6, r25	; 0x06
    2194:	8d 83       	std	Y+5, r24	; 0x05
    2196:	8d 81       	ldd	r24, Y+5	; 0x05
    2198:	9e 81       	ldd	r25, Y+6	; 0x06
    219a:	9a 83       	std	Y+2, r25	; 0x02
    219c:	89 83       	std	Y+1, r24	; 0x01
    219e:	89 81       	ldd	r24, Y+1	; 0x01
    21a0:	9a 81       	ldd	r25, Y+2	; 0x02
    21a2:	01 97       	sbiw	r24, 0x01	; 1
    21a4:	f1 f7       	brne	.-4      	; 0x21a2 <main+0x1f6>
    21a6:	9a 83       	std	Y+2, r25	; 0x02
    21a8:	89 83       	std	Y+1, r24	; 0x01
//		if(BluetoothChar == 'l')
//		{
//			ToLeft();
//		}
		_delay_ms(5000);
		Forward();
    21aa:	0e 94 f0 11 	call	0x23e0	; 0x23e0 <Forward>
    21ae:	8b cf       	rjmp	.-234    	; 0x20c6 <main+0x11a>

000021b0 <PWM>:


}

void PWM(void)
{
    21b0:	df 93       	push	r29
    21b2:	cf 93       	push	r28
    21b4:	cd b7       	in	r28, 0x3d	; 61
    21b6:	de b7       	in	r29, 0x3e	; 62
	/*Incrementing counter every time TIF is set*/
	counter++;
    21b8:	80 91 83 00 	lds	r24, 0x0083
    21bc:	90 91 84 00 	lds	r25, 0x0084
    21c0:	01 96       	adiw	r24, 0x01	; 1
    21c2:	90 93 84 00 	sts	0x0084, r25
    21c6:	80 93 83 00 	sts	0x0083, r24

	/*Clearing servo pins according to its required angle*/
	/*Leg 1*/
	if(counter == angle1)
    21ca:	80 91 69 00 	lds	r24, 0x0069
    21ce:	28 2f       	mov	r18, r24
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	80 91 83 00 	lds	r24, 0x0083
    21d6:	90 91 84 00 	lds	r25, 0x0084
    21da:	28 17       	cp	r18, r24
    21dc:	39 07       	cpc	r19, r25
    21de:	29 f4       	brne	.+10     	; 0x21ea <PWM+0x3a>
	{
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN5, Low);
    21e0:	84 e0       	ldi	r24, 0x04	; 4
    21e2:	64 e0       	ldi	r22, 0x04	; 4
    21e4:	40 e0       	ldi	r20, 0x00	; 0
    21e6:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle2)
    21ea:	80 91 6a 00 	lds	r24, 0x006A
    21ee:	28 2f       	mov	r18, r24
    21f0:	30 e0       	ldi	r19, 0x00	; 0
    21f2:	80 91 83 00 	lds	r24, 0x0083
    21f6:	90 91 84 00 	lds	r25, 0x0084
    21fa:	28 17       	cp	r18, r24
    21fc:	39 07       	cpc	r19, r25
    21fe:	29 f4       	brne	.+10     	; 0x220a <PWM+0x5a>
	{
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN6, Low);
    2200:	84 e0       	ldi	r24, 0x04	; 4
    2202:	65 e0       	ldi	r22, 0x05	; 5
    2204:	40 e0       	ldi	r20, 0x00	; 0
    2206:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle3)
    220a:	80 91 6b 00 	lds	r24, 0x006B
    220e:	28 2f       	mov	r18, r24
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	80 91 83 00 	lds	r24, 0x0083
    2216:	90 91 84 00 	lds	r25, 0x0084
    221a:	28 17       	cp	r18, r24
    221c:	39 07       	cpc	r19, r25
    221e:	29 f4       	brne	.+10     	; 0x222a <PWM+0x7a>
	{
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN7, Low);
    2220:	84 e0       	ldi	r24, 0x04	; 4
    2222:	66 e0       	ldi	r22, 0x06	; 6
    2224:	40 e0       	ldi	r20, 0x00	; 0
    2226:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	/*Leg 2*/
	if(counter == angle4)
    222a:	80 91 6c 00 	lds	r24, 0x006C
    222e:	28 2f       	mov	r18, r24
    2230:	30 e0       	ldi	r19, 0x00	; 0
    2232:	80 91 83 00 	lds	r24, 0x0083
    2236:	90 91 84 00 	lds	r25, 0x0084
    223a:	28 17       	cp	r18, r24
    223c:	39 07       	cpc	r19, r25
    223e:	29 f4       	brne	.+10     	; 0x224a <PWM+0x9a>
	{
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN1, Low);
    2240:	83 e0       	ldi	r24, 0x03	; 3
    2242:	60 e0       	ldi	r22, 0x00	; 0
    2244:	40 e0       	ldi	r20, 0x00	; 0
    2246:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle5)
    224a:	80 91 6d 00 	lds	r24, 0x006D
    224e:	28 2f       	mov	r18, r24
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	80 91 83 00 	lds	r24, 0x0083
    2256:	90 91 84 00 	lds	r25, 0x0084
    225a:	28 17       	cp	r18, r24
    225c:	39 07       	cpc	r19, r25
    225e:	29 f4       	brne	.+10     	; 0x226a <PWM+0xba>
	{
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN2, Low);
    2260:	83 e0       	ldi	r24, 0x03	; 3
    2262:	61 e0       	ldi	r22, 0x01	; 1
    2264:	40 e0       	ldi	r20, 0x00	; 0
    2266:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle6)
    226a:	80 91 6e 00 	lds	r24, 0x006E
    226e:	28 2f       	mov	r18, r24
    2270:	30 e0       	ldi	r19, 0x00	; 0
    2272:	80 91 83 00 	lds	r24, 0x0083
    2276:	90 91 84 00 	lds	r25, 0x0084
    227a:	28 17       	cp	r18, r24
    227c:	39 07       	cpc	r19, r25
    227e:	29 f4       	brne	.+10     	; 0x228a <PWM+0xda>
	{
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN3, Low);
    2280:	83 e0       	ldi	r24, 0x03	; 3
    2282:	62 e0       	ldi	r22, 0x02	; 2
    2284:	40 e0       	ldi	r20, 0x00	; 0
    2286:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	/*Leg 3*/
	if(counter == angle7)
    228a:	80 91 6f 00 	lds	r24, 0x006F
    228e:	28 2f       	mov	r18, r24
    2290:	30 e0       	ldi	r19, 0x00	; 0
    2292:	80 91 83 00 	lds	r24, 0x0083
    2296:	90 91 84 00 	lds	r25, 0x0084
    229a:	28 17       	cp	r18, r24
    229c:	39 07       	cpc	r19, r25
    229e:	29 f4       	brne	.+10     	; 0x22aa <PWM+0xfa>
	{
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN3, Low);
    22a0:	84 e0       	ldi	r24, 0x04	; 4
    22a2:	62 e0       	ldi	r22, 0x02	; 2
    22a4:	40 e0       	ldi	r20, 0x00	; 0
    22a6:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle8)
    22aa:	80 91 70 00 	lds	r24, 0x0070
    22ae:	28 2f       	mov	r18, r24
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	80 91 83 00 	lds	r24, 0x0083
    22b6:	90 91 84 00 	lds	r25, 0x0084
    22ba:	28 17       	cp	r18, r24
    22bc:	39 07       	cpc	r19, r25
    22be:	29 f4       	brne	.+10     	; 0x22ca <PWM+0x11a>
	{
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN4, Low);
    22c0:	84 e0       	ldi	r24, 0x04	; 4
    22c2:	63 e0       	ldi	r22, 0x03	; 3
    22c4:	40 e0       	ldi	r20, 0x00	; 0
    22c6:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle9)
    22ca:	80 91 71 00 	lds	r24, 0x0071
    22ce:	28 2f       	mov	r18, r24
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	80 91 83 00 	lds	r24, 0x0083
    22d6:	90 91 84 00 	lds	r25, 0x0084
    22da:	28 17       	cp	r18, r24
    22dc:	39 07       	cpc	r19, r25
    22de:	29 f4       	brne	.+10     	; 0x22ea <PWM+0x13a>
	{
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN1, Low);
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	60 e0       	ldi	r22, 0x00	; 0
    22e4:	40 e0       	ldi	r20, 0x00	; 0
    22e6:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	/*Leg 4*/
	if(counter == angle10)
    22ea:	80 91 72 00 	lds	r24, 0x0072
    22ee:	28 2f       	mov	r18, r24
    22f0:	30 e0       	ldi	r19, 0x00	; 0
    22f2:	80 91 83 00 	lds	r24, 0x0083
    22f6:	90 91 84 00 	lds	r25, 0x0084
    22fa:	28 17       	cp	r18, r24
    22fc:	39 07       	cpc	r19, r25
    22fe:	29 f4       	brne	.+10     	; 0x230a <PWM+0x15a>
	{
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN2, Low);
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	61 e0       	ldi	r22, 0x01	; 1
    2304:	40 e0       	ldi	r20, 0x00	; 0
    2306:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle11)
    230a:	80 91 73 00 	lds	r24, 0x0073
    230e:	28 2f       	mov	r18, r24
    2310:	30 e0       	ldi	r19, 0x00	; 0
    2312:	80 91 83 00 	lds	r24, 0x0083
    2316:	90 91 84 00 	lds	r25, 0x0084
    231a:	28 17       	cp	r18, r24
    231c:	39 07       	cpc	r19, r25
    231e:	29 f4       	brne	.+10     	; 0x232a <PWM+0x17a>
	{
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN3, Low);
    2320:	81 e0       	ldi	r24, 0x01	; 1
    2322:	62 e0       	ldi	r22, 0x02	; 2
    2324:	40 e0       	ldi	r20, 0x00	; 0
    2326:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	}
	if(counter == angle12)
    232a:	80 91 74 00 	lds	r24, 0x0074
    232e:	28 2f       	mov	r18, r24
    2330:	30 e0       	ldi	r19, 0x00	; 0
    2332:	80 91 83 00 	lds	r24, 0x0083
    2336:	90 91 84 00 	lds	r25, 0x0084
    233a:	28 17       	cp	r18, r24
    233c:	39 07       	cpc	r19, r25
    233e:	29 f4       	brne	.+10     	; 0x234a <PWM+0x19a>
	{
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN4, Low);
    2340:	81 e0       	ldi	r24, 0x01	; 1
    2342:	63 e0       	ldi	r22, 0x03	; 3
    2344:	40 e0       	ldi	r20, 0x00	; 0
    2346:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
	/*
	 * Here is the end of the period,
	 * to begin a new period, we will set all servo pins,
	 * also, we will reset the counter to begin this new period.
	 */
	if(counter == 160)
    234a:	80 91 83 00 	lds	r24, 0x0083
    234e:	90 91 84 00 	lds	r25, 0x0084
    2352:	80 3a       	cpi	r24, 0xA0	; 160
    2354:	91 05       	cpc	r25, r1
    2356:	09 f0       	breq	.+2      	; 0x235a <PWM+0x1aa>
    2358:	40 c0       	rjmp	.+128    	; 0x23da <PWM+0x22a>
	{
		/*Setting all servo pins*/
		/*Leg 1*/
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN5, High);
    235a:	84 e0       	ldi	r24, 0x04	; 4
    235c:	64 e0       	ldi	r22, 0x04	; 4
    235e:	41 e0       	ldi	r20, 0x01	; 1
    2360:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN6, High);
    2364:	84 e0       	ldi	r24, 0x04	; 4
    2366:	65 e0       	ldi	r22, 0x05	; 5
    2368:	41 e0       	ldi	r20, 0x01	; 1
    236a:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN7, High);
    236e:	84 e0       	ldi	r24, 0x04	; 4
    2370:	66 e0       	ldi	r22, 0x06	; 6
    2372:	41 e0       	ldi	r20, 0x01	; 1
    2374:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		/*Leg 2*/
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN1, High);
    2378:	83 e0       	ldi	r24, 0x03	; 3
    237a:	60 e0       	ldi	r22, 0x00	; 0
    237c:	41 e0       	ldi	r20, 0x01	; 1
    237e:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN2, High);
    2382:	83 e0       	ldi	r24, 0x03	; 3
    2384:	61 e0       	ldi	r22, 0x01	; 1
    2386:	41 e0       	ldi	r20, 0x01	; 1
    2388:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupC, DIO_PIN3, High);
    238c:	83 e0       	ldi	r24, 0x03	; 3
    238e:	62 e0       	ldi	r22, 0x02	; 2
    2390:	41 e0       	ldi	r20, 0x01	; 1
    2392:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		/*Leg 3*/
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN3, High);
    2396:	84 e0       	ldi	r24, 0x04	; 4
    2398:	62 e0       	ldi	r22, 0x02	; 2
    239a:	41 e0       	ldi	r20, 0x01	; 1
    239c:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupD, DIO_PIN4, High);
    23a0:	84 e0       	ldi	r24, 0x04	; 4
    23a2:	63 e0       	ldi	r22, 0x03	; 3
    23a4:	41 e0       	ldi	r20, 0x01	; 1
    23a6:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN1, High);
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	60 e0       	ldi	r22, 0x00	; 0
    23ae:	41 e0       	ldi	r20, 0x01	; 1
    23b0:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		/*Leg 4*/
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN2, High);
    23b4:	81 e0       	ldi	r24, 0x01	; 1
    23b6:	61 e0       	ldi	r22, 0x01	; 1
    23b8:	41 e0       	ldi	r20, 0x01	; 1
    23ba:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN3, High);
    23be:	81 e0       	ldi	r24, 0x01	; 1
    23c0:	62 e0       	ldi	r22, 0x02	; 2
    23c2:	41 e0       	ldi	r20, 0x01	; 1
    23c4:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>
		DIO_VoidSetPinValue(DIO_GroupA, DIO_PIN4, High);
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	63 e0       	ldi	r22, 0x03	; 3
    23cc:	41 e0       	ldi	r20, 0x01	; 1
    23ce:	0e 94 52 07 	call	0xea4	; 0xea4 <DIO_VoidSetPinValue>

		/*Reseting the counter*/
		counter = 0;
    23d2:	10 92 84 00 	sts	0x0084, r1
    23d6:	10 92 83 00 	sts	0x0083, r1
	}
}
    23da:	cf 91       	pop	r28
    23dc:	df 91       	pop	r29
    23de:	08 95       	ret

000023e0 <Forward>:

void Forward(void)
{
    23e0:	0f 93       	push	r16
    23e2:	1f 93       	push	r17
    23e4:	df 93       	push	r29
    23e6:	cf 93       	push	r28
    23e8:	cd b7       	in	r28, 0x3d	; 61
    23ea:	de b7       	in	r29, 0x3e	; 62
    23ec:	ce 58       	subi	r28, 0x8E	; 142
    23ee:	d3 40       	sbci	r29, 0x03	; 3
    23f0:	0f b6       	in	r0, 0x3f	; 63
    23f2:	f8 94       	cli
    23f4:	de bf       	out	0x3e, r29	; 62
    23f6:	0f be       	out	0x3f, r0	; 63
    23f8:	cd bf       	out	0x3d, r28	; 61
	/*leg 1*/
	angle1 = POSN3;
    23fa:	8a e0       	ldi	r24, 0x0A	; 10
    23fc:	80 93 69 00 	sts	0x0069, r24
	angle2 = NaturalPos;
    2400:	8d e0       	ldi	r24, 0x0D	; 13
    2402:	80 93 6a 00 	sts	0x006A, r24
	angle3 = POS8N;
    2406:	8f e0       	ldi	r24, 0x0F	; 15
    2408:	80 93 6b 00 	sts	0x006B, r24

	/*leg 2*/
	angle4 = POS7N;
    240c:	8e e0       	ldi	r24, 0x0E	; 14
    240e:	80 93 6c 00 	sts	0x006C, r24
	angle5 = NaturalPos;
    2412:	8d e0       	ldi	r24, 0x0D	; 13
    2414:	80 93 6d 00 	sts	0x006D, r24
	angle6 = POS8N;
    2418:	8f e0       	ldi	r24, 0x0F	; 15
    241a:	80 93 6e 00 	sts	0x006E, r24

	/*leg 3*/
	angle7 = NaturalPos;
    241e:	8d e0       	ldi	r24, 0x0D	; 13
    2420:	80 93 6f 00 	sts	0x006F, r24
	angle8 = NaturalPos;
    2424:	8d e0       	ldi	r24, 0x0D	; 13
    2426:	80 93 70 00 	sts	0x0070, r24
	angle9 = POS8N;
    242a:	8f e0       	ldi	r24, 0x0F	; 15
    242c:	80 93 71 00 	sts	0x0071, r24

	/*leg 4*/
	angle10 = NaturalPos;
    2430:	8d e0       	ldi	r24, 0x0D	; 13
    2432:	80 93 72 00 	sts	0x0072, r24
	angle11 = NaturalPos;
    2436:	8d e0       	ldi	r24, 0x0D	; 13
    2438:	80 93 73 00 	sts	0x0073, r24
	angle12 = POS8N;
    243c:	8f e0       	ldi	r24, 0x0F	; 15
    243e:	80 93 74 00 	sts	0x0074, r24
    2442:	fe 01       	movw	r30, r28
    2444:	e5 57       	subi	r30, 0x75	; 117
    2446:	fc 4f       	sbci	r31, 0xFC	; 252
    2448:	80 e0       	ldi	r24, 0x00	; 0
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	aa ef       	ldi	r26, 0xFA	; 250
    244e:	b3 e4       	ldi	r27, 0x43	; 67
    2450:	80 83       	st	Z, r24
    2452:	91 83       	std	Z+1, r25	; 0x01
    2454:	a2 83       	std	Z+2, r26	; 0x02
    2456:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2458:	8e 01       	movw	r16, r28
    245a:	09 57       	subi	r16, 0x79	; 121
    245c:	1c 4f       	sbci	r17, 0xFC	; 252
    245e:	fe 01       	movw	r30, r28
    2460:	e5 57       	subi	r30, 0x75	; 117
    2462:	fc 4f       	sbci	r31, 0xFC	; 252
    2464:	60 81       	ld	r22, Z
    2466:	71 81       	ldd	r23, Z+1	; 0x01
    2468:	82 81       	ldd	r24, Z+2	; 0x02
    246a:	93 81       	ldd	r25, Z+3	; 0x03
    246c:	20 e0       	ldi	r18, 0x00	; 0
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	4a e7       	ldi	r20, 0x7A	; 122
    2472:	55 e4       	ldi	r21, 0x45	; 69
    2474:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2478:	dc 01       	movw	r26, r24
    247a:	cb 01       	movw	r24, r22
    247c:	f8 01       	movw	r30, r16
    247e:	80 83       	st	Z, r24
    2480:	91 83       	std	Z+1, r25	; 0x01
    2482:	a2 83       	std	Z+2, r26	; 0x02
    2484:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2486:	fe 01       	movw	r30, r28
    2488:	e9 57       	subi	r30, 0x79	; 121
    248a:	fc 4f       	sbci	r31, 0xFC	; 252
    248c:	60 81       	ld	r22, Z
    248e:	71 81       	ldd	r23, Z+1	; 0x01
    2490:	82 81       	ldd	r24, Z+2	; 0x02
    2492:	93 81       	ldd	r25, Z+3	; 0x03
    2494:	20 e0       	ldi	r18, 0x00	; 0
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	40 e8       	ldi	r20, 0x80	; 128
    249a:	5f e3       	ldi	r21, 0x3F	; 63
    249c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    24a0:	88 23       	and	r24, r24
    24a2:	44 f4       	brge	.+16     	; 0x24b4 <Forward+0xd4>
		__ticks = 1;
    24a4:	fe 01       	movw	r30, r28
    24a6:	eb 57       	subi	r30, 0x7B	; 123
    24a8:	fc 4f       	sbci	r31, 0xFC	; 252
    24aa:	81 e0       	ldi	r24, 0x01	; 1
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	91 83       	std	Z+1, r25	; 0x01
    24b0:	80 83       	st	Z, r24
    24b2:	64 c0       	rjmp	.+200    	; 0x257c <Forward+0x19c>
	else if (__tmp > 65535)
    24b4:	fe 01       	movw	r30, r28
    24b6:	e9 57       	subi	r30, 0x79	; 121
    24b8:	fc 4f       	sbci	r31, 0xFC	; 252
    24ba:	60 81       	ld	r22, Z
    24bc:	71 81       	ldd	r23, Z+1	; 0x01
    24be:	82 81       	ldd	r24, Z+2	; 0x02
    24c0:	93 81       	ldd	r25, Z+3	; 0x03
    24c2:	20 e0       	ldi	r18, 0x00	; 0
    24c4:	3f ef       	ldi	r19, 0xFF	; 255
    24c6:	4f e7       	ldi	r20, 0x7F	; 127
    24c8:	57 e4       	ldi	r21, 0x47	; 71
    24ca:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    24ce:	18 16       	cp	r1, r24
    24d0:	0c f0       	brlt	.+2      	; 0x24d4 <Forward+0xf4>
    24d2:	43 c0       	rjmp	.+134    	; 0x255a <Forward+0x17a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d4:	fe 01       	movw	r30, r28
    24d6:	e5 57       	subi	r30, 0x75	; 117
    24d8:	fc 4f       	sbci	r31, 0xFC	; 252
    24da:	60 81       	ld	r22, Z
    24dc:	71 81       	ldd	r23, Z+1	; 0x01
    24de:	82 81       	ldd	r24, Z+2	; 0x02
    24e0:	93 81       	ldd	r25, Z+3	; 0x03
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e2       	ldi	r20, 0x20	; 32
    24e8:	51 e4       	ldi	r21, 0x41	; 65
    24ea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24ee:	dc 01       	movw	r26, r24
    24f0:	cb 01       	movw	r24, r22
    24f2:	8e 01       	movw	r16, r28
    24f4:	0b 57       	subi	r16, 0x7B	; 123
    24f6:	1c 4f       	sbci	r17, 0xFC	; 252
    24f8:	bc 01       	movw	r22, r24
    24fa:	cd 01       	movw	r24, r26
    24fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2500:	dc 01       	movw	r26, r24
    2502:	cb 01       	movw	r24, r22
    2504:	f8 01       	movw	r30, r16
    2506:	91 83       	std	Z+1, r25	; 0x01
    2508:	80 83       	st	Z, r24
    250a:	1f c0       	rjmp	.+62     	; 0x254a <Forward+0x16a>
    250c:	fe 01       	movw	r30, r28
    250e:	ed 57       	subi	r30, 0x7D	; 125
    2510:	fc 4f       	sbci	r31, 0xFC	; 252
    2512:	80 e9       	ldi	r24, 0x90	; 144
    2514:	91 e0       	ldi	r25, 0x01	; 1
    2516:	91 83       	std	Z+1, r25	; 0x01
    2518:	80 83       	st	Z, r24
    251a:	fe 01       	movw	r30, r28
    251c:	ed 57       	subi	r30, 0x7D	; 125
    251e:	fc 4f       	sbci	r31, 0xFC	; 252
    2520:	80 81       	ld	r24, Z
    2522:	91 81       	ldd	r25, Z+1	; 0x01
    2524:	01 97       	sbiw	r24, 0x01	; 1
    2526:	f1 f7       	brne	.-4      	; 0x2524 <Forward+0x144>
    2528:	fe 01       	movw	r30, r28
    252a:	ed 57       	subi	r30, 0x7D	; 125
    252c:	fc 4f       	sbci	r31, 0xFC	; 252
    252e:	91 83       	std	Z+1, r25	; 0x01
    2530:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2532:	de 01       	movw	r26, r28
    2534:	ab 57       	subi	r26, 0x7B	; 123
    2536:	bc 4f       	sbci	r27, 0xFC	; 252
    2538:	fe 01       	movw	r30, r28
    253a:	eb 57       	subi	r30, 0x7B	; 123
    253c:	fc 4f       	sbci	r31, 0xFC	; 252
    253e:	80 81       	ld	r24, Z
    2540:	91 81       	ldd	r25, Z+1	; 0x01
    2542:	01 97       	sbiw	r24, 0x01	; 1
    2544:	11 96       	adiw	r26, 0x01	; 1
    2546:	9c 93       	st	X, r25
    2548:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    254a:	fe 01       	movw	r30, r28
    254c:	eb 57       	subi	r30, 0x7B	; 123
    254e:	fc 4f       	sbci	r31, 0xFC	; 252
    2550:	80 81       	ld	r24, Z
    2552:	91 81       	ldd	r25, Z+1	; 0x01
    2554:	00 97       	sbiw	r24, 0x00	; 0
    2556:	d1 f6       	brne	.-76     	; 0x250c <Forward+0x12c>
    2558:	27 c0       	rjmp	.+78     	; 0x25a8 <Forward+0x1c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    255a:	8e 01       	movw	r16, r28
    255c:	0b 57       	subi	r16, 0x7B	; 123
    255e:	1c 4f       	sbci	r17, 0xFC	; 252
    2560:	fe 01       	movw	r30, r28
    2562:	e9 57       	subi	r30, 0x79	; 121
    2564:	fc 4f       	sbci	r31, 0xFC	; 252
    2566:	60 81       	ld	r22, Z
    2568:	71 81       	ldd	r23, Z+1	; 0x01
    256a:	82 81       	ldd	r24, Z+2	; 0x02
    256c:	93 81       	ldd	r25, Z+3	; 0x03
    256e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2572:	dc 01       	movw	r26, r24
    2574:	cb 01       	movw	r24, r22
    2576:	f8 01       	movw	r30, r16
    2578:	91 83       	std	Z+1, r25	; 0x01
    257a:	80 83       	st	Z, r24
    257c:	de 01       	movw	r26, r28
    257e:	af 57       	subi	r26, 0x7F	; 127
    2580:	bc 4f       	sbci	r27, 0xFC	; 252
    2582:	fe 01       	movw	r30, r28
    2584:	eb 57       	subi	r30, 0x7B	; 123
    2586:	fc 4f       	sbci	r31, 0xFC	; 252
    2588:	80 81       	ld	r24, Z
    258a:	91 81       	ldd	r25, Z+1	; 0x01
    258c:	8d 93       	st	X+, r24
    258e:	9c 93       	st	X, r25
    2590:	fe 01       	movw	r30, r28
    2592:	ef 57       	subi	r30, 0x7F	; 127
    2594:	fc 4f       	sbci	r31, 0xFC	; 252
    2596:	80 81       	ld	r24, Z
    2598:	91 81       	ldd	r25, Z+1	; 0x01
    259a:	01 97       	sbiw	r24, 0x01	; 1
    259c:	f1 f7       	brne	.-4      	; 0x259a <Forward+0x1ba>
    259e:	fe 01       	movw	r30, r28
    25a0:	ef 57       	subi	r30, 0x7F	; 127
    25a2:	fc 4f       	sbci	r31, 0xFC	; 252
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	80 83       	st	Z, r24
	_delay_ms(500);

	/*Step 1*/
	/*leg 1*/
	angle2 = POSN5;
    25a8:	8c e0       	ldi	r24, 0x0C	; 12
    25aa:	80 93 6a 00 	sts	0x006A, r24
    25ae:	fe 01       	movw	r30, r28
    25b0:	e3 58       	subi	r30, 0x83	; 131
    25b2:	fc 4f       	sbci	r31, 0xFC	; 252
    25b4:	80 e0       	ldi	r24, 0x00	; 0
    25b6:	90 e0       	ldi	r25, 0x00	; 0
    25b8:	ac e8       	ldi	r26, 0x8C	; 140
    25ba:	b2 e4       	ldi	r27, 0x42	; 66
    25bc:	80 83       	st	Z, r24
    25be:	91 83       	std	Z+1, r25	; 0x01
    25c0:	a2 83       	std	Z+2, r26	; 0x02
    25c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25c4:	8e 01       	movw	r16, r28
    25c6:	07 58       	subi	r16, 0x87	; 135
    25c8:	1c 4f       	sbci	r17, 0xFC	; 252
    25ca:	fe 01       	movw	r30, r28
    25cc:	e3 58       	subi	r30, 0x83	; 131
    25ce:	fc 4f       	sbci	r31, 0xFC	; 252
    25d0:	60 81       	ld	r22, Z
    25d2:	71 81       	ldd	r23, Z+1	; 0x01
    25d4:	82 81       	ldd	r24, Z+2	; 0x02
    25d6:	93 81       	ldd	r25, Z+3	; 0x03
    25d8:	20 e0       	ldi	r18, 0x00	; 0
    25da:	30 e0       	ldi	r19, 0x00	; 0
    25dc:	4a e7       	ldi	r20, 0x7A	; 122
    25de:	55 e4       	ldi	r21, 0x45	; 69
    25e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    25e4:	dc 01       	movw	r26, r24
    25e6:	cb 01       	movw	r24, r22
    25e8:	f8 01       	movw	r30, r16
    25ea:	80 83       	st	Z, r24
    25ec:	91 83       	std	Z+1, r25	; 0x01
    25ee:	a2 83       	std	Z+2, r26	; 0x02
    25f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25f2:	fe 01       	movw	r30, r28
    25f4:	e7 58       	subi	r30, 0x87	; 135
    25f6:	fc 4f       	sbci	r31, 0xFC	; 252
    25f8:	60 81       	ld	r22, Z
    25fa:	71 81       	ldd	r23, Z+1	; 0x01
    25fc:	82 81       	ldd	r24, Z+2	; 0x02
    25fe:	93 81       	ldd	r25, Z+3	; 0x03
    2600:	20 e0       	ldi	r18, 0x00	; 0
    2602:	30 e0       	ldi	r19, 0x00	; 0
    2604:	40 e8       	ldi	r20, 0x80	; 128
    2606:	5f e3       	ldi	r21, 0x3F	; 63
    2608:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    260c:	88 23       	and	r24, r24
    260e:	44 f4       	brge	.+16     	; 0x2620 <Forward+0x240>
		__ticks = 1;
    2610:	fe 01       	movw	r30, r28
    2612:	e9 58       	subi	r30, 0x89	; 137
    2614:	fc 4f       	sbci	r31, 0xFC	; 252
    2616:	81 e0       	ldi	r24, 0x01	; 1
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	91 83       	std	Z+1, r25	; 0x01
    261c:	80 83       	st	Z, r24
    261e:	64 c0       	rjmp	.+200    	; 0x26e8 <Forward+0x308>
	else if (__tmp > 65535)
    2620:	fe 01       	movw	r30, r28
    2622:	e7 58       	subi	r30, 0x87	; 135
    2624:	fc 4f       	sbci	r31, 0xFC	; 252
    2626:	60 81       	ld	r22, Z
    2628:	71 81       	ldd	r23, Z+1	; 0x01
    262a:	82 81       	ldd	r24, Z+2	; 0x02
    262c:	93 81       	ldd	r25, Z+3	; 0x03
    262e:	20 e0       	ldi	r18, 0x00	; 0
    2630:	3f ef       	ldi	r19, 0xFF	; 255
    2632:	4f e7       	ldi	r20, 0x7F	; 127
    2634:	57 e4       	ldi	r21, 0x47	; 71
    2636:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    263a:	18 16       	cp	r1, r24
    263c:	0c f0       	brlt	.+2      	; 0x2640 <Forward+0x260>
    263e:	43 c0       	rjmp	.+134    	; 0x26c6 <Forward+0x2e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2640:	fe 01       	movw	r30, r28
    2642:	e3 58       	subi	r30, 0x83	; 131
    2644:	fc 4f       	sbci	r31, 0xFC	; 252
    2646:	60 81       	ld	r22, Z
    2648:	71 81       	ldd	r23, Z+1	; 0x01
    264a:	82 81       	ldd	r24, Z+2	; 0x02
    264c:	93 81       	ldd	r25, Z+3	; 0x03
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
    2652:	40 e2       	ldi	r20, 0x20	; 32
    2654:	51 e4       	ldi	r21, 0x41	; 65
    2656:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    265a:	dc 01       	movw	r26, r24
    265c:	cb 01       	movw	r24, r22
    265e:	8e 01       	movw	r16, r28
    2660:	09 58       	subi	r16, 0x89	; 137
    2662:	1c 4f       	sbci	r17, 0xFC	; 252
    2664:	bc 01       	movw	r22, r24
    2666:	cd 01       	movw	r24, r26
    2668:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    266c:	dc 01       	movw	r26, r24
    266e:	cb 01       	movw	r24, r22
    2670:	f8 01       	movw	r30, r16
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	80 83       	st	Z, r24
    2676:	1f c0       	rjmp	.+62     	; 0x26b6 <Forward+0x2d6>
    2678:	fe 01       	movw	r30, r28
    267a:	eb 58       	subi	r30, 0x8B	; 139
    267c:	fc 4f       	sbci	r31, 0xFC	; 252
    267e:	80 e9       	ldi	r24, 0x90	; 144
    2680:	91 e0       	ldi	r25, 0x01	; 1
    2682:	91 83       	std	Z+1, r25	; 0x01
    2684:	80 83       	st	Z, r24
    2686:	fe 01       	movw	r30, r28
    2688:	eb 58       	subi	r30, 0x8B	; 139
    268a:	fc 4f       	sbci	r31, 0xFC	; 252
    268c:	80 81       	ld	r24, Z
    268e:	91 81       	ldd	r25, Z+1	; 0x01
    2690:	01 97       	sbiw	r24, 0x01	; 1
    2692:	f1 f7       	brne	.-4      	; 0x2690 <Forward+0x2b0>
    2694:	fe 01       	movw	r30, r28
    2696:	eb 58       	subi	r30, 0x8B	; 139
    2698:	fc 4f       	sbci	r31, 0xFC	; 252
    269a:	91 83       	std	Z+1, r25	; 0x01
    269c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    269e:	de 01       	movw	r26, r28
    26a0:	a9 58       	subi	r26, 0x89	; 137
    26a2:	bc 4f       	sbci	r27, 0xFC	; 252
    26a4:	fe 01       	movw	r30, r28
    26a6:	e9 58       	subi	r30, 0x89	; 137
    26a8:	fc 4f       	sbci	r31, 0xFC	; 252
    26aa:	80 81       	ld	r24, Z
    26ac:	91 81       	ldd	r25, Z+1	; 0x01
    26ae:	01 97       	sbiw	r24, 0x01	; 1
    26b0:	11 96       	adiw	r26, 0x01	; 1
    26b2:	9c 93       	st	X, r25
    26b4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26b6:	fe 01       	movw	r30, r28
    26b8:	e9 58       	subi	r30, 0x89	; 137
    26ba:	fc 4f       	sbci	r31, 0xFC	; 252
    26bc:	80 81       	ld	r24, Z
    26be:	91 81       	ldd	r25, Z+1	; 0x01
    26c0:	00 97       	sbiw	r24, 0x00	; 0
    26c2:	d1 f6       	brne	.-76     	; 0x2678 <Forward+0x298>
    26c4:	27 c0       	rjmp	.+78     	; 0x2714 <Forward+0x334>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c6:	8e 01       	movw	r16, r28
    26c8:	09 58       	subi	r16, 0x89	; 137
    26ca:	1c 4f       	sbci	r17, 0xFC	; 252
    26cc:	fe 01       	movw	r30, r28
    26ce:	e7 58       	subi	r30, 0x87	; 135
    26d0:	fc 4f       	sbci	r31, 0xFC	; 252
    26d2:	60 81       	ld	r22, Z
    26d4:	71 81       	ldd	r23, Z+1	; 0x01
    26d6:	82 81       	ldd	r24, Z+2	; 0x02
    26d8:	93 81       	ldd	r25, Z+3	; 0x03
    26da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26de:	dc 01       	movw	r26, r24
    26e0:	cb 01       	movw	r24, r22
    26e2:	f8 01       	movw	r30, r16
    26e4:	91 83       	std	Z+1, r25	; 0x01
    26e6:	80 83       	st	Z, r24
    26e8:	de 01       	movw	r26, r28
    26ea:	ad 58       	subi	r26, 0x8D	; 141
    26ec:	bc 4f       	sbci	r27, 0xFC	; 252
    26ee:	fe 01       	movw	r30, r28
    26f0:	e9 58       	subi	r30, 0x89	; 137
    26f2:	fc 4f       	sbci	r31, 0xFC	; 252
    26f4:	80 81       	ld	r24, Z
    26f6:	91 81       	ldd	r25, Z+1	; 0x01
    26f8:	8d 93       	st	X+, r24
    26fa:	9c 93       	st	X, r25
    26fc:	fe 01       	movw	r30, r28
    26fe:	ed 58       	subi	r30, 0x8D	; 141
    2700:	fc 4f       	sbci	r31, 0xFC	; 252
    2702:	80 81       	ld	r24, Z
    2704:	91 81       	ldd	r25, Z+1	; 0x01
    2706:	01 97       	sbiw	r24, 0x01	; 1
    2708:	f1 f7       	brne	.-4      	; 0x2706 <Forward+0x326>
    270a:	fe 01       	movw	r30, r28
    270c:	ed 58       	subi	r30, 0x8D	; 141
    270e:	fc 4f       	sbci	r31, 0xFC	; 252
    2710:	91 83       	std	Z+1, r25	; 0x01
    2712:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = POSN4;
    2714:	8b e0       	ldi	r24, 0x0B	; 11
    2716:	80 93 6a 00 	sts	0x006A, r24
    271a:	fe 01       	movw	r30, r28
    271c:	e1 59       	subi	r30, 0x91	; 145
    271e:	fc 4f       	sbci	r31, 0xFC	; 252
    2720:	80 e0       	ldi	r24, 0x00	; 0
    2722:	90 e0       	ldi	r25, 0x00	; 0
    2724:	ac e8       	ldi	r26, 0x8C	; 140
    2726:	b2 e4       	ldi	r27, 0x42	; 66
    2728:	80 83       	st	Z, r24
    272a:	91 83       	std	Z+1, r25	; 0x01
    272c:	a2 83       	std	Z+2, r26	; 0x02
    272e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2730:	8e 01       	movw	r16, r28
    2732:	05 59       	subi	r16, 0x95	; 149
    2734:	1c 4f       	sbci	r17, 0xFC	; 252
    2736:	fe 01       	movw	r30, r28
    2738:	e1 59       	subi	r30, 0x91	; 145
    273a:	fc 4f       	sbci	r31, 0xFC	; 252
    273c:	60 81       	ld	r22, Z
    273e:	71 81       	ldd	r23, Z+1	; 0x01
    2740:	82 81       	ldd	r24, Z+2	; 0x02
    2742:	93 81       	ldd	r25, Z+3	; 0x03
    2744:	20 e0       	ldi	r18, 0x00	; 0
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	4a e7       	ldi	r20, 0x7A	; 122
    274a:	55 e4       	ldi	r21, 0x45	; 69
    274c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2750:	dc 01       	movw	r26, r24
    2752:	cb 01       	movw	r24, r22
    2754:	f8 01       	movw	r30, r16
    2756:	80 83       	st	Z, r24
    2758:	91 83       	std	Z+1, r25	; 0x01
    275a:	a2 83       	std	Z+2, r26	; 0x02
    275c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    275e:	fe 01       	movw	r30, r28
    2760:	e5 59       	subi	r30, 0x95	; 149
    2762:	fc 4f       	sbci	r31, 0xFC	; 252
    2764:	60 81       	ld	r22, Z
    2766:	71 81       	ldd	r23, Z+1	; 0x01
    2768:	82 81       	ldd	r24, Z+2	; 0x02
    276a:	93 81       	ldd	r25, Z+3	; 0x03
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	40 e8       	ldi	r20, 0x80	; 128
    2772:	5f e3       	ldi	r21, 0x3F	; 63
    2774:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2778:	88 23       	and	r24, r24
    277a:	44 f4       	brge	.+16     	; 0x278c <Forward+0x3ac>
		__ticks = 1;
    277c:	fe 01       	movw	r30, r28
    277e:	e7 59       	subi	r30, 0x97	; 151
    2780:	fc 4f       	sbci	r31, 0xFC	; 252
    2782:	81 e0       	ldi	r24, 0x01	; 1
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	91 83       	std	Z+1, r25	; 0x01
    2788:	80 83       	st	Z, r24
    278a:	64 c0       	rjmp	.+200    	; 0x2854 <Forward+0x474>
	else if (__tmp > 65535)
    278c:	fe 01       	movw	r30, r28
    278e:	e5 59       	subi	r30, 0x95	; 149
    2790:	fc 4f       	sbci	r31, 0xFC	; 252
    2792:	60 81       	ld	r22, Z
    2794:	71 81       	ldd	r23, Z+1	; 0x01
    2796:	82 81       	ldd	r24, Z+2	; 0x02
    2798:	93 81       	ldd	r25, Z+3	; 0x03
    279a:	20 e0       	ldi	r18, 0x00	; 0
    279c:	3f ef       	ldi	r19, 0xFF	; 255
    279e:	4f e7       	ldi	r20, 0x7F	; 127
    27a0:	57 e4       	ldi	r21, 0x47	; 71
    27a2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    27a6:	18 16       	cp	r1, r24
    27a8:	0c f0       	brlt	.+2      	; 0x27ac <Forward+0x3cc>
    27aa:	43 c0       	rjmp	.+134    	; 0x2832 <Forward+0x452>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27ac:	fe 01       	movw	r30, r28
    27ae:	e1 59       	subi	r30, 0x91	; 145
    27b0:	fc 4f       	sbci	r31, 0xFC	; 252
    27b2:	60 81       	ld	r22, Z
    27b4:	71 81       	ldd	r23, Z+1	; 0x01
    27b6:	82 81       	ldd	r24, Z+2	; 0x02
    27b8:	93 81       	ldd	r25, Z+3	; 0x03
    27ba:	20 e0       	ldi	r18, 0x00	; 0
    27bc:	30 e0       	ldi	r19, 0x00	; 0
    27be:	40 e2       	ldi	r20, 0x20	; 32
    27c0:	51 e4       	ldi	r21, 0x41	; 65
    27c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27c6:	dc 01       	movw	r26, r24
    27c8:	cb 01       	movw	r24, r22
    27ca:	8e 01       	movw	r16, r28
    27cc:	07 59       	subi	r16, 0x97	; 151
    27ce:	1c 4f       	sbci	r17, 0xFC	; 252
    27d0:	bc 01       	movw	r22, r24
    27d2:	cd 01       	movw	r24, r26
    27d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27d8:	dc 01       	movw	r26, r24
    27da:	cb 01       	movw	r24, r22
    27dc:	f8 01       	movw	r30, r16
    27de:	91 83       	std	Z+1, r25	; 0x01
    27e0:	80 83       	st	Z, r24
    27e2:	1f c0       	rjmp	.+62     	; 0x2822 <Forward+0x442>
    27e4:	fe 01       	movw	r30, r28
    27e6:	e9 59       	subi	r30, 0x99	; 153
    27e8:	fc 4f       	sbci	r31, 0xFC	; 252
    27ea:	80 e9       	ldi	r24, 0x90	; 144
    27ec:	91 e0       	ldi	r25, 0x01	; 1
    27ee:	91 83       	std	Z+1, r25	; 0x01
    27f0:	80 83       	st	Z, r24
    27f2:	fe 01       	movw	r30, r28
    27f4:	e9 59       	subi	r30, 0x99	; 153
    27f6:	fc 4f       	sbci	r31, 0xFC	; 252
    27f8:	80 81       	ld	r24, Z
    27fa:	91 81       	ldd	r25, Z+1	; 0x01
    27fc:	01 97       	sbiw	r24, 0x01	; 1
    27fe:	f1 f7       	brne	.-4      	; 0x27fc <Forward+0x41c>
    2800:	fe 01       	movw	r30, r28
    2802:	e9 59       	subi	r30, 0x99	; 153
    2804:	fc 4f       	sbci	r31, 0xFC	; 252
    2806:	91 83       	std	Z+1, r25	; 0x01
    2808:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    280a:	de 01       	movw	r26, r28
    280c:	a7 59       	subi	r26, 0x97	; 151
    280e:	bc 4f       	sbci	r27, 0xFC	; 252
    2810:	fe 01       	movw	r30, r28
    2812:	e7 59       	subi	r30, 0x97	; 151
    2814:	fc 4f       	sbci	r31, 0xFC	; 252
    2816:	80 81       	ld	r24, Z
    2818:	91 81       	ldd	r25, Z+1	; 0x01
    281a:	01 97       	sbiw	r24, 0x01	; 1
    281c:	11 96       	adiw	r26, 0x01	; 1
    281e:	9c 93       	st	X, r25
    2820:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2822:	fe 01       	movw	r30, r28
    2824:	e7 59       	subi	r30, 0x97	; 151
    2826:	fc 4f       	sbci	r31, 0xFC	; 252
    2828:	80 81       	ld	r24, Z
    282a:	91 81       	ldd	r25, Z+1	; 0x01
    282c:	00 97       	sbiw	r24, 0x00	; 0
    282e:	d1 f6       	brne	.-76     	; 0x27e4 <Forward+0x404>
    2830:	27 c0       	rjmp	.+78     	; 0x2880 <Forward+0x4a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2832:	8e 01       	movw	r16, r28
    2834:	07 59       	subi	r16, 0x97	; 151
    2836:	1c 4f       	sbci	r17, 0xFC	; 252
    2838:	fe 01       	movw	r30, r28
    283a:	e5 59       	subi	r30, 0x95	; 149
    283c:	fc 4f       	sbci	r31, 0xFC	; 252
    283e:	60 81       	ld	r22, Z
    2840:	71 81       	ldd	r23, Z+1	; 0x01
    2842:	82 81       	ldd	r24, Z+2	; 0x02
    2844:	93 81       	ldd	r25, Z+3	; 0x03
    2846:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    284a:	dc 01       	movw	r26, r24
    284c:	cb 01       	movw	r24, r22
    284e:	f8 01       	movw	r30, r16
    2850:	91 83       	std	Z+1, r25	; 0x01
    2852:	80 83       	st	Z, r24
    2854:	de 01       	movw	r26, r28
    2856:	ab 59       	subi	r26, 0x9B	; 155
    2858:	bc 4f       	sbci	r27, 0xFC	; 252
    285a:	fe 01       	movw	r30, r28
    285c:	e7 59       	subi	r30, 0x97	; 151
    285e:	fc 4f       	sbci	r31, 0xFC	; 252
    2860:	80 81       	ld	r24, Z
    2862:	91 81       	ldd	r25, Z+1	; 0x01
    2864:	8d 93       	st	X+, r24
    2866:	9c 93       	st	X, r25
    2868:	fe 01       	movw	r30, r28
    286a:	eb 59       	subi	r30, 0x9B	; 155
    286c:	fc 4f       	sbci	r31, 0xFC	; 252
    286e:	80 81       	ld	r24, Z
    2870:	91 81       	ldd	r25, Z+1	; 0x01
    2872:	01 97       	sbiw	r24, 0x01	; 1
    2874:	f1 f7       	brne	.-4      	; 0x2872 <Forward+0x492>
    2876:	fe 01       	movw	r30, r28
    2878:	eb 59       	subi	r30, 0x9B	; 155
    287a:	fc 4f       	sbci	r31, 0xFC	; 252
    287c:	91 83       	std	Z+1, r25	; 0x01
    287e:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = POSN3;
    2880:	8a e0       	ldi	r24, 0x0A	; 10
    2882:	80 93 6a 00 	sts	0x006A, r24
    2886:	fe 01       	movw	r30, r28
    2888:	ef 59       	subi	r30, 0x9F	; 159
    288a:	fc 4f       	sbci	r31, 0xFC	; 252
    288c:	80 e0       	ldi	r24, 0x00	; 0
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	ac e8       	ldi	r26, 0x8C	; 140
    2892:	b2 e4       	ldi	r27, 0x42	; 66
    2894:	80 83       	st	Z, r24
    2896:	91 83       	std	Z+1, r25	; 0x01
    2898:	a2 83       	std	Z+2, r26	; 0x02
    289a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    289c:	8e 01       	movw	r16, r28
    289e:	03 5a       	subi	r16, 0xA3	; 163
    28a0:	1c 4f       	sbci	r17, 0xFC	; 252
    28a2:	fe 01       	movw	r30, r28
    28a4:	ef 59       	subi	r30, 0x9F	; 159
    28a6:	fc 4f       	sbci	r31, 0xFC	; 252
    28a8:	60 81       	ld	r22, Z
    28aa:	71 81       	ldd	r23, Z+1	; 0x01
    28ac:	82 81       	ldd	r24, Z+2	; 0x02
    28ae:	93 81       	ldd	r25, Z+3	; 0x03
    28b0:	20 e0       	ldi	r18, 0x00	; 0
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	4a e7       	ldi	r20, 0x7A	; 122
    28b6:	55 e4       	ldi	r21, 0x45	; 69
    28b8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28bc:	dc 01       	movw	r26, r24
    28be:	cb 01       	movw	r24, r22
    28c0:	f8 01       	movw	r30, r16
    28c2:	80 83       	st	Z, r24
    28c4:	91 83       	std	Z+1, r25	; 0x01
    28c6:	a2 83       	std	Z+2, r26	; 0x02
    28c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28ca:	fe 01       	movw	r30, r28
    28cc:	e3 5a       	subi	r30, 0xA3	; 163
    28ce:	fc 4f       	sbci	r31, 0xFC	; 252
    28d0:	60 81       	ld	r22, Z
    28d2:	71 81       	ldd	r23, Z+1	; 0x01
    28d4:	82 81       	ldd	r24, Z+2	; 0x02
    28d6:	93 81       	ldd	r25, Z+3	; 0x03
    28d8:	20 e0       	ldi	r18, 0x00	; 0
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	40 e8       	ldi	r20, 0x80	; 128
    28de:	5f e3       	ldi	r21, 0x3F	; 63
    28e0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    28e4:	88 23       	and	r24, r24
    28e6:	44 f4       	brge	.+16     	; 0x28f8 <Forward+0x518>
		__ticks = 1;
    28e8:	fe 01       	movw	r30, r28
    28ea:	e5 5a       	subi	r30, 0xA5	; 165
    28ec:	fc 4f       	sbci	r31, 0xFC	; 252
    28ee:	81 e0       	ldi	r24, 0x01	; 1
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	91 83       	std	Z+1, r25	; 0x01
    28f4:	80 83       	st	Z, r24
    28f6:	64 c0       	rjmp	.+200    	; 0x29c0 <Forward+0x5e0>
	else if (__tmp > 65535)
    28f8:	fe 01       	movw	r30, r28
    28fa:	e3 5a       	subi	r30, 0xA3	; 163
    28fc:	fc 4f       	sbci	r31, 0xFC	; 252
    28fe:	60 81       	ld	r22, Z
    2900:	71 81       	ldd	r23, Z+1	; 0x01
    2902:	82 81       	ldd	r24, Z+2	; 0x02
    2904:	93 81       	ldd	r25, Z+3	; 0x03
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	3f ef       	ldi	r19, 0xFF	; 255
    290a:	4f e7       	ldi	r20, 0x7F	; 127
    290c:	57 e4       	ldi	r21, 0x47	; 71
    290e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2912:	18 16       	cp	r1, r24
    2914:	0c f0       	brlt	.+2      	; 0x2918 <Forward+0x538>
    2916:	43 c0       	rjmp	.+134    	; 0x299e <Forward+0x5be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2918:	fe 01       	movw	r30, r28
    291a:	ef 59       	subi	r30, 0x9F	; 159
    291c:	fc 4f       	sbci	r31, 0xFC	; 252
    291e:	60 81       	ld	r22, Z
    2920:	71 81       	ldd	r23, Z+1	; 0x01
    2922:	82 81       	ldd	r24, Z+2	; 0x02
    2924:	93 81       	ldd	r25, Z+3	; 0x03
    2926:	20 e0       	ldi	r18, 0x00	; 0
    2928:	30 e0       	ldi	r19, 0x00	; 0
    292a:	40 e2       	ldi	r20, 0x20	; 32
    292c:	51 e4       	ldi	r21, 0x41	; 65
    292e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2932:	dc 01       	movw	r26, r24
    2934:	cb 01       	movw	r24, r22
    2936:	8e 01       	movw	r16, r28
    2938:	05 5a       	subi	r16, 0xA5	; 165
    293a:	1c 4f       	sbci	r17, 0xFC	; 252
    293c:	bc 01       	movw	r22, r24
    293e:	cd 01       	movw	r24, r26
    2940:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2944:	dc 01       	movw	r26, r24
    2946:	cb 01       	movw	r24, r22
    2948:	f8 01       	movw	r30, r16
    294a:	91 83       	std	Z+1, r25	; 0x01
    294c:	80 83       	st	Z, r24
    294e:	1f c0       	rjmp	.+62     	; 0x298e <Forward+0x5ae>
    2950:	fe 01       	movw	r30, r28
    2952:	e7 5a       	subi	r30, 0xA7	; 167
    2954:	fc 4f       	sbci	r31, 0xFC	; 252
    2956:	80 e9       	ldi	r24, 0x90	; 144
    2958:	91 e0       	ldi	r25, 0x01	; 1
    295a:	91 83       	std	Z+1, r25	; 0x01
    295c:	80 83       	st	Z, r24
    295e:	fe 01       	movw	r30, r28
    2960:	e7 5a       	subi	r30, 0xA7	; 167
    2962:	fc 4f       	sbci	r31, 0xFC	; 252
    2964:	80 81       	ld	r24, Z
    2966:	91 81       	ldd	r25, Z+1	; 0x01
    2968:	01 97       	sbiw	r24, 0x01	; 1
    296a:	f1 f7       	brne	.-4      	; 0x2968 <Forward+0x588>
    296c:	fe 01       	movw	r30, r28
    296e:	e7 5a       	subi	r30, 0xA7	; 167
    2970:	fc 4f       	sbci	r31, 0xFC	; 252
    2972:	91 83       	std	Z+1, r25	; 0x01
    2974:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2976:	de 01       	movw	r26, r28
    2978:	a5 5a       	subi	r26, 0xA5	; 165
    297a:	bc 4f       	sbci	r27, 0xFC	; 252
    297c:	fe 01       	movw	r30, r28
    297e:	e5 5a       	subi	r30, 0xA5	; 165
    2980:	fc 4f       	sbci	r31, 0xFC	; 252
    2982:	80 81       	ld	r24, Z
    2984:	91 81       	ldd	r25, Z+1	; 0x01
    2986:	01 97       	sbiw	r24, 0x01	; 1
    2988:	11 96       	adiw	r26, 0x01	; 1
    298a:	9c 93       	st	X, r25
    298c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    298e:	fe 01       	movw	r30, r28
    2990:	e5 5a       	subi	r30, 0xA5	; 165
    2992:	fc 4f       	sbci	r31, 0xFC	; 252
    2994:	80 81       	ld	r24, Z
    2996:	91 81       	ldd	r25, Z+1	; 0x01
    2998:	00 97       	sbiw	r24, 0x00	; 0
    299a:	d1 f6       	brne	.-76     	; 0x2950 <Forward+0x570>
    299c:	27 c0       	rjmp	.+78     	; 0x29ec <Forward+0x60c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    299e:	8e 01       	movw	r16, r28
    29a0:	05 5a       	subi	r16, 0xA5	; 165
    29a2:	1c 4f       	sbci	r17, 0xFC	; 252
    29a4:	fe 01       	movw	r30, r28
    29a6:	e3 5a       	subi	r30, 0xA3	; 163
    29a8:	fc 4f       	sbci	r31, 0xFC	; 252
    29aa:	60 81       	ld	r22, Z
    29ac:	71 81       	ldd	r23, Z+1	; 0x01
    29ae:	82 81       	ldd	r24, Z+2	; 0x02
    29b0:	93 81       	ldd	r25, Z+3	; 0x03
    29b2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	f8 01       	movw	r30, r16
    29bc:	91 83       	std	Z+1, r25	; 0x01
    29be:	80 83       	st	Z, r24
    29c0:	de 01       	movw	r26, r28
    29c2:	a9 5a       	subi	r26, 0xA9	; 169
    29c4:	bc 4f       	sbci	r27, 0xFC	; 252
    29c6:	fe 01       	movw	r30, r28
    29c8:	e5 5a       	subi	r30, 0xA5	; 165
    29ca:	fc 4f       	sbci	r31, 0xFC	; 252
    29cc:	80 81       	ld	r24, Z
    29ce:	91 81       	ldd	r25, Z+1	; 0x01
    29d0:	8d 93       	st	X+, r24
    29d2:	9c 93       	st	X, r25
    29d4:	fe 01       	movw	r30, r28
    29d6:	e9 5a       	subi	r30, 0xA9	; 169
    29d8:	fc 4f       	sbci	r31, 0xFC	; 252
    29da:	80 81       	ld	r24, Z
    29dc:	91 81       	ldd	r25, Z+1	; 0x01
    29de:	01 97       	sbiw	r24, 0x01	; 1
    29e0:	f1 f7       	brne	.-4      	; 0x29de <Forward+0x5fe>
    29e2:	fe 01       	movw	r30, r28
    29e4:	e9 5a       	subi	r30, 0xA9	; 169
    29e6:	fc 4f       	sbci	r31, 0xFC	; 252
    29e8:	91 83       	std	Z+1, r25	; 0x01
    29ea:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = POSN2;
    29ec:	89 e0       	ldi	r24, 0x09	; 9
    29ee:	80 93 6a 00 	sts	0x006A, r24

	angle3 = POS7N;
    29f2:	8e e0       	ldi	r24, 0x0E	; 14
    29f4:	80 93 6b 00 	sts	0x006B, r24
    29f8:	fe 01       	movw	r30, r28
    29fa:	ed 5a       	subi	r30, 0xAD	; 173
    29fc:	fc 4f       	sbci	r31, 0xFC	; 252
    29fe:	80 e0       	ldi	r24, 0x00	; 0
    2a00:	90 e0       	ldi	r25, 0x00	; 0
    2a02:	ac e8       	ldi	r26, 0x8C	; 140
    2a04:	b2 e4       	ldi	r27, 0x42	; 66
    2a06:	80 83       	st	Z, r24
    2a08:	91 83       	std	Z+1, r25	; 0x01
    2a0a:	a2 83       	std	Z+2, r26	; 0x02
    2a0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a0e:	8e 01       	movw	r16, r28
    2a10:	01 5b       	subi	r16, 0xB1	; 177
    2a12:	1c 4f       	sbci	r17, 0xFC	; 252
    2a14:	fe 01       	movw	r30, r28
    2a16:	ed 5a       	subi	r30, 0xAD	; 173
    2a18:	fc 4f       	sbci	r31, 0xFC	; 252
    2a1a:	60 81       	ld	r22, Z
    2a1c:	71 81       	ldd	r23, Z+1	; 0x01
    2a1e:	82 81       	ldd	r24, Z+2	; 0x02
    2a20:	93 81       	ldd	r25, Z+3	; 0x03
    2a22:	20 e0       	ldi	r18, 0x00	; 0
    2a24:	30 e0       	ldi	r19, 0x00	; 0
    2a26:	4a e7       	ldi	r20, 0x7A	; 122
    2a28:	55 e4       	ldi	r21, 0x45	; 69
    2a2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2a2e:	dc 01       	movw	r26, r24
    2a30:	cb 01       	movw	r24, r22
    2a32:	f8 01       	movw	r30, r16
    2a34:	80 83       	st	Z, r24
    2a36:	91 83       	std	Z+1, r25	; 0x01
    2a38:	a2 83       	std	Z+2, r26	; 0x02
    2a3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a3c:	fe 01       	movw	r30, r28
    2a3e:	e1 5b       	subi	r30, 0xB1	; 177
    2a40:	fc 4f       	sbci	r31, 0xFC	; 252
    2a42:	60 81       	ld	r22, Z
    2a44:	71 81       	ldd	r23, Z+1	; 0x01
    2a46:	82 81       	ldd	r24, Z+2	; 0x02
    2a48:	93 81       	ldd	r25, Z+3	; 0x03
    2a4a:	20 e0       	ldi	r18, 0x00	; 0
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	40 e8       	ldi	r20, 0x80	; 128
    2a50:	5f e3       	ldi	r21, 0x3F	; 63
    2a52:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2a56:	88 23       	and	r24, r24
    2a58:	44 f4       	brge	.+16     	; 0x2a6a <Forward+0x68a>
		__ticks = 1;
    2a5a:	fe 01       	movw	r30, r28
    2a5c:	e3 5b       	subi	r30, 0xB3	; 179
    2a5e:	fc 4f       	sbci	r31, 0xFC	; 252
    2a60:	81 e0       	ldi	r24, 0x01	; 1
    2a62:	90 e0       	ldi	r25, 0x00	; 0
    2a64:	91 83       	std	Z+1, r25	; 0x01
    2a66:	80 83       	st	Z, r24
    2a68:	64 c0       	rjmp	.+200    	; 0x2b32 <Forward+0x752>
	else if (__tmp > 65535)
    2a6a:	fe 01       	movw	r30, r28
    2a6c:	e1 5b       	subi	r30, 0xB1	; 177
    2a6e:	fc 4f       	sbci	r31, 0xFC	; 252
    2a70:	60 81       	ld	r22, Z
    2a72:	71 81       	ldd	r23, Z+1	; 0x01
    2a74:	82 81       	ldd	r24, Z+2	; 0x02
    2a76:	93 81       	ldd	r25, Z+3	; 0x03
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	3f ef       	ldi	r19, 0xFF	; 255
    2a7c:	4f e7       	ldi	r20, 0x7F	; 127
    2a7e:	57 e4       	ldi	r21, 0x47	; 71
    2a80:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2a84:	18 16       	cp	r1, r24
    2a86:	0c f0       	brlt	.+2      	; 0x2a8a <Forward+0x6aa>
    2a88:	43 c0       	rjmp	.+134    	; 0x2b10 <Forward+0x730>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a8a:	fe 01       	movw	r30, r28
    2a8c:	ed 5a       	subi	r30, 0xAD	; 173
    2a8e:	fc 4f       	sbci	r31, 0xFC	; 252
    2a90:	60 81       	ld	r22, Z
    2a92:	71 81       	ldd	r23, Z+1	; 0x01
    2a94:	82 81       	ldd	r24, Z+2	; 0x02
    2a96:	93 81       	ldd	r25, Z+3	; 0x03
    2a98:	20 e0       	ldi	r18, 0x00	; 0
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	40 e2       	ldi	r20, 0x20	; 32
    2a9e:	51 e4       	ldi	r21, 0x41	; 65
    2aa0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2aa4:	dc 01       	movw	r26, r24
    2aa6:	cb 01       	movw	r24, r22
    2aa8:	8e 01       	movw	r16, r28
    2aaa:	03 5b       	subi	r16, 0xB3	; 179
    2aac:	1c 4f       	sbci	r17, 0xFC	; 252
    2aae:	bc 01       	movw	r22, r24
    2ab0:	cd 01       	movw	r24, r26
    2ab2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	cb 01       	movw	r24, r22
    2aba:	f8 01       	movw	r30, r16
    2abc:	91 83       	std	Z+1, r25	; 0x01
    2abe:	80 83       	st	Z, r24
    2ac0:	1f c0       	rjmp	.+62     	; 0x2b00 <Forward+0x720>
    2ac2:	fe 01       	movw	r30, r28
    2ac4:	e5 5b       	subi	r30, 0xB5	; 181
    2ac6:	fc 4f       	sbci	r31, 0xFC	; 252
    2ac8:	80 e9       	ldi	r24, 0x90	; 144
    2aca:	91 e0       	ldi	r25, 0x01	; 1
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	80 83       	st	Z, r24
    2ad0:	fe 01       	movw	r30, r28
    2ad2:	e5 5b       	subi	r30, 0xB5	; 181
    2ad4:	fc 4f       	sbci	r31, 0xFC	; 252
    2ad6:	80 81       	ld	r24, Z
    2ad8:	91 81       	ldd	r25, Z+1	; 0x01
    2ada:	01 97       	sbiw	r24, 0x01	; 1
    2adc:	f1 f7       	brne	.-4      	; 0x2ada <Forward+0x6fa>
    2ade:	fe 01       	movw	r30, r28
    2ae0:	e5 5b       	subi	r30, 0xB5	; 181
    2ae2:	fc 4f       	sbci	r31, 0xFC	; 252
    2ae4:	91 83       	std	Z+1, r25	; 0x01
    2ae6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae8:	de 01       	movw	r26, r28
    2aea:	a3 5b       	subi	r26, 0xB3	; 179
    2aec:	bc 4f       	sbci	r27, 0xFC	; 252
    2aee:	fe 01       	movw	r30, r28
    2af0:	e3 5b       	subi	r30, 0xB3	; 179
    2af2:	fc 4f       	sbci	r31, 0xFC	; 252
    2af4:	80 81       	ld	r24, Z
    2af6:	91 81       	ldd	r25, Z+1	; 0x01
    2af8:	01 97       	sbiw	r24, 0x01	; 1
    2afa:	11 96       	adiw	r26, 0x01	; 1
    2afc:	9c 93       	st	X, r25
    2afe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b00:	fe 01       	movw	r30, r28
    2b02:	e3 5b       	subi	r30, 0xB3	; 179
    2b04:	fc 4f       	sbci	r31, 0xFC	; 252
    2b06:	80 81       	ld	r24, Z
    2b08:	91 81       	ldd	r25, Z+1	; 0x01
    2b0a:	00 97       	sbiw	r24, 0x00	; 0
    2b0c:	d1 f6       	brne	.-76     	; 0x2ac2 <Forward+0x6e2>
    2b0e:	27 c0       	rjmp	.+78     	; 0x2b5e <Forward+0x77e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b10:	8e 01       	movw	r16, r28
    2b12:	03 5b       	subi	r16, 0xB3	; 179
    2b14:	1c 4f       	sbci	r17, 0xFC	; 252
    2b16:	fe 01       	movw	r30, r28
    2b18:	e1 5b       	subi	r30, 0xB1	; 177
    2b1a:	fc 4f       	sbci	r31, 0xFC	; 252
    2b1c:	60 81       	ld	r22, Z
    2b1e:	71 81       	ldd	r23, Z+1	; 0x01
    2b20:	82 81       	ldd	r24, Z+2	; 0x02
    2b22:	93 81       	ldd	r25, Z+3	; 0x03
    2b24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b28:	dc 01       	movw	r26, r24
    2b2a:	cb 01       	movw	r24, r22
    2b2c:	f8 01       	movw	r30, r16
    2b2e:	91 83       	std	Z+1, r25	; 0x01
    2b30:	80 83       	st	Z, r24
    2b32:	de 01       	movw	r26, r28
    2b34:	a7 5b       	subi	r26, 0xB7	; 183
    2b36:	bc 4f       	sbci	r27, 0xFC	; 252
    2b38:	fe 01       	movw	r30, r28
    2b3a:	e3 5b       	subi	r30, 0xB3	; 179
    2b3c:	fc 4f       	sbci	r31, 0xFC	; 252
    2b3e:	80 81       	ld	r24, Z
    2b40:	91 81       	ldd	r25, Z+1	; 0x01
    2b42:	8d 93       	st	X+, r24
    2b44:	9c 93       	st	X, r25
    2b46:	fe 01       	movw	r30, r28
    2b48:	e7 5b       	subi	r30, 0xB7	; 183
    2b4a:	fc 4f       	sbci	r31, 0xFC	; 252
    2b4c:	80 81       	ld	r24, Z
    2b4e:	91 81       	ldd	r25, Z+1	; 0x01
    2b50:	01 97       	sbiw	r24, 0x01	; 1
    2b52:	f1 f7       	brne	.-4      	; 0x2b50 <Forward+0x770>
    2b54:	fe 01       	movw	r30, r28
    2b56:	e7 5b       	subi	r30, 0xB7	; 183
    2b58:	fc 4f       	sbci	r31, 0xFC	; 252
    2b5a:	91 83       	std	Z+1, r25	; 0x01
    2b5c:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = NaturalPos;
    2b5e:	8d e0       	ldi	r24, 0x0D	; 13
    2b60:	80 93 6b 00 	sts	0x006B, r24
    2b64:	fe 01       	movw	r30, r28
    2b66:	eb 5b       	subi	r30, 0xBB	; 187
    2b68:	fc 4f       	sbci	r31, 0xFC	; 252
    2b6a:	80 e0       	ldi	r24, 0x00	; 0
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	ac e8       	ldi	r26, 0x8C	; 140
    2b70:	b2 e4       	ldi	r27, 0x42	; 66
    2b72:	80 83       	st	Z, r24
    2b74:	91 83       	std	Z+1, r25	; 0x01
    2b76:	a2 83       	std	Z+2, r26	; 0x02
    2b78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b7a:	8e 01       	movw	r16, r28
    2b7c:	0f 5b       	subi	r16, 0xBF	; 191
    2b7e:	1c 4f       	sbci	r17, 0xFC	; 252
    2b80:	fe 01       	movw	r30, r28
    2b82:	eb 5b       	subi	r30, 0xBB	; 187
    2b84:	fc 4f       	sbci	r31, 0xFC	; 252
    2b86:	60 81       	ld	r22, Z
    2b88:	71 81       	ldd	r23, Z+1	; 0x01
    2b8a:	82 81       	ldd	r24, Z+2	; 0x02
    2b8c:	93 81       	ldd	r25, Z+3	; 0x03
    2b8e:	20 e0       	ldi	r18, 0x00	; 0
    2b90:	30 e0       	ldi	r19, 0x00	; 0
    2b92:	4a e7       	ldi	r20, 0x7A	; 122
    2b94:	55 e4       	ldi	r21, 0x45	; 69
    2b96:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b9a:	dc 01       	movw	r26, r24
    2b9c:	cb 01       	movw	r24, r22
    2b9e:	f8 01       	movw	r30, r16
    2ba0:	80 83       	st	Z, r24
    2ba2:	91 83       	std	Z+1, r25	; 0x01
    2ba4:	a2 83       	std	Z+2, r26	; 0x02
    2ba6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ba8:	fe 01       	movw	r30, r28
    2baa:	ef 5b       	subi	r30, 0xBF	; 191
    2bac:	fc 4f       	sbci	r31, 0xFC	; 252
    2bae:	60 81       	ld	r22, Z
    2bb0:	71 81       	ldd	r23, Z+1	; 0x01
    2bb2:	82 81       	ldd	r24, Z+2	; 0x02
    2bb4:	93 81       	ldd	r25, Z+3	; 0x03
    2bb6:	20 e0       	ldi	r18, 0x00	; 0
    2bb8:	30 e0       	ldi	r19, 0x00	; 0
    2bba:	40 e8       	ldi	r20, 0x80	; 128
    2bbc:	5f e3       	ldi	r21, 0x3F	; 63
    2bbe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2bc2:	88 23       	and	r24, r24
    2bc4:	44 f4       	brge	.+16     	; 0x2bd6 <Forward+0x7f6>
		__ticks = 1;
    2bc6:	fe 01       	movw	r30, r28
    2bc8:	e1 5c       	subi	r30, 0xC1	; 193
    2bca:	fc 4f       	sbci	r31, 0xFC	; 252
    2bcc:	81 e0       	ldi	r24, 0x01	; 1
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	91 83       	std	Z+1, r25	; 0x01
    2bd2:	80 83       	st	Z, r24
    2bd4:	64 c0       	rjmp	.+200    	; 0x2c9e <Forward+0x8be>
	else if (__tmp > 65535)
    2bd6:	fe 01       	movw	r30, r28
    2bd8:	ef 5b       	subi	r30, 0xBF	; 191
    2bda:	fc 4f       	sbci	r31, 0xFC	; 252
    2bdc:	60 81       	ld	r22, Z
    2bde:	71 81       	ldd	r23, Z+1	; 0x01
    2be0:	82 81       	ldd	r24, Z+2	; 0x02
    2be2:	93 81       	ldd	r25, Z+3	; 0x03
    2be4:	20 e0       	ldi	r18, 0x00	; 0
    2be6:	3f ef       	ldi	r19, 0xFF	; 255
    2be8:	4f e7       	ldi	r20, 0x7F	; 127
    2bea:	57 e4       	ldi	r21, 0x47	; 71
    2bec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2bf0:	18 16       	cp	r1, r24
    2bf2:	0c f0       	brlt	.+2      	; 0x2bf6 <Forward+0x816>
    2bf4:	43 c0       	rjmp	.+134    	; 0x2c7c <Forward+0x89c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bf6:	fe 01       	movw	r30, r28
    2bf8:	eb 5b       	subi	r30, 0xBB	; 187
    2bfa:	fc 4f       	sbci	r31, 0xFC	; 252
    2bfc:	60 81       	ld	r22, Z
    2bfe:	71 81       	ldd	r23, Z+1	; 0x01
    2c00:	82 81       	ldd	r24, Z+2	; 0x02
    2c02:	93 81       	ldd	r25, Z+3	; 0x03
    2c04:	20 e0       	ldi	r18, 0x00	; 0
    2c06:	30 e0       	ldi	r19, 0x00	; 0
    2c08:	40 e2       	ldi	r20, 0x20	; 32
    2c0a:	51 e4       	ldi	r21, 0x41	; 65
    2c0c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c10:	dc 01       	movw	r26, r24
    2c12:	cb 01       	movw	r24, r22
    2c14:	8e 01       	movw	r16, r28
    2c16:	01 5c       	subi	r16, 0xC1	; 193
    2c18:	1c 4f       	sbci	r17, 0xFC	; 252
    2c1a:	bc 01       	movw	r22, r24
    2c1c:	cd 01       	movw	r24, r26
    2c1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c22:	dc 01       	movw	r26, r24
    2c24:	cb 01       	movw	r24, r22
    2c26:	f8 01       	movw	r30, r16
    2c28:	91 83       	std	Z+1, r25	; 0x01
    2c2a:	80 83       	st	Z, r24
    2c2c:	1f c0       	rjmp	.+62     	; 0x2c6c <Forward+0x88c>
    2c2e:	fe 01       	movw	r30, r28
    2c30:	e3 5c       	subi	r30, 0xC3	; 195
    2c32:	fc 4f       	sbci	r31, 0xFC	; 252
    2c34:	80 e9       	ldi	r24, 0x90	; 144
    2c36:	91 e0       	ldi	r25, 0x01	; 1
    2c38:	91 83       	std	Z+1, r25	; 0x01
    2c3a:	80 83       	st	Z, r24
    2c3c:	fe 01       	movw	r30, r28
    2c3e:	e3 5c       	subi	r30, 0xC3	; 195
    2c40:	fc 4f       	sbci	r31, 0xFC	; 252
    2c42:	80 81       	ld	r24, Z
    2c44:	91 81       	ldd	r25, Z+1	; 0x01
    2c46:	01 97       	sbiw	r24, 0x01	; 1
    2c48:	f1 f7       	brne	.-4      	; 0x2c46 <Forward+0x866>
    2c4a:	fe 01       	movw	r30, r28
    2c4c:	e3 5c       	subi	r30, 0xC3	; 195
    2c4e:	fc 4f       	sbci	r31, 0xFC	; 252
    2c50:	91 83       	std	Z+1, r25	; 0x01
    2c52:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c54:	de 01       	movw	r26, r28
    2c56:	a1 5c       	subi	r26, 0xC1	; 193
    2c58:	bc 4f       	sbci	r27, 0xFC	; 252
    2c5a:	fe 01       	movw	r30, r28
    2c5c:	e1 5c       	subi	r30, 0xC1	; 193
    2c5e:	fc 4f       	sbci	r31, 0xFC	; 252
    2c60:	80 81       	ld	r24, Z
    2c62:	91 81       	ldd	r25, Z+1	; 0x01
    2c64:	01 97       	sbiw	r24, 0x01	; 1
    2c66:	11 96       	adiw	r26, 0x01	; 1
    2c68:	9c 93       	st	X, r25
    2c6a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c6c:	fe 01       	movw	r30, r28
    2c6e:	e1 5c       	subi	r30, 0xC1	; 193
    2c70:	fc 4f       	sbci	r31, 0xFC	; 252
    2c72:	80 81       	ld	r24, Z
    2c74:	91 81       	ldd	r25, Z+1	; 0x01
    2c76:	00 97       	sbiw	r24, 0x00	; 0
    2c78:	d1 f6       	brne	.-76     	; 0x2c2e <Forward+0x84e>
    2c7a:	27 c0       	rjmp	.+78     	; 0x2cca <Forward+0x8ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c7c:	8e 01       	movw	r16, r28
    2c7e:	01 5c       	subi	r16, 0xC1	; 193
    2c80:	1c 4f       	sbci	r17, 0xFC	; 252
    2c82:	fe 01       	movw	r30, r28
    2c84:	ef 5b       	subi	r30, 0xBF	; 191
    2c86:	fc 4f       	sbci	r31, 0xFC	; 252
    2c88:	60 81       	ld	r22, Z
    2c8a:	71 81       	ldd	r23, Z+1	; 0x01
    2c8c:	82 81       	ldd	r24, Z+2	; 0x02
    2c8e:	93 81       	ldd	r25, Z+3	; 0x03
    2c90:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c94:	dc 01       	movw	r26, r24
    2c96:	cb 01       	movw	r24, r22
    2c98:	f8 01       	movw	r30, r16
    2c9a:	91 83       	std	Z+1, r25	; 0x01
    2c9c:	80 83       	st	Z, r24
    2c9e:	de 01       	movw	r26, r28
    2ca0:	a5 5c       	subi	r26, 0xC5	; 197
    2ca2:	bc 4f       	sbci	r27, 0xFC	; 252
    2ca4:	fe 01       	movw	r30, r28
    2ca6:	e1 5c       	subi	r30, 0xC1	; 193
    2ca8:	fc 4f       	sbci	r31, 0xFC	; 252
    2caa:	80 81       	ld	r24, Z
    2cac:	91 81       	ldd	r25, Z+1	; 0x01
    2cae:	8d 93       	st	X+, r24
    2cb0:	9c 93       	st	X, r25
    2cb2:	fe 01       	movw	r30, r28
    2cb4:	e5 5c       	subi	r30, 0xC5	; 197
    2cb6:	fc 4f       	sbci	r31, 0xFC	; 252
    2cb8:	80 81       	ld	r24, Z
    2cba:	91 81       	ldd	r25, Z+1	; 0x01
    2cbc:	01 97       	sbiw	r24, 0x01	; 1
    2cbe:	f1 f7       	brne	.-4      	; 0x2cbc <Forward+0x8dc>
    2cc0:	fe 01       	movw	r30, r28
    2cc2:	e5 5c       	subi	r30, 0xC5	; 197
    2cc4:	fc 4f       	sbci	r31, 0xFC	; 252
    2cc6:	91 83       	std	Z+1, r25	; 0x01
    2cc8:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POSN5;
    2cca:	8c e0       	ldi	r24, 0x0C	; 12
    2ccc:	80 93 6b 00 	sts	0x006B, r24
    2cd0:	fe 01       	movw	r30, r28
    2cd2:	e9 5c       	subi	r30, 0xC9	; 201
    2cd4:	fc 4f       	sbci	r31, 0xFC	; 252
    2cd6:	80 e0       	ldi	r24, 0x00	; 0
    2cd8:	90 e0       	ldi	r25, 0x00	; 0
    2cda:	ac e8       	ldi	r26, 0x8C	; 140
    2cdc:	b2 e4       	ldi	r27, 0x42	; 66
    2cde:	80 83       	st	Z, r24
    2ce0:	91 83       	std	Z+1, r25	; 0x01
    2ce2:	a2 83       	std	Z+2, r26	; 0x02
    2ce4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ce6:	8e 01       	movw	r16, r28
    2ce8:	0d 5c       	subi	r16, 0xCD	; 205
    2cea:	1c 4f       	sbci	r17, 0xFC	; 252
    2cec:	fe 01       	movw	r30, r28
    2cee:	e9 5c       	subi	r30, 0xC9	; 201
    2cf0:	fc 4f       	sbci	r31, 0xFC	; 252
    2cf2:	60 81       	ld	r22, Z
    2cf4:	71 81       	ldd	r23, Z+1	; 0x01
    2cf6:	82 81       	ldd	r24, Z+2	; 0x02
    2cf8:	93 81       	ldd	r25, Z+3	; 0x03
    2cfa:	20 e0       	ldi	r18, 0x00	; 0
    2cfc:	30 e0       	ldi	r19, 0x00	; 0
    2cfe:	4a e7       	ldi	r20, 0x7A	; 122
    2d00:	55 e4       	ldi	r21, 0x45	; 69
    2d02:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d06:	dc 01       	movw	r26, r24
    2d08:	cb 01       	movw	r24, r22
    2d0a:	f8 01       	movw	r30, r16
    2d0c:	80 83       	st	Z, r24
    2d0e:	91 83       	std	Z+1, r25	; 0x01
    2d10:	a2 83       	std	Z+2, r26	; 0x02
    2d12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d14:	fe 01       	movw	r30, r28
    2d16:	ed 5c       	subi	r30, 0xCD	; 205
    2d18:	fc 4f       	sbci	r31, 0xFC	; 252
    2d1a:	60 81       	ld	r22, Z
    2d1c:	71 81       	ldd	r23, Z+1	; 0x01
    2d1e:	82 81       	ldd	r24, Z+2	; 0x02
    2d20:	93 81       	ldd	r25, Z+3	; 0x03
    2d22:	20 e0       	ldi	r18, 0x00	; 0
    2d24:	30 e0       	ldi	r19, 0x00	; 0
    2d26:	40 e8       	ldi	r20, 0x80	; 128
    2d28:	5f e3       	ldi	r21, 0x3F	; 63
    2d2a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2d2e:	88 23       	and	r24, r24
    2d30:	44 f4       	brge	.+16     	; 0x2d42 <Forward+0x962>
		__ticks = 1;
    2d32:	fe 01       	movw	r30, r28
    2d34:	ef 5c       	subi	r30, 0xCF	; 207
    2d36:	fc 4f       	sbci	r31, 0xFC	; 252
    2d38:	81 e0       	ldi	r24, 0x01	; 1
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	91 83       	std	Z+1, r25	; 0x01
    2d3e:	80 83       	st	Z, r24
    2d40:	64 c0       	rjmp	.+200    	; 0x2e0a <Forward+0xa2a>
	else if (__tmp > 65535)
    2d42:	fe 01       	movw	r30, r28
    2d44:	ed 5c       	subi	r30, 0xCD	; 205
    2d46:	fc 4f       	sbci	r31, 0xFC	; 252
    2d48:	60 81       	ld	r22, Z
    2d4a:	71 81       	ldd	r23, Z+1	; 0x01
    2d4c:	82 81       	ldd	r24, Z+2	; 0x02
    2d4e:	93 81       	ldd	r25, Z+3	; 0x03
    2d50:	20 e0       	ldi	r18, 0x00	; 0
    2d52:	3f ef       	ldi	r19, 0xFF	; 255
    2d54:	4f e7       	ldi	r20, 0x7F	; 127
    2d56:	57 e4       	ldi	r21, 0x47	; 71
    2d58:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d5c:	18 16       	cp	r1, r24
    2d5e:	0c f0       	brlt	.+2      	; 0x2d62 <Forward+0x982>
    2d60:	43 c0       	rjmp	.+134    	; 0x2de8 <Forward+0xa08>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d62:	fe 01       	movw	r30, r28
    2d64:	e9 5c       	subi	r30, 0xC9	; 201
    2d66:	fc 4f       	sbci	r31, 0xFC	; 252
    2d68:	60 81       	ld	r22, Z
    2d6a:	71 81       	ldd	r23, Z+1	; 0x01
    2d6c:	82 81       	ldd	r24, Z+2	; 0x02
    2d6e:	93 81       	ldd	r25, Z+3	; 0x03
    2d70:	20 e0       	ldi	r18, 0x00	; 0
    2d72:	30 e0       	ldi	r19, 0x00	; 0
    2d74:	40 e2       	ldi	r20, 0x20	; 32
    2d76:	51 e4       	ldi	r21, 0x41	; 65
    2d78:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d7c:	dc 01       	movw	r26, r24
    2d7e:	cb 01       	movw	r24, r22
    2d80:	8e 01       	movw	r16, r28
    2d82:	0f 5c       	subi	r16, 0xCF	; 207
    2d84:	1c 4f       	sbci	r17, 0xFC	; 252
    2d86:	bc 01       	movw	r22, r24
    2d88:	cd 01       	movw	r24, r26
    2d8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d8e:	dc 01       	movw	r26, r24
    2d90:	cb 01       	movw	r24, r22
    2d92:	f8 01       	movw	r30, r16
    2d94:	91 83       	std	Z+1, r25	; 0x01
    2d96:	80 83       	st	Z, r24
    2d98:	1f c0       	rjmp	.+62     	; 0x2dd8 <Forward+0x9f8>
    2d9a:	fe 01       	movw	r30, r28
    2d9c:	e1 5d       	subi	r30, 0xD1	; 209
    2d9e:	fc 4f       	sbci	r31, 0xFC	; 252
    2da0:	80 e9       	ldi	r24, 0x90	; 144
    2da2:	91 e0       	ldi	r25, 0x01	; 1
    2da4:	91 83       	std	Z+1, r25	; 0x01
    2da6:	80 83       	st	Z, r24
    2da8:	fe 01       	movw	r30, r28
    2daa:	e1 5d       	subi	r30, 0xD1	; 209
    2dac:	fc 4f       	sbci	r31, 0xFC	; 252
    2dae:	80 81       	ld	r24, Z
    2db0:	91 81       	ldd	r25, Z+1	; 0x01
    2db2:	01 97       	sbiw	r24, 0x01	; 1
    2db4:	f1 f7       	brne	.-4      	; 0x2db2 <Forward+0x9d2>
    2db6:	fe 01       	movw	r30, r28
    2db8:	e1 5d       	subi	r30, 0xD1	; 209
    2dba:	fc 4f       	sbci	r31, 0xFC	; 252
    2dbc:	91 83       	std	Z+1, r25	; 0x01
    2dbe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dc0:	de 01       	movw	r26, r28
    2dc2:	af 5c       	subi	r26, 0xCF	; 207
    2dc4:	bc 4f       	sbci	r27, 0xFC	; 252
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	ef 5c       	subi	r30, 0xCF	; 207
    2dca:	fc 4f       	sbci	r31, 0xFC	; 252
    2dcc:	80 81       	ld	r24, Z
    2dce:	91 81       	ldd	r25, Z+1	; 0x01
    2dd0:	01 97       	sbiw	r24, 0x01	; 1
    2dd2:	11 96       	adiw	r26, 0x01	; 1
    2dd4:	9c 93       	st	X, r25
    2dd6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dd8:	fe 01       	movw	r30, r28
    2dda:	ef 5c       	subi	r30, 0xCF	; 207
    2ddc:	fc 4f       	sbci	r31, 0xFC	; 252
    2dde:	80 81       	ld	r24, Z
    2de0:	91 81       	ldd	r25, Z+1	; 0x01
    2de2:	00 97       	sbiw	r24, 0x00	; 0
    2de4:	d1 f6       	brne	.-76     	; 0x2d9a <Forward+0x9ba>
    2de6:	27 c0       	rjmp	.+78     	; 0x2e36 <Forward+0xa56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2de8:	8e 01       	movw	r16, r28
    2dea:	0f 5c       	subi	r16, 0xCF	; 207
    2dec:	1c 4f       	sbci	r17, 0xFC	; 252
    2dee:	fe 01       	movw	r30, r28
    2df0:	ed 5c       	subi	r30, 0xCD	; 205
    2df2:	fc 4f       	sbci	r31, 0xFC	; 252
    2df4:	60 81       	ld	r22, Z
    2df6:	71 81       	ldd	r23, Z+1	; 0x01
    2df8:	82 81       	ldd	r24, Z+2	; 0x02
    2dfa:	93 81       	ldd	r25, Z+3	; 0x03
    2dfc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	f8 01       	movw	r30, r16
    2e06:	91 83       	std	Z+1, r25	; 0x01
    2e08:	80 83       	st	Z, r24
    2e0a:	de 01       	movw	r26, r28
    2e0c:	a3 5d       	subi	r26, 0xD3	; 211
    2e0e:	bc 4f       	sbci	r27, 0xFC	; 252
    2e10:	fe 01       	movw	r30, r28
    2e12:	ef 5c       	subi	r30, 0xCF	; 207
    2e14:	fc 4f       	sbci	r31, 0xFC	; 252
    2e16:	80 81       	ld	r24, Z
    2e18:	91 81       	ldd	r25, Z+1	; 0x01
    2e1a:	8d 93       	st	X+, r24
    2e1c:	9c 93       	st	X, r25
    2e1e:	fe 01       	movw	r30, r28
    2e20:	e3 5d       	subi	r30, 0xD3	; 211
    2e22:	fc 4f       	sbci	r31, 0xFC	; 252
    2e24:	80 81       	ld	r24, Z
    2e26:	91 81       	ldd	r25, Z+1	; 0x01
    2e28:	01 97       	sbiw	r24, 0x01	; 1
    2e2a:	f1 f7       	brne	.-4      	; 0x2e28 <Forward+0xa48>
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	e3 5d       	subi	r30, 0xD3	; 211
    2e30:	fc 4f       	sbci	r31, 0xFC	; 252
    2e32:	91 83       	std	Z+1, r25	; 0x01
    2e34:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POSN4;
    2e36:	8b e0       	ldi	r24, 0x0B	; 11
    2e38:	80 93 6b 00 	sts	0x006B, r24
    2e3c:	fe 01       	movw	r30, r28
    2e3e:	e7 5d       	subi	r30, 0xD7	; 215
    2e40:	fc 4f       	sbci	r31, 0xFC	; 252
    2e42:	80 e0       	ldi	r24, 0x00	; 0
    2e44:	90 e0       	ldi	r25, 0x00	; 0
    2e46:	ac e8       	ldi	r26, 0x8C	; 140
    2e48:	b2 e4       	ldi	r27, 0x42	; 66
    2e4a:	80 83       	st	Z, r24
    2e4c:	91 83       	std	Z+1, r25	; 0x01
    2e4e:	a2 83       	std	Z+2, r26	; 0x02
    2e50:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e52:	8e 01       	movw	r16, r28
    2e54:	0b 5d       	subi	r16, 0xDB	; 219
    2e56:	1c 4f       	sbci	r17, 0xFC	; 252
    2e58:	fe 01       	movw	r30, r28
    2e5a:	e7 5d       	subi	r30, 0xD7	; 215
    2e5c:	fc 4f       	sbci	r31, 0xFC	; 252
    2e5e:	60 81       	ld	r22, Z
    2e60:	71 81       	ldd	r23, Z+1	; 0x01
    2e62:	82 81       	ldd	r24, Z+2	; 0x02
    2e64:	93 81       	ldd	r25, Z+3	; 0x03
    2e66:	20 e0       	ldi	r18, 0x00	; 0
    2e68:	30 e0       	ldi	r19, 0x00	; 0
    2e6a:	4a e7       	ldi	r20, 0x7A	; 122
    2e6c:	55 e4       	ldi	r21, 0x45	; 69
    2e6e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e72:	dc 01       	movw	r26, r24
    2e74:	cb 01       	movw	r24, r22
    2e76:	f8 01       	movw	r30, r16
    2e78:	80 83       	st	Z, r24
    2e7a:	91 83       	std	Z+1, r25	; 0x01
    2e7c:	a2 83       	std	Z+2, r26	; 0x02
    2e7e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e80:	fe 01       	movw	r30, r28
    2e82:	eb 5d       	subi	r30, 0xDB	; 219
    2e84:	fc 4f       	sbci	r31, 0xFC	; 252
    2e86:	60 81       	ld	r22, Z
    2e88:	71 81       	ldd	r23, Z+1	; 0x01
    2e8a:	82 81       	ldd	r24, Z+2	; 0x02
    2e8c:	93 81       	ldd	r25, Z+3	; 0x03
    2e8e:	20 e0       	ldi	r18, 0x00	; 0
    2e90:	30 e0       	ldi	r19, 0x00	; 0
    2e92:	40 e8       	ldi	r20, 0x80	; 128
    2e94:	5f e3       	ldi	r21, 0x3F	; 63
    2e96:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2e9a:	88 23       	and	r24, r24
    2e9c:	44 f4       	brge	.+16     	; 0x2eae <Forward+0xace>
		__ticks = 1;
    2e9e:	fe 01       	movw	r30, r28
    2ea0:	ed 5d       	subi	r30, 0xDD	; 221
    2ea2:	fc 4f       	sbci	r31, 0xFC	; 252
    2ea4:	81 e0       	ldi	r24, 0x01	; 1
    2ea6:	90 e0       	ldi	r25, 0x00	; 0
    2ea8:	91 83       	std	Z+1, r25	; 0x01
    2eaa:	80 83       	st	Z, r24
    2eac:	64 c0       	rjmp	.+200    	; 0x2f76 <Forward+0xb96>
	else if (__tmp > 65535)
    2eae:	fe 01       	movw	r30, r28
    2eb0:	eb 5d       	subi	r30, 0xDB	; 219
    2eb2:	fc 4f       	sbci	r31, 0xFC	; 252
    2eb4:	60 81       	ld	r22, Z
    2eb6:	71 81       	ldd	r23, Z+1	; 0x01
    2eb8:	82 81       	ldd	r24, Z+2	; 0x02
    2eba:	93 81       	ldd	r25, Z+3	; 0x03
    2ebc:	20 e0       	ldi	r18, 0x00	; 0
    2ebe:	3f ef       	ldi	r19, 0xFF	; 255
    2ec0:	4f e7       	ldi	r20, 0x7F	; 127
    2ec2:	57 e4       	ldi	r21, 0x47	; 71
    2ec4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2ec8:	18 16       	cp	r1, r24
    2eca:	0c f0       	brlt	.+2      	; 0x2ece <Forward+0xaee>
    2ecc:	43 c0       	rjmp	.+134    	; 0x2f54 <Forward+0xb74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ece:	fe 01       	movw	r30, r28
    2ed0:	e7 5d       	subi	r30, 0xD7	; 215
    2ed2:	fc 4f       	sbci	r31, 0xFC	; 252
    2ed4:	60 81       	ld	r22, Z
    2ed6:	71 81       	ldd	r23, Z+1	; 0x01
    2ed8:	82 81       	ldd	r24, Z+2	; 0x02
    2eda:	93 81       	ldd	r25, Z+3	; 0x03
    2edc:	20 e0       	ldi	r18, 0x00	; 0
    2ede:	30 e0       	ldi	r19, 0x00	; 0
    2ee0:	40 e2       	ldi	r20, 0x20	; 32
    2ee2:	51 e4       	ldi	r21, 0x41	; 65
    2ee4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ee8:	dc 01       	movw	r26, r24
    2eea:	cb 01       	movw	r24, r22
    2eec:	8e 01       	movw	r16, r28
    2eee:	0d 5d       	subi	r16, 0xDD	; 221
    2ef0:	1c 4f       	sbci	r17, 0xFC	; 252
    2ef2:	bc 01       	movw	r22, r24
    2ef4:	cd 01       	movw	r24, r26
    2ef6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2efa:	dc 01       	movw	r26, r24
    2efc:	cb 01       	movw	r24, r22
    2efe:	f8 01       	movw	r30, r16
    2f00:	91 83       	std	Z+1, r25	; 0x01
    2f02:	80 83       	st	Z, r24
    2f04:	1f c0       	rjmp	.+62     	; 0x2f44 <Forward+0xb64>
    2f06:	fe 01       	movw	r30, r28
    2f08:	ef 5d       	subi	r30, 0xDF	; 223
    2f0a:	fc 4f       	sbci	r31, 0xFC	; 252
    2f0c:	80 e9       	ldi	r24, 0x90	; 144
    2f0e:	91 e0       	ldi	r25, 0x01	; 1
    2f10:	91 83       	std	Z+1, r25	; 0x01
    2f12:	80 83       	st	Z, r24
    2f14:	fe 01       	movw	r30, r28
    2f16:	ef 5d       	subi	r30, 0xDF	; 223
    2f18:	fc 4f       	sbci	r31, 0xFC	; 252
    2f1a:	80 81       	ld	r24, Z
    2f1c:	91 81       	ldd	r25, Z+1	; 0x01
    2f1e:	01 97       	sbiw	r24, 0x01	; 1
    2f20:	f1 f7       	brne	.-4      	; 0x2f1e <Forward+0xb3e>
    2f22:	fe 01       	movw	r30, r28
    2f24:	ef 5d       	subi	r30, 0xDF	; 223
    2f26:	fc 4f       	sbci	r31, 0xFC	; 252
    2f28:	91 83       	std	Z+1, r25	; 0x01
    2f2a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f2c:	de 01       	movw	r26, r28
    2f2e:	ad 5d       	subi	r26, 0xDD	; 221
    2f30:	bc 4f       	sbci	r27, 0xFC	; 252
    2f32:	fe 01       	movw	r30, r28
    2f34:	ed 5d       	subi	r30, 0xDD	; 221
    2f36:	fc 4f       	sbci	r31, 0xFC	; 252
    2f38:	80 81       	ld	r24, Z
    2f3a:	91 81       	ldd	r25, Z+1	; 0x01
    2f3c:	01 97       	sbiw	r24, 0x01	; 1
    2f3e:	11 96       	adiw	r26, 0x01	; 1
    2f40:	9c 93       	st	X, r25
    2f42:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f44:	fe 01       	movw	r30, r28
    2f46:	ed 5d       	subi	r30, 0xDD	; 221
    2f48:	fc 4f       	sbci	r31, 0xFC	; 252
    2f4a:	80 81       	ld	r24, Z
    2f4c:	91 81       	ldd	r25, Z+1	; 0x01
    2f4e:	00 97       	sbiw	r24, 0x00	; 0
    2f50:	d1 f6       	brne	.-76     	; 0x2f06 <Forward+0xb26>
    2f52:	27 c0       	rjmp	.+78     	; 0x2fa2 <Forward+0xbc2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f54:	8e 01       	movw	r16, r28
    2f56:	0d 5d       	subi	r16, 0xDD	; 221
    2f58:	1c 4f       	sbci	r17, 0xFC	; 252
    2f5a:	fe 01       	movw	r30, r28
    2f5c:	eb 5d       	subi	r30, 0xDB	; 219
    2f5e:	fc 4f       	sbci	r31, 0xFC	; 252
    2f60:	60 81       	ld	r22, Z
    2f62:	71 81       	ldd	r23, Z+1	; 0x01
    2f64:	82 81       	ldd	r24, Z+2	; 0x02
    2f66:	93 81       	ldd	r25, Z+3	; 0x03
    2f68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2f6c:	dc 01       	movw	r26, r24
    2f6e:	cb 01       	movw	r24, r22
    2f70:	f8 01       	movw	r30, r16
    2f72:	91 83       	std	Z+1, r25	; 0x01
    2f74:	80 83       	st	Z, r24
    2f76:	de 01       	movw	r26, r28
    2f78:	a1 5e       	subi	r26, 0xE1	; 225
    2f7a:	bc 4f       	sbci	r27, 0xFC	; 252
    2f7c:	fe 01       	movw	r30, r28
    2f7e:	ed 5d       	subi	r30, 0xDD	; 221
    2f80:	fc 4f       	sbci	r31, 0xFC	; 252
    2f82:	80 81       	ld	r24, Z
    2f84:	91 81       	ldd	r25, Z+1	; 0x01
    2f86:	8d 93       	st	X+, r24
    2f88:	9c 93       	st	X, r25
    2f8a:	fe 01       	movw	r30, r28
    2f8c:	e1 5e       	subi	r30, 0xE1	; 225
    2f8e:	fc 4f       	sbci	r31, 0xFC	; 252
    2f90:	80 81       	ld	r24, Z
    2f92:	91 81       	ldd	r25, Z+1	; 0x01
    2f94:	01 97       	sbiw	r24, 0x01	; 1
    2f96:	f1 f7       	brne	.-4      	; 0x2f94 <Forward+0xbb4>
    2f98:	fe 01       	movw	r30, r28
    2f9a:	e1 5e       	subi	r30, 0xE1	; 225
    2f9c:	fc 4f       	sbci	r31, 0xFC	; 252
    2f9e:	91 83       	std	Z+1, r25	; 0x01
    2fa0:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POSN3;
    2fa2:	8a e0       	ldi	r24, 0x0A	; 10
    2fa4:	80 93 6b 00 	sts	0x006B, r24
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e5 5e       	subi	r30, 0xE5	; 229
    2fac:	fc 4f       	sbci	r31, 0xFC	; 252
    2fae:	80 e0       	ldi	r24, 0x00	; 0
    2fb0:	90 e0       	ldi	r25, 0x00	; 0
    2fb2:	aa ef       	ldi	r26, 0xFA	; 250
    2fb4:	b3 e4       	ldi	r27, 0x43	; 67
    2fb6:	80 83       	st	Z, r24
    2fb8:	91 83       	std	Z+1, r25	; 0x01
    2fba:	a2 83       	std	Z+2, r26	; 0x02
    2fbc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fbe:	8e 01       	movw	r16, r28
    2fc0:	09 5e       	subi	r16, 0xE9	; 233
    2fc2:	1c 4f       	sbci	r17, 0xFC	; 252
    2fc4:	fe 01       	movw	r30, r28
    2fc6:	e5 5e       	subi	r30, 0xE5	; 229
    2fc8:	fc 4f       	sbci	r31, 0xFC	; 252
    2fca:	60 81       	ld	r22, Z
    2fcc:	71 81       	ldd	r23, Z+1	; 0x01
    2fce:	82 81       	ldd	r24, Z+2	; 0x02
    2fd0:	93 81       	ldd	r25, Z+3	; 0x03
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	30 e0       	ldi	r19, 0x00	; 0
    2fd6:	4a e7       	ldi	r20, 0x7A	; 122
    2fd8:	55 e4       	ldi	r21, 0x45	; 69
    2fda:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2fde:	dc 01       	movw	r26, r24
    2fe0:	cb 01       	movw	r24, r22
    2fe2:	f8 01       	movw	r30, r16
    2fe4:	80 83       	st	Z, r24
    2fe6:	91 83       	std	Z+1, r25	; 0x01
    2fe8:	a2 83       	std	Z+2, r26	; 0x02
    2fea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fec:	fe 01       	movw	r30, r28
    2fee:	e9 5e       	subi	r30, 0xE9	; 233
    2ff0:	fc 4f       	sbci	r31, 0xFC	; 252
    2ff2:	60 81       	ld	r22, Z
    2ff4:	71 81       	ldd	r23, Z+1	; 0x01
    2ff6:	82 81       	ldd	r24, Z+2	; 0x02
    2ff8:	93 81       	ldd	r25, Z+3	; 0x03
    2ffa:	20 e0       	ldi	r18, 0x00	; 0
    2ffc:	30 e0       	ldi	r19, 0x00	; 0
    2ffe:	40 e8       	ldi	r20, 0x80	; 128
    3000:	5f e3       	ldi	r21, 0x3F	; 63
    3002:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3006:	88 23       	and	r24, r24
    3008:	44 f4       	brge	.+16     	; 0x301a <Forward+0xc3a>
		__ticks = 1;
    300a:	fe 01       	movw	r30, r28
    300c:	eb 5e       	subi	r30, 0xEB	; 235
    300e:	fc 4f       	sbci	r31, 0xFC	; 252
    3010:	81 e0       	ldi	r24, 0x01	; 1
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	91 83       	std	Z+1, r25	; 0x01
    3016:	80 83       	st	Z, r24
    3018:	64 c0       	rjmp	.+200    	; 0x30e2 <Forward+0xd02>
	else if (__tmp > 65535)
    301a:	fe 01       	movw	r30, r28
    301c:	e9 5e       	subi	r30, 0xE9	; 233
    301e:	fc 4f       	sbci	r31, 0xFC	; 252
    3020:	60 81       	ld	r22, Z
    3022:	71 81       	ldd	r23, Z+1	; 0x01
    3024:	82 81       	ldd	r24, Z+2	; 0x02
    3026:	93 81       	ldd	r25, Z+3	; 0x03
    3028:	20 e0       	ldi	r18, 0x00	; 0
    302a:	3f ef       	ldi	r19, 0xFF	; 255
    302c:	4f e7       	ldi	r20, 0x7F	; 127
    302e:	57 e4       	ldi	r21, 0x47	; 71
    3030:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3034:	18 16       	cp	r1, r24
    3036:	0c f0       	brlt	.+2      	; 0x303a <Forward+0xc5a>
    3038:	43 c0       	rjmp	.+134    	; 0x30c0 <Forward+0xce0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    303a:	fe 01       	movw	r30, r28
    303c:	e5 5e       	subi	r30, 0xE5	; 229
    303e:	fc 4f       	sbci	r31, 0xFC	; 252
    3040:	60 81       	ld	r22, Z
    3042:	71 81       	ldd	r23, Z+1	; 0x01
    3044:	82 81       	ldd	r24, Z+2	; 0x02
    3046:	93 81       	ldd	r25, Z+3	; 0x03
    3048:	20 e0       	ldi	r18, 0x00	; 0
    304a:	30 e0       	ldi	r19, 0x00	; 0
    304c:	40 e2       	ldi	r20, 0x20	; 32
    304e:	51 e4       	ldi	r21, 0x41	; 65
    3050:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3054:	dc 01       	movw	r26, r24
    3056:	cb 01       	movw	r24, r22
    3058:	8e 01       	movw	r16, r28
    305a:	0b 5e       	subi	r16, 0xEB	; 235
    305c:	1c 4f       	sbci	r17, 0xFC	; 252
    305e:	bc 01       	movw	r22, r24
    3060:	cd 01       	movw	r24, r26
    3062:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	f8 01       	movw	r30, r16
    306c:	91 83       	std	Z+1, r25	; 0x01
    306e:	80 83       	st	Z, r24
    3070:	1f c0       	rjmp	.+62     	; 0x30b0 <Forward+0xcd0>
    3072:	fe 01       	movw	r30, r28
    3074:	ed 5e       	subi	r30, 0xED	; 237
    3076:	fc 4f       	sbci	r31, 0xFC	; 252
    3078:	80 e9       	ldi	r24, 0x90	; 144
    307a:	91 e0       	ldi	r25, 0x01	; 1
    307c:	91 83       	std	Z+1, r25	; 0x01
    307e:	80 83       	st	Z, r24
    3080:	fe 01       	movw	r30, r28
    3082:	ed 5e       	subi	r30, 0xED	; 237
    3084:	fc 4f       	sbci	r31, 0xFC	; 252
    3086:	80 81       	ld	r24, Z
    3088:	91 81       	ldd	r25, Z+1	; 0x01
    308a:	01 97       	sbiw	r24, 0x01	; 1
    308c:	f1 f7       	brne	.-4      	; 0x308a <Forward+0xcaa>
    308e:	fe 01       	movw	r30, r28
    3090:	ed 5e       	subi	r30, 0xED	; 237
    3092:	fc 4f       	sbci	r31, 0xFC	; 252
    3094:	91 83       	std	Z+1, r25	; 0x01
    3096:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3098:	de 01       	movw	r26, r28
    309a:	ab 5e       	subi	r26, 0xEB	; 235
    309c:	bc 4f       	sbci	r27, 0xFC	; 252
    309e:	fe 01       	movw	r30, r28
    30a0:	eb 5e       	subi	r30, 0xEB	; 235
    30a2:	fc 4f       	sbci	r31, 0xFC	; 252
    30a4:	80 81       	ld	r24, Z
    30a6:	91 81       	ldd	r25, Z+1	; 0x01
    30a8:	01 97       	sbiw	r24, 0x01	; 1
    30aa:	11 96       	adiw	r26, 0x01	; 1
    30ac:	9c 93       	st	X, r25
    30ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30b0:	fe 01       	movw	r30, r28
    30b2:	eb 5e       	subi	r30, 0xEB	; 235
    30b4:	fc 4f       	sbci	r31, 0xFC	; 252
    30b6:	80 81       	ld	r24, Z
    30b8:	91 81       	ldd	r25, Z+1	; 0x01
    30ba:	00 97       	sbiw	r24, 0x00	; 0
    30bc:	d1 f6       	brne	.-76     	; 0x3072 <Forward+0xc92>
    30be:	27 c0       	rjmp	.+78     	; 0x310e <Forward+0xd2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30c0:	8e 01       	movw	r16, r28
    30c2:	0b 5e       	subi	r16, 0xEB	; 235
    30c4:	1c 4f       	sbci	r17, 0xFC	; 252
    30c6:	fe 01       	movw	r30, r28
    30c8:	e9 5e       	subi	r30, 0xE9	; 233
    30ca:	fc 4f       	sbci	r31, 0xFC	; 252
    30cc:	60 81       	ld	r22, Z
    30ce:	71 81       	ldd	r23, Z+1	; 0x01
    30d0:	82 81       	ldd	r24, Z+2	; 0x02
    30d2:	93 81       	ldd	r25, Z+3	; 0x03
    30d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30d8:	dc 01       	movw	r26, r24
    30da:	cb 01       	movw	r24, r22
    30dc:	f8 01       	movw	r30, r16
    30de:	91 83       	std	Z+1, r25	; 0x01
    30e0:	80 83       	st	Z, r24
    30e2:	de 01       	movw	r26, r28
    30e4:	af 5e       	subi	r26, 0xEF	; 239
    30e6:	bc 4f       	sbci	r27, 0xFC	; 252
    30e8:	fe 01       	movw	r30, r28
    30ea:	eb 5e       	subi	r30, 0xEB	; 235
    30ec:	fc 4f       	sbci	r31, 0xFC	; 252
    30ee:	80 81       	ld	r24, Z
    30f0:	91 81       	ldd	r25, Z+1	; 0x01
    30f2:	8d 93       	st	X+, r24
    30f4:	9c 93       	st	X, r25
    30f6:	fe 01       	movw	r30, r28
    30f8:	ef 5e       	subi	r30, 0xEF	; 239
    30fa:	fc 4f       	sbci	r31, 0xFC	; 252
    30fc:	80 81       	ld	r24, Z
    30fe:	91 81       	ldd	r25, Z+1	; 0x01
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	f1 f7       	brne	.-4      	; 0x3100 <Forward+0xd20>
    3104:	fe 01       	movw	r30, r28
    3106:	ef 5e       	subi	r30, 0xEF	; 239
    3108:	fc 4f       	sbci	r31, 0xFC	; 252
    310a:	91 83       	std	Z+1, r25	; 0x01
    310c:	80 83       	st	Z, r24
	_delay_ms(500);

	angle1 = POSN4;
    310e:	8b e0       	ldi	r24, 0x0B	; 11
    3110:	80 93 69 00 	sts	0x0069, r24
    3114:	fe 01       	movw	r30, r28
    3116:	e3 5f       	subi	r30, 0xF3	; 243
    3118:	fc 4f       	sbci	r31, 0xFC	; 252
    311a:	80 e0       	ldi	r24, 0x00	; 0
    311c:	90 e0       	ldi	r25, 0x00	; 0
    311e:	ac e8       	ldi	r26, 0x8C	; 140
    3120:	b2 e4       	ldi	r27, 0x42	; 66
    3122:	80 83       	st	Z, r24
    3124:	91 83       	std	Z+1, r25	; 0x01
    3126:	a2 83       	std	Z+2, r26	; 0x02
    3128:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    312a:	8e 01       	movw	r16, r28
    312c:	07 5f       	subi	r16, 0xF7	; 247
    312e:	1c 4f       	sbci	r17, 0xFC	; 252
    3130:	fe 01       	movw	r30, r28
    3132:	e3 5f       	subi	r30, 0xF3	; 243
    3134:	fc 4f       	sbci	r31, 0xFC	; 252
    3136:	60 81       	ld	r22, Z
    3138:	71 81       	ldd	r23, Z+1	; 0x01
    313a:	82 81       	ldd	r24, Z+2	; 0x02
    313c:	93 81       	ldd	r25, Z+3	; 0x03
    313e:	20 e0       	ldi	r18, 0x00	; 0
    3140:	30 e0       	ldi	r19, 0x00	; 0
    3142:	4a e7       	ldi	r20, 0x7A	; 122
    3144:	55 e4       	ldi	r21, 0x45	; 69
    3146:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    314a:	dc 01       	movw	r26, r24
    314c:	cb 01       	movw	r24, r22
    314e:	f8 01       	movw	r30, r16
    3150:	80 83       	st	Z, r24
    3152:	91 83       	std	Z+1, r25	; 0x01
    3154:	a2 83       	std	Z+2, r26	; 0x02
    3156:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3158:	fe 01       	movw	r30, r28
    315a:	e7 5f       	subi	r30, 0xF7	; 247
    315c:	fc 4f       	sbci	r31, 0xFC	; 252
    315e:	60 81       	ld	r22, Z
    3160:	71 81       	ldd	r23, Z+1	; 0x01
    3162:	82 81       	ldd	r24, Z+2	; 0x02
    3164:	93 81       	ldd	r25, Z+3	; 0x03
    3166:	20 e0       	ldi	r18, 0x00	; 0
    3168:	30 e0       	ldi	r19, 0x00	; 0
    316a:	40 e8       	ldi	r20, 0x80	; 128
    316c:	5f e3       	ldi	r21, 0x3F	; 63
    316e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3172:	88 23       	and	r24, r24
    3174:	44 f4       	brge	.+16     	; 0x3186 <Forward+0xda6>
		__ticks = 1;
    3176:	fe 01       	movw	r30, r28
    3178:	e9 5f       	subi	r30, 0xF9	; 249
    317a:	fc 4f       	sbci	r31, 0xFC	; 252
    317c:	81 e0       	ldi	r24, 0x01	; 1
    317e:	90 e0       	ldi	r25, 0x00	; 0
    3180:	91 83       	std	Z+1, r25	; 0x01
    3182:	80 83       	st	Z, r24
    3184:	64 c0       	rjmp	.+200    	; 0x324e <Forward+0xe6e>
	else if (__tmp > 65535)
    3186:	fe 01       	movw	r30, r28
    3188:	e7 5f       	subi	r30, 0xF7	; 247
    318a:	fc 4f       	sbci	r31, 0xFC	; 252
    318c:	60 81       	ld	r22, Z
    318e:	71 81       	ldd	r23, Z+1	; 0x01
    3190:	82 81       	ldd	r24, Z+2	; 0x02
    3192:	93 81       	ldd	r25, Z+3	; 0x03
    3194:	20 e0       	ldi	r18, 0x00	; 0
    3196:	3f ef       	ldi	r19, 0xFF	; 255
    3198:	4f e7       	ldi	r20, 0x7F	; 127
    319a:	57 e4       	ldi	r21, 0x47	; 71
    319c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    31a0:	18 16       	cp	r1, r24
    31a2:	0c f0       	brlt	.+2      	; 0x31a6 <Forward+0xdc6>
    31a4:	43 c0       	rjmp	.+134    	; 0x322c <Forward+0xe4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31a6:	fe 01       	movw	r30, r28
    31a8:	e3 5f       	subi	r30, 0xF3	; 243
    31aa:	fc 4f       	sbci	r31, 0xFC	; 252
    31ac:	60 81       	ld	r22, Z
    31ae:	71 81       	ldd	r23, Z+1	; 0x01
    31b0:	82 81       	ldd	r24, Z+2	; 0x02
    31b2:	93 81       	ldd	r25, Z+3	; 0x03
    31b4:	20 e0       	ldi	r18, 0x00	; 0
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	40 e2       	ldi	r20, 0x20	; 32
    31ba:	51 e4       	ldi	r21, 0x41	; 65
    31bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    31c0:	dc 01       	movw	r26, r24
    31c2:	cb 01       	movw	r24, r22
    31c4:	8e 01       	movw	r16, r28
    31c6:	09 5f       	subi	r16, 0xF9	; 249
    31c8:	1c 4f       	sbci	r17, 0xFC	; 252
    31ca:	bc 01       	movw	r22, r24
    31cc:	cd 01       	movw	r24, r26
    31ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    31d2:	dc 01       	movw	r26, r24
    31d4:	cb 01       	movw	r24, r22
    31d6:	f8 01       	movw	r30, r16
    31d8:	91 83       	std	Z+1, r25	; 0x01
    31da:	80 83       	st	Z, r24
    31dc:	1f c0       	rjmp	.+62     	; 0x321c <Forward+0xe3c>
    31de:	fe 01       	movw	r30, r28
    31e0:	eb 5f       	subi	r30, 0xFB	; 251
    31e2:	fc 4f       	sbci	r31, 0xFC	; 252
    31e4:	80 e9       	ldi	r24, 0x90	; 144
    31e6:	91 e0       	ldi	r25, 0x01	; 1
    31e8:	91 83       	std	Z+1, r25	; 0x01
    31ea:	80 83       	st	Z, r24
    31ec:	fe 01       	movw	r30, r28
    31ee:	eb 5f       	subi	r30, 0xFB	; 251
    31f0:	fc 4f       	sbci	r31, 0xFC	; 252
    31f2:	80 81       	ld	r24, Z
    31f4:	91 81       	ldd	r25, Z+1	; 0x01
    31f6:	01 97       	sbiw	r24, 0x01	; 1
    31f8:	f1 f7       	brne	.-4      	; 0x31f6 <Forward+0xe16>
    31fa:	fe 01       	movw	r30, r28
    31fc:	eb 5f       	subi	r30, 0xFB	; 251
    31fe:	fc 4f       	sbci	r31, 0xFC	; 252
    3200:	91 83       	std	Z+1, r25	; 0x01
    3202:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3204:	de 01       	movw	r26, r28
    3206:	a9 5f       	subi	r26, 0xF9	; 249
    3208:	bc 4f       	sbci	r27, 0xFC	; 252
    320a:	fe 01       	movw	r30, r28
    320c:	e9 5f       	subi	r30, 0xF9	; 249
    320e:	fc 4f       	sbci	r31, 0xFC	; 252
    3210:	80 81       	ld	r24, Z
    3212:	91 81       	ldd	r25, Z+1	; 0x01
    3214:	01 97       	sbiw	r24, 0x01	; 1
    3216:	11 96       	adiw	r26, 0x01	; 1
    3218:	9c 93       	st	X, r25
    321a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    321c:	fe 01       	movw	r30, r28
    321e:	e9 5f       	subi	r30, 0xF9	; 249
    3220:	fc 4f       	sbci	r31, 0xFC	; 252
    3222:	80 81       	ld	r24, Z
    3224:	91 81       	ldd	r25, Z+1	; 0x01
    3226:	00 97       	sbiw	r24, 0x00	; 0
    3228:	d1 f6       	brne	.-76     	; 0x31de <Forward+0xdfe>
    322a:	27 c0       	rjmp	.+78     	; 0x327a <Forward+0xe9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    322c:	8e 01       	movw	r16, r28
    322e:	09 5f       	subi	r16, 0xF9	; 249
    3230:	1c 4f       	sbci	r17, 0xFC	; 252
    3232:	fe 01       	movw	r30, r28
    3234:	e7 5f       	subi	r30, 0xF7	; 247
    3236:	fc 4f       	sbci	r31, 0xFC	; 252
    3238:	60 81       	ld	r22, Z
    323a:	71 81       	ldd	r23, Z+1	; 0x01
    323c:	82 81       	ldd	r24, Z+2	; 0x02
    323e:	93 81       	ldd	r25, Z+3	; 0x03
    3240:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3244:	dc 01       	movw	r26, r24
    3246:	cb 01       	movw	r24, r22
    3248:	f8 01       	movw	r30, r16
    324a:	91 83       	std	Z+1, r25	; 0x01
    324c:	80 83       	st	Z, r24
    324e:	de 01       	movw	r26, r28
    3250:	ad 5f       	subi	r26, 0xFD	; 253
    3252:	bc 4f       	sbci	r27, 0xFC	; 252
    3254:	fe 01       	movw	r30, r28
    3256:	e9 5f       	subi	r30, 0xF9	; 249
    3258:	fc 4f       	sbci	r31, 0xFC	; 252
    325a:	80 81       	ld	r24, Z
    325c:	91 81       	ldd	r25, Z+1	; 0x01
    325e:	8d 93       	st	X+, r24
    3260:	9c 93       	st	X, r25
    3262:	fe 01       	movw	r30, r28
    3264:	ed 5f       	subi	r30, 0xFD	; 253
    3266:	fc 4f       	sbci	r31, 0xFC	; 252
    3268:	80 81       	ld	r24, Z
    326a:	91 81       	ldd	r25, Z+1	; 0x01
    326c:	01 97       	sbiw	r24, 0x01	; 1
    326e:	f1 f7       	brne	.-4      	; 0x326c <Forward+0xe8c>
    3270:	fe 01       	movw	r30, r28
    3272:	ed 5f       	subi	r30, 0xFD	; 253
    3274:	fc 4f       	sbci	r31, 0xFC	; 252
    3276:	91 83       	std	Z+1, r25	; 0x01
    3278:	80 83       	st	Z, r24
	_delay_ms(70);
	angle1 = POSN5;
    327a:	8c e0       	ldi	r24, 0x0C	; 12
    327c:	80 93 69 00 	sts	0x0069, r24
    3280:	fe 01       	movw	r30, r28
    3282:	e1 50       	subi	r30, 0x01	; 1
    3284:	fd 4f       	sbci	r31, 0xFD	; 253
    3286:	80 e0       	ldi	r24, 0x00	; 0
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	ac e8       	ldi	r26, 0x8C	; 140
    328c:	b2 e4       	ldi	r27, 0x42	; 66
    328e:	80 83       	st	Z, r24
    3290:	91 83       	std	Z+1, r25	; 0x01
    3292:	a2 83       	std	Z+2, r26	; 0x02
    3294:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3296:	8e 01       	movw	r16, r28
    3298:	05 50       	subi	r16, 0x05	; 5
    329a:	1d 4f       	sbci	r17, 0xFD	; 253
    329c:	fe 01       	movw	r30, r28
    329e:	e1 50       	subi	r30, 0x01	; 1
    32a0:	fd 4f       	sbci	r31, 0xFD	; 253
    32a2:	60 81       	ld	r22, Z
    32a4:	71 81       	ldd	r23, Z+1	; 0x01
    32a6:	82 81       	ldd	r24, Z+2	; 0x02
    32a8:	93 81       	ldd	r25, Z+3	; 0x03
    32aa:	20 e0       	ldi	r18, 0x00	; 0
    32ac:	30 e0       	ldi	r19, 0x00	; 0
    32ae:	4a e7       	ldi	r20, 0x7A	; 122
    32b0:	55 e4       	ldi	r21, 0x45	; 69
    32b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    32b6:	dc 01       	movw	r26, r24
    32b8:	cb 01       	movw	r24, r22
    32ba:	f8 01       	movw	r30, r16
    32bc:	80 83       	st	Z, r24
    32be:	91 83       	std	Z+1, r25	; 0x01
    32c0:	a2 83       	std	Z+2, r26	; 0x02
    32c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32c4:	fe 01       	movw	r30, r28
    32c6:	e5 50       	subi	r30, 0x05	; 5
    32c8:	fd 4f       	sbci	r31, 0xFD	; 253
    32ca:	60 81       	ld	r22, Z
    32cc:	71 81       	ldd	r23, Z+1	; 0x01
    32ce:	82 81       	ldd	r24, Z+2	; 0x02
    32d0:	93 81       	ldd	r25, Z+3	; 0x03
    32d2:	20 e0       	ldi	r18, 0x00	; 0
    32d4:	30 e0       	ldi	r19, 0x00	; 0
    32d6:	40 e8       	ldi	r20, 0x80	; 128
    32d8:	5f e3       	ldi	r21, 0x3F	; 63
    32da:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    32de:	88 23       	and	r24, r24
    32e0:	44 f4       	brge	.+16     	; 0x32f2 <Forward+0xf12>
		__ticks = 1;
    32e2:	fe 01       	movw	r30, r28
    32e4:	e7 50       	subi	r30, 0x07	; 7
    32e6:	fd 4f       	sbci	r31, 0xFD	; 253
    32e8:	81 e0       	ldi	r24, 0x01	; 1
    32ea:	90 e0       	ldi	r25, 0x00	; 0
    32ec:	91 83       	std	Z+1, r25	; 0x01
    32ee:	80 83       	st	Z, r24
    32f0:	64 c0       	rjmp	.+200    	; 0x33ba <Forward+0xfda>
	else if (__tmp > 65535)
    32f2:	fe 01       	movw	r30, r28
    32f4:	e5 50       	subi	r30, 0x05	; 5
    32f6:	fd 4f       	sbci	r31, 0xFD	; 253
    32f8:	60 81       	ld	r22, Z
    32fa:	71 81       	ldd	r23, Z+1	; 0x01
    32fc:	82 81       	ldd	r24, Z+2	; 0x02
    32fe:	93 81       	ldd	r25, Z+3	; 0x03
    3300:	20 e0       	ldi	r18, 0x00	; 0
    3302:	3f ef       	ldi	r19, 0xFF	; 255
    3304:	4f e7       	ldi	r20, 0x7F	; 127
    3306:	57 e4       	ldi	r21, 0x47	; 71
    3308:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    330c:	18 16       	cp	r1, r24
    330e:	0c f0       	brlt	.+2      	; 0x3312 <Forward+0xf32>
    3310:	43 c0       	rjmp	.+134    	; 0x3398 <Forward+0xfb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3312:	fe 01       	movw	r30, r28
    3314:	e1 50       	subi	r30, 0x01	; 1
    3316:	fd 4f       	sbci	r31, 0xFD	; 253
    3318:	60 81       	ld	r22, Z
    331a:	71 81       	ldd	r23, Z+1	; 0x01
    331c:	82 81       	ldd	r24, Z+2	; 0x02
    331e:	93 81       	ldd	r25, Z+3	; 0x03
    3320:	20 e0       	ldi	r18, 0x00	; 0
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	40 e2       	ldi	r20, 0x20	; 32
    3326:	51 e4       	ldi	r21, 0x41	; 65
    3328:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    332c:	dc 01       	movw	r26, r24
    332e:	cb 01       	movw	r24, r22
    3330:	8e 01       	movw	r16, r28
    3332:	07 50       	subi	r16, 0x07	; 7
    3334:	1d 4f       	sbci	r17, 0xFD	; 253
    3336:	bc 01       	movw	r22, r24
    3338:	cd 01       	movw	r24, r26
    333a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    333e:	dc 01       	movw	r26, r24
    3340:	cb 01       	movw	r24, r22
    3342:	f8 01       	movw	r30, r16
    3344:	91 83       	std	Z+1, r25	; 0x01
    3346:	80 83       	st	Z, r24
    3348:	1f c0       	rjmp	.+62     	; 0x3388 <Forward+0xfa8>
    334a:	fe 01       	movw	r30, r28
    334c:	e9 50       	subi	r30, 0x09	; 9
    334e:	fd 4f       	sbci	r31, 0xFD	; 253
    3350:	80 e9       	ldi	r24, 0x90	; 144
    3352:	91 e0       	ldi	r25, 0x01	; 1
    3354:	91 83       	std	Z+1, r25	; 0x01
    3356:	80 83       	st	Z, r24
    3358:	fe 01       	movw	r30, r28
    335a:	e9 50       	subi	r30, 0x09	; 9
    335c:	fd 4f       	sbci	r31, 0xFD	; 253
    335e:	80 81       	ld	r24, Z
    3360:	91 81       	ldd	r25, Z+1	; 0x01
    3362:	01 97       	sbiw	r24, 0x01	; 1
    3364:	f1 f7       	brne	.-4      	; 0x3362 <Forward+0xf82>
    3366:	fe 01       	movw	r30, r28
    3368:	e9 50       	subi	r30, 0x09	; 9
    336a:	fd 4f       	sbci	r31, 0xFD	; 253
    336c:	91 83       	std	Z+1, r25	; 0x01
    336e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3370:	de 01       	movw	r26, r28
    3372:	a7 50       	subi	r26, 0x07	; 7
    3374:	bd 4f       	sbci	r27, 0xFD	; 253
    3376:	fe 01       	movw	r30, r28
    3378:	e7 50       	subi	r30, 0x07	; 7
    337a:	fd 4f       	sbci	r31, 0xFD	; 253
    337c:	80 81       	ld	r24, Z
    337e:	91 81       	ldd	r25, Z+1	; 0x01
    3380:	01 97       	sbiw	r24, 0x01	; 1
    3382:	11 96       	adiw	r26, 0x01	; 1
    3384:	9c 93       	st	X, r25
    3386:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3388:	fe 01       	movw	r30, r28
    338a:	e7 50       	subi	r30, 0x07	; 7
    338c:	fd 4f       	sbci	r31, 0xFD	; 253
    338e:	80 81       	ld	r24, Z
    3390:	91 81       	ldd	r25, Z+1	; 0x01
    3392:	00 97       	sbiw	r24, 0x00	; 0
    3394:	d1 f6       	brne	.-76     	; 0x334a <Forward+0xf6a>
    3396:	27 c0       	rjmp	.+78     	; 0x33e6 <Forward+0x1006>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3398:	8e 01       	movw	r16, r28
    339a:	07 50       	subi	r16, 0x07	; 7
    339c:	1d 4f       	sbci	r17, 0xFD	; 253
    339e:	fe 01       	movw	r30, r28
    33a0:	e5 50       	subi	r30, 0x05	; 5
    33a2:	fd 4f       	sbci	r31, 0xFD	; 253
    33a4:	60 81       	ld	r22, Z
    33a6:	71 81       	ldd	r23, Z+1	; 0x01
    33a8:	82 81       	ldd	r24, Z+2	; 0x02
    33aa:	93 81       	ldd	r25, Z+3	; 0x03
    33ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33b0:	dc 01       	movw	r26, r24
    33b2:	cb 01       	movw	r24, r22
    33b4:	f8 01       	movw	r30, r16
    33b6:	91 83       	std	Z+1, r25	; 0x01
    33b8:	80 83       	st	Z, r24
    33ba:	de 01       	movw	r26, r28
    33bc:	ab 50       	subi	r26, 0x0B	; 11
    33be:	bd 4f       	sbci	r27, 0xFD	; 253
    33c0:	fe 01       	movw	r30, r28
    33c2:	e7 50       	subi	r30, 0x07	; 7
    33c4:	fd 4f       	sbci	r31, 0xFD	; 253
    33c6:	80 81       	ld	r24, Z
    33c8:	91 81       	ldd	r25, Z+1	; 0x01
    33ca:	8d 93       	st	X+, r24
    33cc:	9c 93       	st	X, r25
    33ce:	fe 01       	movw	r30, r28
    33d0:	eb 50       	subi	r30, 0x0B	; 11
    33d2:	fd 4f       	sbci	r31, 0xFD	; 253
    33d4:	80 81       	ld	r24, Z
    33d6:	91 81       	ldd	r25, Z+1	; 0x01
    33d8:	01 97       	sbiw	r24, 0x01	; 1
    33da:	f1 f7       	brne	.-4      	; 0x33d8 <Forward+0xff8>
    33dc:	fe 01       	movw	r30, r28
    33de:	eb 50       	subi	r30, 0x0B	; 11
    33e0:	fd 4f       	sbci	r31, 0xFD	; 253
    33e2:	91 83       	std	Z+1, r25	; 0x01
    33e4:	80 83       	st	Z, r24
	_delay_ms(70);
	angle1 = NaturalPos;
    33e6:	8d e0       	ldi	r24, 0x0D	; 13
    33e8:	80 93 69 00 	sts	0x0069, r24
    33ec:	fe 01       	movw	r30, r28
    33ee:	ef 50       	subi	r30, 0x0F	; 15
    33f0:	fd 4f       	sbci	r31, 0xFD	; 253
    33f2:	80 e0       	ldi	r24, 0x00	; 0
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	aa ef       	ldi	r26, 0xFA	; 250
    33f8:	b3 e4       	ldi	r27, 0x43	; 67
    33fa:	80 83       	st	Z, r24
    33fc:	91 83       	std	Z+1, r25	; 0x01
    33fe:	a2 83       	std	Z+2, r26	; 0x02
    3400:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3402:	8e 01       	movw	r16, r28
    3404:	03 51       	subi	r16, 0x13	; 19
    3406:	1d 4f       	sbci	r17, 0xFD	; 253
    3408:	fe 01       	movw	r30, r28
    340a:	ef 50       	subi	r30, 0x0F	; 15
    340c:	fd 4f       	sbci	r31, 0xFD	; 253
    340e:	60 81       	ld	r22, Z
    3410:	71 81       	ldd	r23, Z+1	; 0x01
    3412:	82 81       	ldd	r24, Z+2	; 0x02
    3414:	93 81       	ldd	r25, Z+3	; 0x03
    3416:	20 e0       	ldi	r18, 0x00	; 0
    3418:	30 e0       	ldi	r19, 0x00	; 0
    341a:	4a e7       	ldi	r20, 0x7A	; 122
    341c:	55 e4       	ldi	r21, 0x45	; 69
    341e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3422:	dc 01       	movw	r26, r24
    3424:	cb 01       	movw	r24, r22
    3426:	f8 01       	movw	r30, r16
    3428:	80 83       	st	Z, r24
    342a:	91 83       	std	Z+1, r25	; 0x01
    342c:	a2 83       	std	Z+2, r26	; 0x02
    342e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3430:	fe 01       	movw	r30, r28
    3432:	e3 51       	subi	r30, 0x13	; 19
    3434:	fd 4f       	sbci	r31, 0xFD	; 253
    3436:	60 81       	ld	r22, Z
    3438:	71 81       	ldd	r23, Z+1	; 0x01
    343a:	82 81       	ldd	r24, Z+2	; 0x02
    343c:	93 81       	ldd	r25, Z+3	; 0x03
    343e:	20 e0       	ldi	r18, 0x00	; 0
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	40 e8       	ldi	r20, 0x80	; 128
    3444:	5f e3       	ldi	r21, 0x3F	; 63
    3446:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    344a:	88 23       	and	r24, r24
    344c:	44 f4       	brge	.+16     	; 0x345e <Forward+0x107e>
		__ticks = 1;
    344e:	fe 01       	movw	r30, r28
    3450:	e5 51       	subi	r30, 0x15	; 21
    3452:	fd 4f       	sbci	r31, 0xFD	; 253
    3454:	81 e0       	ldi	r24, 0x01	; 1
    3456:	90 e0       	ldi	r25, 0x00	; 0
    3458:	91 83       	std	Z+1, r25	; 0x01
    345a:	80 83       	st	Z, r24
    345c:	64 c0       	rjmp	.+200    	; 0x3526 <Forward+0x1146>
	else if (__tmp > 65535)
    345e:	fe 01       	movw	r30, r28
    3460:	e3 51       	subi	r30, 0x13	; 19
    3462:	fd 4f       	sbci	r31, 0xFD	; 253
    3464:	60 81       	ld	r22, Z
    3466:	71 81       	ldd	r23, Z+1	; 0x01
    3468:	82 81       	ldd	r24, Z+2	; 0x02
    346a:	93 81       	ldd	r25, Z+3	; 0x03
    346c:	20 e0       	ldi	r18, 0x00	; 0
    346e:	3f ef       	ldi	r19, 0xFF	; 255
    3470:	4f e7       	ldi	r20, 0x7F	; 127
    3472:	57 e4       	ldi	r21, 0x47	; 71
    3474:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3478:	18 16       	cp	r1, r24
    347a:	0c f0       	brlt	.+2      	; 0x347e <Forward+0x109e>
    347c:	43 c0       	rjmp	.+134    	; 0x3504 <Forward+0x1124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    347e:	fe 01       	movw	r30, r28
    3480:	ef 50       	subi	r30, 0x0F	; 15
    3482:	fd 4f       	sbci	r31, 0xFD	; 253
    3484:	60 81       	ld	r22, Z
    3486:	71 81       	ldd	r23, Z+1	; 0x01
    3488:	82 81       	ldd	r24, Z+2	; 0x02
    348a:	93 81       	ldd	r25, Z+3	; 0x03
    348c:	20 e0       	ldi	r18, 0x00	; 0
    348e:	30 e0       	ldi	r19, 0x00	; 0
    3490:	40 e2       	ldi	r20, 0x20	; 32
    3492:	51 e4       	ldi	r21, 0x41	; 65
    3494:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3498:	dc 01       	movw	r26, r24
    349a:	cb 01       	movw	r24, r22
    349c:	8e 01       	movw	r16, r28
    349e:	05 51       	subi	r16, 0x15	; 21
    34a0:	1d 4f       	sbci	r17, 0xFD	; 253
    34a2:	bc 01       	movw	r22, r24
    34a4:	cd 01       	movw	r24, r26
    34a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34aa:	dc 01       	movw	r26, r24
    34ac:	cb 01       	movw	r24, r22
    34ae:	f8 01       	movw	r30, r16
    34b0:	91 83       	std	Z+1, r25	; 0x01
    34b2:	80 83       	st	Z, r24
    34b4:	1f c0       	rjmp	.+62     	; 0x34f4 <Forward+0x1114>
    34b6:	fe 01       	movw	r30, r28
    34b8:	e7 51       	subi	r30, 0x17	; 23
    34ba:	fd 4f       	sbci	r31, 0xFD	; 253
    34bc:	80 e9       	ldi	r24, 0x90	; 144
    34be:	91 e0       	ldi	r25, 0x01	; 1
    34c0:	91 83       	std	Z+1, r25	; 0x01
    34c2:	80 83       	st	Z, r24
    34c4:	fe 01       	movw	r30, r28
    34c6:	e7 51       	subi	r30, 0x17	; 23
    34c8:	fd 4f       	sbci	r31, 0xFD	; 253
    34ca:	80 81       	ld	r24, Z
    34cc:	91 81       	ldd	r25, Z+1	; 0x01
    34ce:	01 97       	sbiw	r24, 0x01	; 1
    34d0:	f1 f7       	brne	.-4      	; 0x34ce <Forward+0x10ee>
    34d2:	fe 01       	movw	r30, r28
    34d4:	e7 51       	subi	r30, 0x17	; 23
    34d6:	fd 4f       	sbci	r31, 0xFD	; 253
    34d8:	91 83       	std	Z+1, r25	; 0x01
    34da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34dc:	de 01       	movw	r26, r28
    34de:	a5 51       	subi	r26, 0x15	; 21
    34e0:	bd 4f       	sbci	r27, 0xFD	; 253
    34e2:	fe 01       	movw	r30, r28
    34e4:	e5 51       	subi	r30, 0x15	; 21
    34e6:	fd 4f       	sbci	r31, 0xFD	; 253
    34e8:	80 81       	ld	r24, Z
    34ea:	91 81       	ldd	r25, Z+1	; 0x01
    34ec:	01 97       	sbiw	r24, 0x01	; 1
    34ee:	11 96       	adiw	r26, 0x01	; 1
    34f0:	9c 93       	st	X, r25
    34f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34f4:	fe 01       	movw	r30, r28
    34f6:	e5 51       	subi	r30, 0x15	; 21
    34f8:	fd 4f       	sbci	r31, 0xFD	; 253
    34fa:	80 81       	ld	r24, Z
    34fc:	91 81       	ldd	r25, Z+1	; 0x01
    34fe:	00 97       	sbiw	r24, 0x00	; 0
    3500:	d1 f6       	brne	.-76     	; 0x34b6 <Forward+0x10d6>
    3502:	27 c0       	rjmp	.+78     	; 0x3552 <Forward+0x1172>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3504:	8e 01       	movw	r16, r28
    3506:	05 51       	subi	r16, 0x15	; 21
    3508:	1d 4f       	sbci	r17, 0xFD	; 253
    350a:	fe 01       	movw	r30, r28
    350c:	e3 51       	subi	r30, 0x13	; 19
    350e:	fd 4f       	sbci	r31, 0xFD	; 253
    3510:	60 81       	ld	r22, Z
    3512:	71 81       	ldd	r23, Z+1	; 0x01
    3514:	82 81       	ldd	r24, Z+2	; 0x02
    3516:	93 81       	ldd	r25, Z+3	; 0x03
    3518:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    351c:	dc 01       	movw	r26, r24
    351e:	cb 01       	movw	r24, r22
    3520:	f8 01       	movw	r30, r16
    3522:	91 83       	std	Z+1, r25	; 0x01
    3524:	80 83       	st	Z, r24
    3526:	de 01       	movw	r26, r28
    3528:	a9 51       	subi	r26, 0x19	; 25
    352a:	bd 4f       	sbci	r27, 0xFD	; 253
    352c:	fe 01       	movw	r30, r28
    352e:	e5 51       	subi	r30, 0x15	; 21
    3530:	fd 4f       	sbci	r31, 0xFD	; 253
    3532:	80 81       	ld	r24, Z
    3534:	91 81       	ldd	r25, Z+1	; 0x01
    3536:	8d 93       	st	X+, r24
    3538:	9c 93       	st	X, r25
    353a:	fe 01       	movw	r30, r28
    353c:	e9 51       	subi	r30, 0x19	; 25
    353e:	fd 4f       	sbci	r31, 0xFD	; 253
    3540:	80 81       	ld	r24, Z
    3542:	91 81       	ldd	r25, Z+1	; 0x01
    3544:	01 97       	sbiw	r24, 0x01	; 1
    3546:	f1 f7       	brne	.-4      	; 0x3544 <Forward+0x1164>
    3548:	fe 01       	movw	r30, r28
    354a:	e9 51       	subi	r30, 0x19	; 25
    354c:	fd 4f       	sbci	r31, 0xFD	; 253
    354e:	91 83       	std	Z+1, r25	; 0x01
    3550:	80 83       	st	Z, r24
	_delay_ms(500);

	angle3 = POSN4;
    3552:	8b e0       	ldi	r24, 0x0B	; 11
    3554:	80 93 6b 00 	sts	0x006B, r24
    3558:	fe 01       	movw	r30, r28
    355a:	ed 51       	subi	r30, 0x1D	; 29
    355c:	fd 4f       	sbci	r31, 0xFD	; 253
    355e:	80 e0       	ldi	r24, 0x00	; 0
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	ac e8       	ldi	r26, 0x8C	; 140
    3564:	b2 e4       	ldi	r27, 0x42	; 66
    3566:	80 83       	st	Z, r24
    3568:	91 83       	std	Z+1, r25	; 0x01
    356a:	a2 83       	std	Z+2, r26	; 0x02
    356c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    356e:	8e 01       	movw	r16, r28
    3570:	01 52       	subi	r16, 0x21	; 33
    3572:	1d 4f       	sbci	r17, 0xFD	; 253
    3574:	fe 01       	movw	r30, r28
    3576:	ed 51       	subi	r30, 0x1D	; 29
    3578:	fd 4f       	sbci	r31, 0xFD	; 253
    357a:	60 81       	ld	r22, Z
    357c:	71 81       	ldd	r23, Z+1	; 0x01
    357e:	82 81       	ldd	r24, Z+2	; 0x02
    3580:	93 81       	ldd	r25, Z+3	; 0x03
    3582:	20 e0       	ldi	r18, 0x00	; 0
    3584:	30 e0       	ldi	r19, 0x00	; 0
    3586:	4a e7       	ldi	r20, 0x7A	; 122
    3588:	55 e4       	ldi	r21, 0x45	; 69
    358a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    358e:	dc 01       	movw	r26, r24
    3590:	cb 01       	movw	r24, r22
    3592:	f8 01       	movw	r30, r16
    3594:	80 83       	st	Z, r24
    3596:	91 83       	std	Z+1, r25	; 0x01
    3598:	a2 83       	std	Z+2, r26	; 0x02
    359a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    359c:	fe 01       	movw	r30, r28
    359e:	e1 52       	subi	r30, 0x21	; 33
    35a0:	fd 4f       	sbci	r31, 0xFD	; 253
    35a2:	60 81       	ld	r22, Z
    35a4:	71 81       	ldd	r23, Z+1	; 0x01
    35a6:	82 81       	ldd	r24, Z+2	; 0x02
    35a8:	93 81       	ldd	r25, Z+3	; 0x03
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	40 e8       	ldi	r20, 0x80	; 128
    35b0:	5f e3       	ldi	r21, 0x3F	; 63
    35b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    35b6:	88 23       	and	r24, r24
    35b8:	44 f4       	brge	.+16     	; 0x35ca <Forward+0x11ea>
		__ticks = 1;
    35ba:	fe 01       	movw	r30, r28
    35bc:	e3 52       	subi	r30, 0x23	; 35
    35be:	fd 4f       	sbci	r31, 0xFD	; 253
    35c0:	81 e0       	ldi	r24, 0x01	; 1
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	91 83       	std	Z+1, r25	; 0x01
    35c6:	80 83       	st	Z, r24
    35c8:	64 c0       	rjmp	.+200    	; 0x3692 <Forward+0x12b2>
	else if (__tmp > 65535)
    35ca:	fe 01       	movw	r30, r28
    35cc:	e1 52       	subi	r30, 0x21	; 33
    35ce:	fd 4f       	sbci	r31, 0xFD	; 253
    35d0:	60 81       	ld	r22, Z
    35d2:	71 81       	ldd	r23, Z+1	; 0x01
    35d4:	82 81       	ldd	r24, Z+2	; 0x02
    35d6:	93 81       	ldd	r25, Z+3	; 0x03
    35d8:	20 e0       	ldi	r18, 0x00	; 0
    35da:	3f ef       	ldi	r19, 0xFF	; 255
    35dc:	4f e7       	ldi	r20, 0x7F	; 127
    35de:	57 e4       	ldi	r21, 0x47	; 71
    35e0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    35e4:	18 16       	cp	r1, r24
    35e6:	0c f0       	brlt	.+2      	; 0x35ea <Forward+0x120a>
    35e8:	43 c0       	rjmp	.+134    	; 0x3670 <Forward+0x1290>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ea:	fe 01       	movw	r30, r28
    35ec:	ed 51       	subi	r30, 0x1D	; 29
    35ee:	fd 4f       	sbci	r31, 0xFD	; 253
    35f0:	60 81       	ld	r22, Z
    35f2:	71 81       	ldd	r23, Z+1	; 0x01
    35f4:	82 81       	ldd	r24, Z+2	; 0x02
    35f6:	93 81       	ldd	r25, Z+3	; 0x03
    35f8:	20 e0       	ldi	r18, 0x00	; 0
    35fa:	30 e0       	ldi	r19, 0x00	; 0
    35fc:	40 e2       	ldi	r20, 0x20	; 32
    35fe:	51 e4       	ldi	r21, 0x41	; 65
    3600:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3604:	dc 01       	movw	r26, r24
    3606:	cb 01       	movw	r24, r22
    3608:	8e 01       	movw	r16, r28
    360a:	03 52       	subi	r16, 0x23	; 35
    360c:	1d 4f       	sbci	r17, 0xFD	; 253
    360e:	bc 01       	movw	r22, r24
    3610:	cd 01       	movw	r24, r26
    3612:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3616:	dc 01       	movw	r26, r24
    3618:	cb 01       	movw	r24, r22
    361a:	f8 01       	movw	r30, r16
    361c:	91 83       	std	Z+1, r25	; 0x01
    361e:	80 83       	st	Z, r24
    3620:	1f c0       	rjmp	.+62     	; 0x3660 <Forward+0x1280>
    3622:	fe 01       	movw	r30, r28
    3624:	e5 52       	subi	r30, 0x25	; 37
    3626:	fd 4f       	sbci	r31, 0xFD	; 253
    3628:	80 e9       	ldi	r24, 0x90	; 144
    362a:	91 e0       	ldi	r25, 0x01	; 1
    362c:	91 83       	std	Z+1, r25	; 0x01
    362e:	80 83       	st	Z, r24
    3630:	fe 01       	movw	r30, r28
    3632:	e5 52       	subi	r30, 0x25	; 37
    3634:	fd 4f       	sbci	r31, 0xFD	; 253
    3636:	80 81       	ld	r24, Z
    3638:	91 81       	ldd	r25, Z+1	; 0x01
    363a:	01 97       	sbiw	r24, 0x01	; 1
    363c:	f1 f7       	brne	.-4      	; 0x363a <Forward+0x125a>
    363e:	fe 01       	movw	r30, r28
    3640:	e5 52       	subi	r30, 0x25	; 37
    3642:	fd 4f       	sbci	r31, 0xFD	; 253
    3644:	91 83       	std	Z+1, r25	; 0x01
    3646:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3648:	de 01       	movw	r26, r28
    364a:	a3 52       	subi	r26, 0x23	; 35
    364c:	bd 4f       	sbci	r27, 0xFD	; 253
    364e:	fe 01       	movw	r30, r28
    3650:	e3 52       	subi	r30, 0x23	; 35
    3652:	fd 4f       	sbci	r31, 0xFD	; 253
    3654:	80 81       	ld	r24, Z
    3656:	91 81       	ldd	r25, Z+1	; 0x01
    3658:	01 97       	sbiw	r24, 0x01	; 1
    365a:	11 96       	adiw	r26, 0x01	; 1
    365c:	9c 93       	st	X, r25
    365e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3660:	fe 01       	movw	r30, r28
    3662:	e3 52       	subi	r30, 0x23	; 35
    3664:	fd 4f       	sbci	r31, 0xFD	; 253
    3666:	80 81       	ld	r24, Z
    3668:	91 81       	ldd	r25, Z+1	; 0x01
    366a:	00 97       	sbiw	r24, 0x00	; 0
    366c:	d1 f6       	brne	.-76     	; 0x3622 <Forward+0x1242>
    366e:	27 c0       	rjmp	.+78     	; 0x36be <Forward+0x12de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3670:	8e 01       	movw	r16, r28
    3672:	03 52       	subi	r16, 0x23	; 35
    3674:	1d 4f       	sbci	r17, 0xFD	; 253
    3676:	fe 01       	movw	r30, r28
    3678:	e1 52       	subi	r30, 0x21	; 33
    367a:	fd 4f       	sbci	r31, 0xFD	; 253
    367c:	60 81       	ld	r22, Z
    367e:	71 81       	ldd	r23, Z+1	; 0x01
    3680:	82 81       	ldd	r24, Z+2	; 0x02
    3682:	93 81       	ldd	r25, Z+3	; 0x03
    3684:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3688:	dc 01       	movw	r26, r24
    368a:	cb 01       	movw	r24, r22
    368c:	f8 01       	movw	r30, r16
    368e:	91 83       	std	Z+1, r25	; 0x01
    3690:	80 83       	st	Z, r24
    3692:	de 01       	movw	r26, r28
    3694:	a7 52       	subi	r26, 0x27	; 39
    3696:	bd 4f       	sbci	r27, 0xFD	; 253
    3698:	fe 01       	movw	r30, r28
    369a:	e3 52       	subi	r30, 0x23	; 35
    369c:	fd 4f       	sbci	r31, 0xFD	; 253
    369e:	80 81       	ld	r24, Z
    36a0:	91 81       	ldd	r25, Z+1	; 0x01
    36a2:	8d 93       	st	X+, r24
    36a4:	9c 93       	st	X, r25
    36a6:	fe 01       	movw	r30, r28
    36a8:	e7 52       	subi	r30, 0x27	; 39
    36aa:	fd 4f       	sbci	r31, 0xFD	; 253
    36ac:	80 81       	ld	r24, Z
    36ae:	91 81       	ldd	r25, Z+1	; 0x01
    36b0:	01 97       	sbiw	r24, 0x01	; 1
    36b2:	f1 f7       	brne	.-4      	; 0x36b0 <Forward+0x12d0>
    36b4:	fe 01       	movw	r30, r28
    36b6:	e7 52       	subi	r30, 0x27	; 39
    36b8:	fd 4f       	sbci	r31, 0xFD	; 253
    36ba:	91 83       	std	Z+1, r25	; 0x01
    36bc:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POSN5;
    36be:	8c e0       	ldi	r24, 0x0C	; 12
    36c0:	80 93 6b 00 	sts	0x006B, r24
    36c4:	fe 01       	movw	r30, r28
    36c6:	eb 52       	subi	r30, 0x2B	; 43
    36c8:	fd 4f       	sbci	r31, 0xFD	; 253
    36ca:	80 e0       	ldi	r24, 0x00	; 0
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	ac e8       	ldi	r26, 0x8C	; 140
    36d0:	b2 e4       	ldi	r27, 0x42	; 66
    36d2:	80 83       	st	Z, r24
    36d4:	91 83       	std	Z+1, r25	; 0x01
    36d6:	a2 83       	std	Z+2, r26	; 0x02
    36d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36da:	8e 01       	movw	r16, r28
    36dc:	0f 52       	subi	r16, 0x2F	; 47
    36de:	1d 4f       	sbci	r17, 0xFD	; 253
    36e0:	fe 01       	movw	r30, r28
    36e2:	eb 52       	subi	r30, 0x2B	; 43
    36e4:	fd 4f       	sbci	r31, 0xFD	; 253
    36e6:	60 81       	ld	r22, Z
    36e8:	71 81       	ldd	r23, Z+1	; 0x01
    36ea:	82 81       	ldd	r24, Z+2	; 0x02
    36ec:	93 81       	ldd	r25, Z+3	; 0x03
    36ee:	20 e0       	ldi	r18, 0x00	; 0
    36f0:	30 e0       	ldi	r19, 0x00	; 0
    36f2:	4a e7       	ldi	r20, 0x7A	; 122
    36f4:	55 e4       	ldi	r21, 0x45	; 69
    36f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    36fa:	dc 01       	movw	r26, r24
    36fc:	cb 01       	movw	r24, r22
    36fe:	f8 01       	movw	r30, r16
    3700:	80 83       	st	Z, r24
    3702:	91 83       	std	Z+1, r25	; 0x01
    3704:	a2 83       	std	Z+2, r26	; 0x02
    3706:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3708:	fe 01       	movw	r30, r28
    370a:	ef 52       	subi	r30, 0x2F	; 47
    370c:	fd 4f       	sbci	r31, 0xFD	; 253
    370e:	60 81       	ld	r22, Z
    3710:	71 81       	ldd	r23, Z+1	; 0x01
    3712:	82 81       	ldd	r24, Z+2	; 0x02
    3714:	93 81       	ldd	r25, Z+3	; 0x03
    3716:	20 e0       	ldi	r18, 0x00	; 0
    3718:	30 e0       	ldi	r19, 0x00	; 0
    371a:	40 e8       	ldi	r20, 0x80	; 128
    371c:	5f e3       	ldi	r21, 0x3F	; 63
    371e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3722:	88 23       	and	r24, r24
    3724:	44 f4       	brge	.+16     	; 0x3736 <Forward+0x1356>
		__ticks = 1;
    3726:	fe 01       	movw	r30, r28
    3728:	e1 53       	subi	r30, 0x31	; 49
    372a:	fd 4f       	sbci	r31, 0xFD	; 253
    372c:	81 e0       	ldi	r24, 0x01	; 1
    372e:	90 e0       	ldi	r25, 0x00	; 0
    3730:	91 83       	std	Z+1, r25	; 0x01
    3732:	80 83       	st	Z, r24
    3734:	64 c0       	rjmp	.+200    	; 0x37fe <Forward+0x141e>
	else if (__tmp > 65535)
    3736:	fe 01       	movw	r30, r28
    3738:	ef 52       	subi	r30, 0x2F	; 47
    373a:	fd 4f       	sbci	r31, 0xFD	; 253
    373c:	60 81       	ld	r22, Z
    373e:	71 81       	ldd	r23, Z+1	; 0x01
    3740:	82 81       	ldd	r24, Z+2	; 0x02
    3742:	93 81       	ldd	r25, Z+3	; 0x03
    3744:	20 e0       	ldi	r18, 0x00	; 0
    3746:	3f ef       	ldi	r19, 0xFF	; 255
    3748:	4f e7       	ldi	r20, 0x7F	; 127
    374a:	57 e4       	ldi	r21, 0x47	; 71
    374c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3750:	18 16       	cp	r1, r24
    3752:	0c f0       	brlt	.+2      	; 0x3756 <Forward+0x1376>
    3754:	43 c0       	rjmp	.+134    	; 0x37dc <Forward+0x13fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3756:	fe 01       	movw	r30, r28
    3758:	eb 52       	subi	r30, 0x2B	; 43
    375a:	fd 4f       	sbci	r31, 0xFD	; 253
    375c:	60 81       	ld	r22, Z
    375e:	71 81       	ldd	r23, Z+1	; 0x01
    3760:	82 81       	ldd	r24, Z+2	; 0x02
    3762:	93 81       	ldd	r25, Z+3	; 0x03
    3764:	20 e0       	ldi	r18, 0x00	; 0
    3766:	30 e0       	ldi	r19, 0x00	; 0
    3768:	40 e2       	ldi	r20, 0x20	; 32
    376a:	51 e4       	ldi	r21, 0x41	; 65
    376c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3770:	dc 01       	movw	r26, r24
    3772:	cb 01       	movw	r24, r22
    3774:	8e 01       	movw	r16, r28
    3776:	01 53       	subi	r16, 0x31	; 49
    3778:	1d 4f       	sbci	r17, 0xFD	; 253
    377a:	bc 01       	movw	r22, r24
    377c:	cd 01       	movw	r24, r26
    377e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3782:	dc 01       	movw	r26, r24
    3784:	cb 01       	movw	r24, r22
    3786:	f8 01       	movw	r30, r16
    3788:	91 83       	std	Z+1, r25	; 0x01
    378a:	80 83       	st	Z, r24
    378c:	1f c0       	rjmp	.+62     	; 0x37cc <Forward+0x13ec>
    378e:	fe 01       	movw	r30, r28
    3790:	e3 53       	subi	r30, 0x33	; 51
    3792:	fd 4f       	sbci	r31, 0xFD	; 253
    3794:	80 e9       	ldi	r24, 0x90	; 144
    3796:	91 e0       	ldi	r25, 0x01	; 1
    3798:	91 83       	std	Z+1, r25	; 0x01
    379a:	80 83       	st	Z, r24
    379c:	fe 01       	movw	r30, r28
    379e:	e3 53       	subi	r30, 0x33	; 51
    37a0:	fd 4f       	sbci	r31, 0xFD	; 253
    37a2:	80 81       	ld	r24, Z
    37a4:	91 81       	ldd	r25, Z+1	; 0x01
    37a6:	01 97       	sbiw	r24, 0x01	; 1
    37a8:	f1 f7       	brne	.-4      	; 0x37a6 <Forward+0x13c6>
    37aa:	fe 01       	movw	r30, r28
    37ac:	e3 53       	subi	r30, 0x33	; 51
    37ae:	fd 4f       	sbci	r31, 0xFD	; 253
    37b0:	91 83       	std	Z+1, r25	; 0x01
    37b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37b4:	de 01       	movw	r26, r28
    37b6:	a1 53       	subi	r26, 0x31	; 49
    37b8:	bd 4f       	sbci	r27, 0xFD	; 253
    37ba:	fe 01       	movw	r30, r28
    37bc:	e1 53       	subi	r30, 0x31	; 49
    37be:	fd 4f       	sbci	r31, 0xFD	; 253
    37c0:	80 81       	ld	r24, Z
    37c2:	91 81       	ldd	r25, Z+1	; 0x01
    37c4:	01 97       	sbiw	r24, 0x01	; 1
    37c6:	11 96       	adiw	r26, 0x01	; 1
    37c8:	9c 93       	st	X, r25
    37ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37cc:	fe 01       	movw	r30, r28
    37ce:	e1 53       	subi	r30, 0x31	; 49
    37d0:	fd 4f       	sbci	r31, 0xFD	; 253
    37d2:	80 81       	ld	r24, Z
    37d4:	91 81       	ldd	r25, Z+1	; 0x01
    37d6:	00 97       	sbiw	r24, 0x00	; 0
    37d8:	d1 f6       	brne	.-76     	; 0x378e <Forward+0x13ae>
    37da:	27 c0       	rjmp	.+78     	; 0x382a <Forward+0x144a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37dc:	8e 01       	movw	r16, r28
    37de:	01 53       	subi	r16, 0x31	; 49
    37e0:	1d 4f       	sbci	r17, 0xFD	; 253
    37e2:	fe 01       	movw	r30, r28
    37e4:	ef 52       	subi	r30, 0x2F	; 47
    37e6:	fd 4f       	sbci	r31, 0xFD	; 253
    37e8:	60 81       	ld	r22, Z
    37ea:	71 81       	ldd	r23, Z+1	; 0x01
    37ec:	82 81       	ldd	r24, Z+2	; 0x02
    37ee:	93 81       	ldd	r25, Z+3	; 0x03
    37f0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37f4:	dc 01       	movw	r26, r24
    37f6:	cb 01       	movw	r24, r22
    37f8:	f8 01       	movw	r30, r16
    37fa:	91 83       	std	Z+1, r25	; 0x01
    37fc:	80 83       	st	Z, r24
    37fe:	de 01       	movw	r26, r28
    3800:	a5 53       	subi	r26, 0x35	; 53
    3802:	bd 4f       	sbci	r27, 0xFD	; 253
    3804:	fe 01       	movw	r30, r28
    3806:	e1 53       	subi	r30, 0x31	; 49
    3808:	fd 4f       	sbci	r31, 0xFD	; 253
    380a:	80 81       	ld	r24, Z
    380c:	91 81       	ldd	r25, Z+1	; 0x01
    380e:	8d 93       	st	X+, r24
    3810:	9c 93       	st	X, r25
    3812:	fe 01       	movw	r30, r28
    3814:	e5 53       	subi	r30, 0x35	; 53
    3816:	fd 4f       	sbci	r31, 0xFD	; 253
    3818:	80 81       	ld	r24, Z
    381a:	91 81       	ldd	r25, Z+1	; 0x01
    381c:	01 97       	sbiw	r24, 0x01	; 1
    381e:	f1 f7       	brne	.-4      	; 0x381c <Forward+0x143c>
    3820:	fe 01       	movw	r30, r28
    3822:	e5 53       	subi	r30, 0x35	; 53
    3824:	fd 4f       	sbci	r31, 0xFD	; 253
    3826:	91 83       	std	Z+1, r25	; 0x01
    3828:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = NaturalPos;
    382a:	8d e0       	ldi	r24, 0x0D	; 13
    382c:	80 93 6b 00 	sts	0x006B, r24
    3830:	fe 01       	movw	r30, r28
    3832:	e9 53       	subi	r30, 0x39	; 57
    3834:	fd 4f       	sbci	r31, 0xFD	; 253
    3836:	80 e0       	ldi	r24, 0x00	; 0
    3838:	90 e0       	ldi	r25, 0x00	; 0
    383a:	ac e8       	ldi	r26, 0x8C	; 140
    383c:	b2 e4       	ldi	r27, 0x42	; 66
    383e:	80 83       	st	Z, r24
    3840:	91 83       	std	Z+1, r25	; 0x01
    3842:	a2 83       	std	Z+2, r26	; 0x02
    3844:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3846:	8e 01       	movw	r16, r28
    3848:	0d 53       	subi	r16, 0x3D	; 61
    384a:	1d 4f       	sbci	r17, 0xFD	; 253
    384c:	fe 01       	movw	r30, r28
    384e:	e9 53       	subi	r30, 0x39	; 57
    3850:	fd 4f       	sbci	r31, 0xFD	; 253
    3852:	60 81       	ld	r22, Z
    3854:	71 81       	ldd	r23, Z+1	; 0x01
    3856:	82 81       	ldd	r24, Z+2	; 0x02
    3858:	93 81       	ldd	r25, Z+3	; 0x03
    385a:	20 e0       	ldi	r18, 0x00	; 0
    385c:	30 e0       	ldi	r19, 0x00	; 0
    385e:	4a e7       	ldi	r20, 0x7A	; 122
    3860:	55 e4       	ldi	r21, 0x45	; 69
    3862:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3866:	dc 01       	movw	r26, r24
    3868:	cb 01       	movw	r24, r22
    386a:	f8 01       	movw	r30, r16
    386c:	80 83       	st	Z, r24
    386e:	91 83       	std	Z+1, r25	; 0x01
    3870:	a2 83       	std	Z+2, r26	; 0x02
    3872:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3874:	fe 01       	movw	r30, r28
    3876:	ed 53       	subi	r30, 0x3D	; 61
    3878:	fd 4f       	sbci	r31, 0xFD	; 253
    387a:	60 81       	ld	r22, Z
    387c:	71 81       	ldd	r23, Z+1	; 0x01
    387e:	82 81       	ldd	r24, Z+2	; 0x02
    3880:	93 81       	ldd	r25, Z+3	; 0x03
    3882:	20 e0       	ldi	r18, 0x00	; 0
    3884:	30 e0       	ldi	r19, 0x00	; 0
    3886:	40 e8       	ldi	r20, 0x80	; 128
    3888:	5f e3       	ldi	r21, 0x3F	; 63
    388a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    388e:	88 23       	and	r24, r24
    3890:	44 f4       	brge	.+16     	; 0x38a2 <Forward+0x14c2>
		__ticks = 1;
    3892:	fe 01       	movw	r30, r28
    3894:	ef 53       	subi	r30, 0x3F	; 63
    3896:	fd 4f       	sbci	r31, 0xFD	; 253
    3898:	81 e0       	ldi	r24, 0x01	; 1
    389a:	90 e0       	ldi	r25, 0x00	; 0
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
    38a0:	64 c0       	rjmp	.+200    	; 0x396a <Forward+0x158a>
	else if (__tmp > 65535)
    38a2:	fe 01       	movw	r30, r28
    38a4:	ed 53       	subi	r30, 0x3D	; 61
    38a6:	fd 4f       	sbci	r31, 0xFD	; 253
    38a8:	60 81       	ld	r22, Z
    38aa:	71 81       	ldd	r23, Z+1	; 0x01
    38ac:	82 81       	ldd	r24, Z+2	; 0x02
    38ae:	93 81       	ldd	r25, Z+3	; 0x03
    38b0:	20 e0       	ldi	r18, 0x00	; 0
    38b2:	3f ef       	ldi	r19, 0xFF	; 255
    38b4:	4f e7       	ldi	r20, 0x7F	; 127
    38b6:	57 e4       	ldi	r21, 0x47	; 71
    38b8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    38bc:	18 16       	cp	r1, r24
    38be:	0c f0       	brlt	.+2      	; 0x38c2 <Forward+0x14e2>
    38c0:	43 c0       	rjmp	.+134    	; 0x3948 <Forward+0x1568>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38c2:	fe 01       	movw	r30, r28
    38c4:	e9 53       	subi	r30, 0x39	; 57
    38c6:	fd 4f       	sbci	r31, 0xFD	; 253
    38c8:	60 81       	ld	r22, Z
    38ca:	71 81       	ldd	r23, Z+1	; 0x01
    38cc:	82 81       	ldd	r24, Z+2	; 0x02
    38ce:	93 81       	ldd	r25, Z+3	; 0x03
    38d0:	20 e0       	ldi	r18, 0x00	; 0
    38d2:	30 e0       	ldi	r19, 0x00	; 0
    38d4:	40 e2       	ldi	r20, 0x20	; 32
    38d6:	51 e4       	ldi	r21, 0x41	; 65
    38d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    38dc:	dc 01       	movw	r26, r24
    38de:	cb 01       	movw	r24, r22
    38e0:	8e 01       	movw	r16, r28
    38e2:	0f 53       	subi	r16, 0x3F	; 63
    38e4:	1d 4f       	sbci	r17, 0xFD	; 253
    38e6:	bc 01       	movw	r22, r24
    38e8:	cd 01       	movw	r24, r26
    38ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    38ee:	dc 01       	movw	r26, r24
    38f0:	cb 01       	movw	r24, r22
    38f2:	f8 01       	movw	r30, r16
    38f4:	91 83       	std	Z+1, r25	; 0x01
    38f6:	80 83       	st	Z, r24
    38f8:	1f c0       	rjmp	.+62     	; 0x3938 <Forward+0x1558>
    38fa:	fe 01       	movw	r30, r28
    38fc:	e1 54       	subi	r30, 0x41	; 65
    38fe:	fd 4f       	sbci	r31, 0xFD	; 253
    3900:	80 e9       	ldi	r24, 0x90	; 144
    3902:	91 e0       	ldi	r25, 0x01	; 1
    3904:	91 83       	std	Z+1, r25	; 0x01
    3906:	80 83       	st	Z, r24
    3908:	fe 01       	movw	r30, r28
    390a:	e1 54       	subi	r30, 0x41	; 65
    390c:	fd 4f       	sbci	r31, 0xFD	; 253
    390e:	80 81       	ld	r24, Z
    3910:	91 81       	ldd	r25, Z+1	; 0x01
    3912:	01 97       	sbiw	r24, 0x01	; 1
    3914:	f1 f7       	brne	.-4      	; 0x3912 <Forward+0x1532>
    3916:	fe 01       	movw	r30, r28
    3918:	e1 54       	subi	r30, 0x41	; 65
    391a:	fd 4f       	sbci	r31, 0xFD	; 253
    391c:	91 83       	std	Z+1, r25	; 0x01
    391e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3920:	de 01       	movw	r26, r28
    3922:	af 53       	subi	r26, 0x3F	; 63
    3924:	bd 4f       	sbci	r27, 0xFD	; 253
    3926:	fe 01       	movw	r30, r28
    3928:	ef 53       	subi	r30, 0x3F	; 63
    392a:	fd 4f       	sbci	r31, 0xFD	; 253
    392c:	80 81       	ld	r24, Z
    392e:	91 81       	ldd	r25, Z+1	; 0x01
    3930:	01 97       	sbiw	r24, 0x01	; 1
    3932:	11 96       	adiw	r26, 0x01	; 1
    3934:	9c 93       	st	X, r25
    3936:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3938:	fe 01       	movw	r30, r28
    393a:	ef 53       	subi	r30, 0x3F	; 63
    393c:	fd 4f       	sbci	r31, 0xFD	; 253
    393e:	80 81       	ld	r24, Z
    3940:	91 81       	ldd	r25, Z+1	; 0x01
    3942:	00 97       	sbiw	r24, 0x00	; 0
    3944:	d1 f6       	brne	.-76     	; 0x38fa <Forward+0x151a>
    3946:	27 c0       	rjmp	.+78     	; 0x3996 <Forward+0x15b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3948:	8e 01       	movw	r16, r28
    394a:	0f 53       	subi	r16, 0x3F	; 63
    394c:	1d 4f       	sbci	r17, 0xFD	; 253
    394e:	fe 01       	movw	r30, r28
    3950:	ed 53       	subi	r30, 0x3D	; 61
    3952:	fd 4f       	sbci	r31, 0xFD	; 253
    3954:	60 81       	ld	r22, Z
    3956:	71 81       	ldd	r23, Z+1	; 0x01
    3958:	82 81       	ldd	r24, Z+2	; 0x02
    395a:	93 81       	ldd	r25, Z+3	; 0x03
    395c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3960:	dc 01       	movw	r26, r24
    3962:	cb 01       	movw	r24, r22
    3964:	f8 01       	movw	r30, r16
    3966:	91 83       	std	Z+1, r25	; 0x01
    3968:	80 83       	st	Z, r24
    396a:	de 01       	movw	r26, r28
    396c:	a3 54       	subi	r26, 0x43	; 67
    396e:	bd 4f       	sbci	r27, 0xFD	; 253
    3970:	fe 01       	movw	r30, r28
    3972:	ef 53       	subi	r30, 0x3F	; 63
    3974:	fd 4f       	sbci	r31, 0xFD	; 253
    3976:	80 81       	ld	r24, Z
    3978:	91 81       	ldd	r25, Z+1	; 0x01
    397a:	8d 93       	st	X+, r24
    397c:	9c 93       	st	X, r25
    397e:	fe 01       	movw	r30, r28
    3980:	e3 54       	subi	r30, 0x43	; 67
    3982:	fd 4f       	sbci	r31, 0xFD	; 253
    3984:	80 81       	ld	r24, Z
    3986:	91 81       	ldd	r25, Z+1	; 0x01
    3988:	01 97       	sbiw	r24, 0x01	; 1
    398a:	f1 f7       	brne	.-4      	; 0x3988 <Forward+0x15a8>
    398c:	fe 01       	movw	r30, r28
    398e:	e3 54       	subi	r30, 0x43	; 67
    3990:	fd 4f       	sbci	r31, 0xFD	; 253
    3992:	91 83       	std	Z+1, r25	; 0x01
    3994:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POS7N;
    3996:	8e e0       	ldi	r24, 0x0E	; 14
    3998:	80 93 6b 00 	sts	0x006B, r24
    399c:	fe 01       	movw	r30, r28
    399e:	e7 54       	subi	r30, 0x47	; 71
    39a0:	fd 4f       	sbci	r31, 0xFD	; 253
    39a2:	80 e0       	ldi	r24, 0x00	; 0
    39a4:	90 e0       	ldi	r25, 0x00	; 0
    39a6:	ac e8       	ldi	r26, 0x8C	; 140
    39a8:	b2 e4       	ldi	r27, 0x42	; 66
    39aa:	80 83       	st	Z, r24
    39ac:	91 83       	std	Z+1, r25	; 0x01
    39ae:	a2 83       	std	Z+2, r26	; 0x02
    39b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39b2:	8e 01       	movw	r16, r28
    39b4:	0b 54       	subi	r16, 0x4B	; 75
    39b6:	1d 4f       	sbci	r17, 0xFD	; 253
    39b8:	fe 01       	movw	r30, r28
    39ba:	e7 54       	subi	r30, 0x47	; 71
    39bc:	fd 4f       	sbci	r31, 0xFD	; 253
    39be:	60 81       	ld	r22, Z
    39c0:	71 81       	ldd	r23, Z+1	; 0x01
    39c2:	82 81       	ldd	r24, Z+2	; 0x02
    39c4:	93 81       	ldd	r25, Z+3	; 0x03
    39c6:	20 e0       	ldi	r18, 0x00	; 0
    39c8:	30 e0       	ldi	r19, 0x00	; 0
    39ca:	4a e7       	ldi	r20, 0x7A	; 122
    39cc:	55 e4       	ldi	r21, 0x45	; 69
    39ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    39d2:	dc 01       	movw	r26, r24
    39d4:	cb 01       	movw	r24, r22
    39d6:	f8 01       	movw	r30, r16
    39d8:	80 83       	st	Z, r24
    39da:	91 83       	std	Z+1, r25	; 0x01
    39dc:	a2 83       	std	Z+2, r26	; 0x02
    39de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39e0:	fe 01       	movw	r30, r28
    39e2:	eb 54       	subi	r30, 0x4B	; 75
    39e4:	fd 4f       	sbci	r31, 0xFD	; 253
    39e6:	60 81       	ld	r22, Z
    39e8:	71 81       	ldd	r23, Z+1	; 0x01
    39ea:	82 81       	ldd	r24, Z+2	; 0x02
    39ec:	93 81       	ldd	r25, Z+3	; 0x03
    39ee:	20 e0       	ldi	r18, 0x00	; 0
    39f0:	30 e0       	ldi	r19, 0x00	; 0
    39f2:	40 e8       	ldi	r20, 0x80	; 128
    39f4:	5f e3       	ldi	r21, 0x3F	; 63
    39f6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    39fa:	88 23       	and	r24, r24
    39fc:	44 f4       	brge	.+16     	; 0x3a0e <Forward+0x162e>
		__ticks = 1;
    39fe:	fe 01       	movw	r30, r28
    3a00:	ed 54       	subi	r30, 0x4D	; 77
    3a02:	fd 4f       	sbci	r31, 0xFD	; 253
    3a04:	81 e0       	ldi	r24, 0x01	; 1
    3a06:	90 e0       	ldi	r25, 0x00	; 0
    3a08:	91 83       	std	Z+1, r25	; 0x01
    3a0a:	80 83       	st	Z, r24
    3a0c:	64 c0       	rjmp	.+200    	; 0x3ad6 <Forward+0x16f6>
	else if (__tmp > 65535)
    3a0e:	fe 01       	movw	r30, r28
    3a10:	eb 54       	subi	r30, 0x4B	; 75
    3a12:	fd 4f       	sbci	r31, 0xFD	; 253
    3a14:	60 81       	ld	r22, Z
    3a16:	71 81       	ldd	r23, Z+1	; 0x01
    3a18:	82 81       	ldd	r24, Z+2	; 0x02
    3a1a:	93 81       	ldd	r25, Z+3	; 0x03
    3a1c:	20 e0       	ldi	r18, 0x00	; 0
    3a1e:	3f ef       	ldi	r19, 0xFF	; 255
    3a20:	4f e7       	ldi	r20, 0x7F	; 127
    3a22:	57 e4       	ldi	r21, 0x47	; 71
    3a24:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3a28:	18 16       	cp	r1, r24
    3a2a:	0c f0       	brlt	.+2      	; 0x3a2e <Forward+0x164e>
    3a2c:	43 c0       	rjmp	.+134    	; 0x3ab4 <Forward+0x16d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a2e:	fe 01       	movw	r30, r28
    3a30:	e7 54       	subi	r30, 0x47	; 71
    3a32:	fd 4f       	sbci	r31, 0xFD	; 253
    3a34:	60 81       	ld	r22, Z
    3a36:	71 81       	ldd	r23, Z+1	; 0x01
    3a38:	82 81       	ldd	r24, Z+2	; 0x02
    3a3a:	93 81       	ldd	r25, Z+3	; 0x03
    3a3c:	20 e0       	ldi	r18, 0x00	; 0
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	40 e2       	ldi	r20, 0x20	; 32
    3a42:	51 e4       	ldi	r21, 0x41	; 65
    3a44:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3a48:	dc 01       	movw	r26, r24
    3a4a:	cb 01       	movw	r24, r22
    3a4c:	8e 01       	movw	r16, r28
    3a4e:	0d 54       	subi	r16, 0x4D	; 77
    3a50:	1d 4f       	sbci	r17, 0xFD	; 253
    3a52:	bc 01       	movw	r22, r24
    3a54:	cd 01       	movw	r24, r26
    3a56:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3a5a:	dc 01       	movw	r26, r24
    3a5c:	cb 01       	movw	r24, r22
    3a5e:	f8 01       	movw	r30, r16
    3a60:	91 83       	std	Z+1, r25	; 0x01
    3a62:	80 83       	st	Z, r24
    3a64:	1f c0       	rjmp	.+62     	; 0x3aa4 <Forward+0x16c4>
    3a66:	fe 01       	movw	r30, r28
    3a68:	ef 54       	subi	r30, 0x4F	; 79
    3a6a:	fd 4f       	sbci	r31, 0xFD	; 253
    3a6c:	80 e9       	ldi	r24, 0x90	; 144
    3a6e:	91 e0       	ldi	r25, 0x01	; 1
    3a70:	91 83       	std	Z+1, r25	; 0x01
    3a72:	80 83       	st	Z, r24
    3a74:	fe 01       	movw	r30, r28
    3a76:	ef 54       	subi	r30, 0x4F	; 79
    3a78:	fd 4f       	sbci	r31, 0xFD	; 253
    3a7a:	80 81       	ld	r24, Z
    3a7c:	91 81       	ldd	r25, Z+1	; 0x01
    3a7e:	01 97       	sbiw	r24, 0x01	; 1
    3a80:	f1 f7       	brne	.-4      	; 0x3a7e <Forward+0x169e>
    3a82:	fe 01       	movw	r30, r28
    3a84:	ef 54       	subi	r30, 0x4F	; 79
    3a86:	fd 4f       	sbci	r31, 0xFD	; 253
    3a88:	91 83       	std	Z+1, r25	; 0x01
    3a8a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a8c:	de 01       	movw	r26, r28
    3a8e:	ad 54       	subi	r26, 0x4D	; 77
    3a90:	bd 4f       	sbci	r27, 0xFD	; 253
    3a92:	fe 01       	movw	r30, r28
    3a94:	ed 54       	subi	r30, 0x4D	; 77
    3a96:	fd 4f       	sbci	r31, 0xFD	; 253
    3a98:	80 81       	ld	r24, Z
    3a9a:	91 81       	ldd	r25, Z+1	; 0x01
    3a9c:	01 97       	sbiw	r24, 0x01	; 1
    3a9e:	11 96       	adiw	r26, 0x01	; 1
    3aa0:	9c 93       	st	X, r25
    3aa2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	ed 54       	subi	r30, 0x4D	; 77
    3aa8:	fd 4f       	sbci	r31, 0xFD	; 253
    3aaa:	80 81       	ld	r24, Z
    3aac:	91 81       	ldd	r25, Z+1	; 0x01
    3aae:	00 97       	sbiw	r24, 0x00	; 0
    3ab0:	d1 f6       	brne	.-76     	; 0x3a66 <Forward+0x1686>
    3ab2:	27 c0       	rjmp	.+78     	; 0x3b02 <Forward+0x1722>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ab4:	8e 01       	movw	r16, r28
    3ab6:	0d 54       	subi	r16, 0x4D	; 77
    3ab8:	1d 4f       	sbci	r17, 0xFD	; 253
    3aba:	fe 01       	movw	r30, r28
    3abc:	eb 54       	subi	r30, 0x4B	; 75
    3abe:	fd 4f       	sbci	r31, 0xFD	; 253
    3ac0:	60 81       	ld	r22, Z
    3ac2:	71 81       	ldd	r23, Z+1	; 0x01
    3ac4:	82 81       	ldd	r24, Z+2	; 0x02
    3ac6:	93 81       	ldd	r25, Z+3	; 0x03
    3ac8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3acc:	dc 01       	movw	r26, r24
    3ace:	cb 01       	movw	r24, r22
    3ad0:	f8 01       	movw	r30, r16
    3ad2:	91 83       	std	Z+1, r25	; 0x01
    3ad4:	80 83       	st	Z, r24
    3ad6:	de 01       	movw	r26, r28
    3ad8:	a1 55       	subi	r26, 0x51	; 81
    3ada:	bd 4f       	sbci	r27, 0xFD	; 253
    3adc:	fe 01       	movw	r30, r28
    3ade:	ed 54       	subi	r30, 0x4D	; 77
    3ae0:	fd 4f       	sbci	r31, 0xFD	; 253
    3ae2:	80 81       	ld	r24, Z
    3ae4:	91 81       	ldd	r25, Z+1	; 0x01
    3ae6:	8d 93       	st	X+, r24
    3ae8:	9c 93       	st	X, r25
    3aea:	fe 01       	movw	r30, r28
    3aec:	e1 55       	subi	r30, 0x51	; 81
    3aee:	fd 4f       	sbci	r31, 0xFD	; 253
    3af0:	80 81       	ld	r24, Z
    3af2:	91 81       	ldd	r25, Z+1	; 0x01
    3af4:	01 97       	sbiw	r24, 0x01	; 1
    3af6:	f1 f7       	brne	.-4      	; 0x3af4 <Forward+0x1714>
    3af8:	fe 01       	movw	r30, r28
    3afa:	e1 55       	subi	r30, 0x51	; 81
    3afc:	fd 4f       	sbci	r31, 0xFD	; 253
    3afe:	91 83       	std	Z+1, r25	; 0x01
    3b00:	80 83       	st	Z, r24
	_delay_ms(70);
	angle3 = POS8N;
    3b02:	8f e0       	ldi	r24, 0x0F	; 15
    3b04:	80 93 6b 00 	sts	0x006B, r24

	angle2 = POSN3;
    3b08:	8a e0       	ldi	r24, 0x0A	; 10
    3b0a:	80 93 6a 00 	sts	0x006A, r24
    3b0e:	fe 01       	movw	r30, r28
    3b10:	e5 55       	subi	r30, 0x55	; 85
    3b12:	fd 4f       	sbci	r31, 0xFD	; 253
    3b14:	80 e0       	ldi	r24, 0x00	; 0
    3b16:	90 e0       	ldi	r25, 0x00	; 0
    3b18:	ac e8       	ldi	r26, 0x8C	; 140
    3b1a:	b2 e4       	ldi	r27, 0x42	; 66
    3b1c:	80 83       	st	Z, r24
    3b1e:	91 83       	std	Z+1, r25	; 0x01
    3b20:	a2 83       	std	Z+2, r26	; 0x02
    3b22:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b24:	8e 01       	movw	r16, r28
    3b26:	09 55       	subi	r16, 0x59	; 89
    3b28:	1d 4f       	sbci	r17, 0xFD	; 253
    3b2a:	fe 01       	movw	r30, r28
    3b2c:	e5 55       	subi	r30, 0x55	; 85
    3b2e:	fd 4f       	sbci	r31, 0xFD	; 253
    3b30:	60 81       	ld	r22, Z
    3b32:	71 81       	ldd	r23, Z+1	; 0x01
    3b34:	82 81       	ldd	r24, Z+2	; 0x02
    3b36:	93 81       	ldd	r25, Z+3	; 0x03
    3b38:	20 e0       	ldi	r18, 0x00	; 0
    3b3a:	30 e0       	ldi	r19, 0x00	; 0
    3b3c:	4a e7       	ldi	r20, 0x7A	; 122
    3b3e:	55 e4       	ldi	r21, 0x45	; 69
    3b40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b44:	dc 01       	movw	r26, r24
    3b46:	cb 01       	movw	r24, r22
    3b48:	f8 01       	movw	r30, r16
    3b4a:	80 83       	st	Z, r24
    3b4c:	91 83       	std	Z+1, r25	; 0x01
    3b4e:	a2 83       	std	Z+2, r26	; 0x02
    3b50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b52:	fe 01       	movw	r30, r28
    3b54:	e9 55       	subi	r30, 0x59	; 89
    3b56:	fd 4f       	sbci	r31, 0xFD	; 253
    3b58:	60 81       	ld	r22, Z
    3b5a:	71 81       	ldd	r23, Z+1	; 0x01
    3b5c:	82 81       	ldd	r24, Z+2	; 0x02
    3b5e:	93 81       	ldd	r25, Z+3	; 0x03
    3b60:	20 e0       	ldi	r18, 0x00	; 0
    3b62:	30 e0       	ldi	r19, 0x00	; 0
    3b64:	40 e8       	ldi	r20, 0x80	; 128
    3b66:	5f e3       	ldi	r21, 0x3F	; 63
    3b68:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3b6c:	88 23       	and	r24, r24
    3b6e:	44 f4       	brge	.+16     	; 0x3b80 <Forward+0x17a0>
		__ticks = 1;
    3b70:	fe 01       	movw	r30, r28
    3b72:	eb 55       	subi	r30, 0x5B	; 91
    3b74:	fd 4f       	sbci	r31, 0xFD	; 253
    3b76:	81 e0       	ldi	r24, 0x01	; 1
    3b78:	90 e0       	ldi	r25, 0x00	; 0
    3b7a:	91 83       	std	Z+1, r25	; 0x01
    3b7c:	80 83       	st	Z, r24
    3b7e:	64 c0       	rjmp	.+200    	; 0x3c48 <Forward+0x1868>
	else if (__tmp > 65535)
    3b80:	fe 01       	movw	r30, r28
    3b82:	e9 55       	subi	r30, 0x59	; 89
    3b84:	fd 4f       	sbci	r31, 0xFD	; 253
    3b86:	60 81       	ld	r22, Z
    3b88:	71 81       	ldd	r23, Z+1	; 0x01
    3b8a:	82 81       	ldd	r24, Z+2	; 0x02
    3b8c:	93 81       	ldd	r25, Z+3	; 0x03
    3b8e:	20 e0       	ldi	r18, 0x00	; 0
    3b90:	3f ef       	ldi	r19, 0xFF	; 255
    3b92:	4f e7       	ldi	r20, 0x7F	; 127
    3b94:	57 e4       	ldi	r21, 0x47	; 71
    3b96:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3b9a:	18 16       	cp	r1, r24
    3b9c:	0c f0       	brlt	.+2      	; 0x3ba0 <Forward+0x17c0>
    3b9e:	43 c0       	rjmp	.+134    	; 0x3c26 <Forward+0x1846>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	e5 55       	subi	r30, 0x55	; 85
    3ba4:	fd 4f       	sbci	r31, 0xFD	; 253
    3ba6:	60 81       	ld	r22, Z
    3ba8:	71 81       	ldd	r23, Z+1	; 0x01
    3baa:	82 81       	ldd	r24, Z+2	; 0x02
    3bac:	93 81       	ldd	r25, Z+3	; 0x03
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	40 e2       	ldi	r20, 0x20	; 32
    3bb4:	51 e4       	ldi	r21, 0x41	; 65
    3bb6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3bba:	dc 01       	movw	r26, r24
    3bbc:	cb 01       	movw	r24, r22
    3bbe:	8e 01       	movw	r16, r28
    3bc0:	0b 55       	subi	r16, 0x5B	; 91
    3bc2:	1d 4f       	sbci	r17, 0xFD	; 253
    3bc4:	bc 01       	movw	r22, r24
    3bc6:	cd 01       	movw	r24, r26
    3bc8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3bcc:	dc 01       	movw	r26, r24
    3bce:	cb 01       	movw	r24, r22
    3bd0:	f8 01       	movw	r30, r16
    3bd2:	91 83       	std	Z+1, r25	; 0x01
    3bd4:	80 83       	st	Z, r24
    3bd6:	1f c0       	rjmp	.+62     	; 0x3c16 <Forward+0x1836>
    3bd8:	fe 01       	movw	r30, r28
    3bda:	ed 55       	subi	r30, 0x5D	; 93
    3bdc:	fd 4f       	sbci	r31, 0xFD	; 253
    3bde:	80 e9       	ldi	r24, 0x90	; 144
    3be0:	91 e0       	ldi	r25, 0x01	; 1
    3be2:	91 83       	std	Z+1, r25	; 0x01
    3be4:	80 83       	st	Z, r24
    3be6:	fe 01       	movw	r30, r28
    3be8:	ed 55       	subi	r30, 0x5D	; 93
    3bea:	fd 4f       	sbci	r31, 0xFD	; 253
    3bec:	80 81       	ld	r24, Z
    3bee:	91 81       	ldd	r25, Z+1	; 0x01
    3bf0:	01 97       	sbiw	r24, 0x01	; 1
    3bf2:	f1 f7       	brne	.-4      	; 0x3bf0 <Forward+0x1810>
    3bf4:	fe 01       	movw	r30, r28
    3bf6:	ed 55       	subi	r30, 0x5D	; 93
    3bf8:	fd 4f       	sbci	r31, 0xFD	; 253
    3bfa:	91 83       	std	Z+1, r25	; 0x01
    3bfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bfe:	de 01       	movw	r26, r28
    3c00:	ab 55       	subi	r26, 0x5B	; 91
    3c02:	bd 4f       	sbci	r27, 0xFD	; 253
    3c04:	fe 01       	movw	r30, r28
    3c06:	eb 55       	subi	r30, 0x5B	; 91
    3c08:	fd 4f       	sbci	r31, 0xFD	; 253
    3c0a:	80 81       	ld	r24, Z
    3c0c:	91 81       	ldd	r25, Z+1	; 0x01
    3c0e:	01 97       	sbiw	r24, 0x01	; 1
    3c10:	11 96       	adiw	r26, 0x01	; 1
    3c12:	9c 93       	st	X, r25
    3c14:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c16:	fe 01       	movw	r30, r28
    3c18:	eb 55       	subi	r30, 0x5B	; 91
    3c1a:	fd 4f       	sbci	r31, 0xFD	; 253
    3c1c:	80 81       	ld	r24, Z
    3c1e:	91 81       	ldd	r25, Z+1	; 0x01
    3c20:	00 97       	sbiw	r24, 0x00	; 0
    3c22:	d1 f6       	brne	.-76     	; 0x3bd8 <Forward+0x17f8>
    3c24:	27 c0       	rjmp	.+78     	; 0x3c74 <Forward+0x1894>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c26:	8e 01       	movw	r16, r28
    3c28:	0b 55       	subi	r16, 0x5B	; 91
    3c2a:	1d 4f       	sbci	r17, 0xFD	; 253
    3c2c:	fe 01       	movw	r30, r28
    3c2e:	e9 55       	subi	r30, 0x59	; 89
    3c30:	fd 4f       	sbci	r31, 0xFD	; 253
    3c32:	60 81       	ld	r22, Z
    3c34:	71 81       	ldd	r23, Z+1	; 0x01
    3c36:	82 81       	ldd	r24, Z+2	; 0x02
    3c38:	93 81       	ldd	r25, Z+3	; 0x03
    3c3a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3c3e:	dc 01       	movw	r26, r24
    3c40:	cb 01       	movw	r24, r22
    3c42:	f8 01       	movw	r30, r16
    3c44:	91 83       	std	Z+1, r25	; 0x01
    3c46:	80 83       	st	Z, r24
    3c48:	de 01       	movw	r26, r28
    3c4a:	af 55       	subi	r26, 0x5F	; 95
    3c4c:	bd 4f       	sbci	r27, 0xFD	; 253
    3c4e:	fe 01       	movw	r30, r28
    3c50:	eb 55       	subi	r30, 0x5B	; 91
    3c52:	fd 4f       	sbci	r31, 0xFD	; 253
    3c54:	80 81       	ld	r24, Z
    3c56:	91 81       	ldd	r25, Z+1	; 0x01
    3c58:	8d 93       	st	X+, r24
    3c5a:	9c 93       	st	X, r25
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	ef 55       	subi	r30, 0x5F	; 95
    3c60:	fd 4f       	sbci	r31, 0xFD	; 253
    3c62:	80 81       	ld	r24, Z
    3c64:	91 81       	ldd	r25, Z+1	; 0x01
    3c66:	01 97       	sbiw	r24, 0x01	; 1
    3c68:	f1 f7       	brne	.-4      	; 0x3c66 <Forward+0x1886>
    3c6a:	fe 01       	movw	r30, r28
    3c6c:	ef 55       	subi	r30, 0x5F	; 95
    3c6e:	fd 4f       	sbci	r31, 0xFD	; 253
    3c70:	91 83       	std	Z+1, r25	; 0x01
    3c72:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = POSN4;
    3c74:	8b e0       	ldi	r24, 0x0B	; 11
    3c76:	80 93 6a 00 	sts	0x006A, r24
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	e3 56       	subi	r30, 0x63	; 99
    3c7e:	fd 4f       	sbci	r31, 0xFD	; 253
    3c80:	80 e0       	ldi	r24, 0x00	; 0
    3c82:	90 e0       	ldi	r25, 0x00	; 0
    3c84:	ac e8       	ldi	r26, 0x8C	; 140
    3c86:	b2 e4       	ldi	r27, 0x42	; 66
    3c88:	80 83       	st	Z, r24
    3c8a:	91 83       	std	Z+1, r25	; 0x01
    3c8c:	a2 83       	std	Z+2, r26	; 0x02
    3c8e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c90:	8e 01       	movw	r16, r28
    3c92:	07 56       	subi	r16, 0x67	; 103
    3c94:	1d 4f       	sbci	r17, 0xFD	; 253
    3c96:	fe 01       	movw	r30, r28
    3c98:	e3 56       	subi	r30, 0x63	; 99
    3c9a:	fd 4f       	sbci	r31, 0xFD	; 253
    3c9c:	60 81       	ld	r22, Z
    3c9e:	71 81       	ldd	r23, Z+1	; 0x01
    3ca0:	82 81       	ldd	r24, Z+2	; 0x02
    3ca2:	93 81       	ldd	r25, Z+3	; 0x03
    3ca4:	20 e0       	ldi	r18, 0x00	; 0
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	4a e7       	ldi	r20, 0x7A	; 122
    3caa:	55 e4       	ldi	r21, 0x45	; 69
    3cac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3cb0:	dc 01       	movw	r26, r24
    3cb2:	cb 01       	movw	r24, r22
    3cb4:	f8 01       	movw	r30, r16
    3cb6:	80 83       	st	Z, r24
    3cb8:	91 83       	std	Z+1, r25	; 0x01
    3cba:	a2 83       	std	Z+2, r26	; 0x02
    3cbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3cbe:	fe 01       	movw	r30, r28
    3cc0:	e7 56       	subi	r30, 0x67	; 103
    3cc2:	fd 4f       	sbci	r31, 0xFD	; 253
    3cc4:	60 81       	ld	r22, Z
    3cc6:	71 81       	ldd	r23, Z+1	; 0x01
    3cc8:	82 81       	ldd	r24, Z+2	; 0x02
    3cca:	93 81       	ldd	r25, Z+3	; 0x03
    3ccc:	20 e0       	ldi	r18, 0x00	; 0
    3cce:	30 e0       	ldi	r19, 0x00	; 0
    3cd0:	40 e8       	ldi	r20, 0x80	; 128
    3cd2:	5f e3       	ldi	r21, 0x3F	; 63
    3cd4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3cd8:	88 23       	and	r24, r24
    3cda:	44 f4       	brge	.+16     	; 0x3cec <Forward+0x190c>
		__ticks = 1;
    3cdc:	fe 01       	movw	r30, r28
    3cde:	e9 56       	subi	r30, 0x69	; 105
    3ce0:	fd 4f       	sbci	r31, 0xFD	; 253
    3ce2:	81 e0       	ldi	r24, 0x01	; 1
    3ce4:	90 e0       	ldi	r25, 0x00	; 0
    3ce6:	91 83       	std	Z+1, r25	; 0x01
    3ce8:	80 83       	st	Z, r24
    3cea:	64 c0       	rjmp	.+200    	; 0x3db4 <Forward+0x19d4>
	else if (__tmp > 65535)
    3cec:	fe 01       	movw	r30, r28
    3cee:	e7 56       	subi	r30, 0x67	; 103
    3cf0:	fd 4f       	sbci	r31, 0xFD	; 253
    3cf2:	60 81       	ld	r22, Z
    3cf4:	71 81       	ldd	r23, Z+1	; 0x01
    3cf6:	82 81       	ldd	r24, Z+2	; 0x02
    3cf8:	93 81       	ldd	r25, Z+3	; 0x03
    3cfa:	20 e0       	ldi	r18, 0x00	; 0
    3cfc:	3f ef       	ldi	r19, 0xFF	; 255
    3cfe:	4f e7       	ldi	r20, 0x7F	; 127
    3d00:	57 e4       	ldi	r21, 0x47	; 71
    3d02:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3d06:	18 16       	cp	r1, r24
    3d08:	0c f0       	brlt	.+2      	; 0x3d0c <Forward+0x192c>
    3d0a:	43 c0       	rjmp	.+134    	; 0x3d92 <Forward+0x19b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d0c:	fe 01       	movw	r30, r28
    3d0e:	e3 56       	subi	r30, 0x63	; 99
    3d10:	fd 4f       	sbci	r31, 0xFD	; 253
    3d12:	60 81       	ld	r22, Z
    3d14:	71 81       	ldd	r23, Z+1	; 0x01
    3d16:	82 81       	ldd	r24, Z+2	; 0x02
    3d18:	93 81       	ldd	r25, Z+3	; 0x03
    3d1a:	20 e0       	ldi	r18, 0x00	; 0
    3d1c:	30 e0       	ldi	r19, 0x00	; 0
    3d1e:	40 e2       	ldi	r20, 0x20	; 32
    3d20:	51 e4       	ldi	r21, 0x41	; 65
    3d22:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3d26:	dc 01       	movw	r26, r24
    3d28:	cb 01       	movw	r24, r22
    3d2a:	8e 01       	movw	r16, r28
    3d2c:	09 56       	subi	r16, 0x69	; 105
    3d2e:	1d 4f       	sbci	r17, 0xFD	; 253
    3d30:	bc 01       	movw	r22, r24
    3d32:	cd 01       	movw	r24, r26
    3d34:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3d38:	dc 01       	movw	r26, r24
    3d3a:	cb 01       	movw	r24, r22
    3d3c:	f8 01       	movw	r30, r16
    3d3e:	91 83       	std	Z+1, r25	; 0x01
    3d40:	80 83       	st	Z, r24
    3d42:	1f c0       	rjmp	.+62     	; 0x3d82 <Forward+0x19a2>
    3d44:	fe 01       	movw	r30, r28
    3d46:	eb 56       	subi	r30, 0x6B	; 107
    3d48:	fd 4f       	sbci	r31, 0xFD	; 253
    3d4a:	80 e9       	ldi	r24, 0x90	; 144
    3d4c:	91 e0       	ldi	r25, 0x01	; 1
    3d4e:	91 83       	std	Z+1, r25	; 0x01
    3d50:	80 83       	st	Z, r24
    3d52:	fe 01       	movw	r30, r28
    3d54:	eb 56       	subi	r30, 0x6B	; 107
    3d56:	fd 4f       	sbci	r31, 0xFD	; 253
    3d58:	80 81       	ld	r24, Z
    3d5a:	91 81       	ldd	r25, Z+1	; 0x01
    3d5c:	01 97       	sbiw	r24, 0x01	; 1
    3d5e:	f1 f7       	brne	.-4      	; 0x3d5c <Forward+0x197c>
    3d60:	fe 01       	movw	r30, r28
    3d62:	eb 56       	subi	r30, 0x6B	; 107
    3d64:	fd 4f       	sbci	r31, 0xFD	; 253
    3d66:	91 83       	std	Z+1, r25	; 0x01
    3d68:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d6a:	de 01       	movw	r26, r28
    3d6c:	a9 56       	subi	r26, 0x69	; 105
    3d6e:	bd 4f       	sbci	r27, 0xFD	; 253
    3d70:	fe 01       	movw	r30, r28
    3d72:	e9 56       	subi	r30, 0x69	; 105
    3d74:	fd 4f       	sbci	r31, 0xFD	; 253
    3d76:	80 81       	ld	r24, Z
    3d78:	91 81       	ldd	r25, Z+1	; 0x01
    3d7a:	01 97       	sbiw	r24, 0x01	; 1
    3d7c:	11 96       	adiw	r26, 0x01	; 1
    3d7e:	9c 93       	st	X, r25
    3d80:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d82:	fe 01       	movw	r30, r28
    3d84:	e9 56       	subi	r30, 0x69	; 105
    3d86:	fd 4f       	sbci	r31, 0xFD	; 253
    3d88:	80 81       	ld	r24, Z
    3d8a:	91 81       	ldd	r25, Z+1	; 0x01
    3d8c:	00 97       	sbiw	r24, 0x00	; 0
    3d8e:	d1 f6       	brne	.-76     	; 0x3d44 <Forward+0x1964>
    3d90:	27 c0       	rjmp	.+78     	; 0x3de0 <Forward+0x1a00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d92:	8e 01       	movw	r16, r28
    3d94:	09 56       	subi	r16, 0x69	; 105
    3d96:	1d 4f       	sbci	r17, 0xFD	; 253
    3d98:	fe 01       	movw	r30, r28
    3d9a:	e7 56       	subi	r30, 0x67	; 103
    3d9c:	fd 4f       	sbci	r31, 0xFD	; 253
    3d9e:	60 81       	ld	r22, Z
    3da0:	71 81       	ldd	r23, Z+1	; 0x01
    3da2:	82 81       	ldd	r24, Z+2	; 0x02
    3da4:	93 81       	ldd	r25, Z+3	; 0x03
    3da6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3daa:	dc 01       	movw	r26, r24
    3dac:	cb 01       	movw	r24, r22
    3dae:	f8 01       	movw	r30, r16
    3db0:	91 83       	std	Z+1, r25	; 0x01
    3db2:	80 83       	st	Z, r24
    3db4:	de 01       	movw	r26, r28
    3db6:	ad 56       	subi	r26, 0x6D	; 109
    3db8:	bd 4f       	sbci	r27, 0xFD	; 253
    3dba:	fe 01       	movw	r30, r28
    3dbc:	e9 56       	subi	r30, 0x69	; 105
    3dbe:	fd 4f       	sbci	r31, 0xFD	; 253
    3dc0:	80 81       	ld	r24, Z
    3dc2:	91 81       	ldd	r25, Z+1	; 0x01
    3dc4:	8d 93       	st	X+, r24
    3dc6:	9c 93       	st	X, r25
    3dc8:	fe 01       	movw	r30, r28
    3dca:	ed 56       	subi	r30, 0x6D	; 109
    3dcc:	fd 4f       	sbci	r31, 0xFD	; 253
    3dce:	80 81       	ld	r24, Z
    3dd0:	91 81       	ldd	r25, Z+1	; 0x01
    3dd2:	01 97       	sbiw	r24, 0x01	; 1
    3dd4:	f1 f7       	brne	.-4      	; 0x3dd2 <Forward+0x19f2>
    3dd6:	fe 01       	movw	r30, r28
    3dd8:	ed 56       	subi	r30, 0x6D	; 109
    3dda:	fd 4f       	sbci	r31, 0xFD	; 253
    3ddc:	91 83       	std	Z+1, r25	; 0x01
    3dde:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = POSN5;
    3de0:	8c e0       	ldi	r24, 0x0C	; 12
    3de2:	80 93 6a 00 	sts	0x006A, r24
    3de6:	fe 01       	movw	r30, r28
    3de8:	e1 57       	subi	r30, 0x71	; 113
    3dea:	fd 4f       	sbci	r31, 0xFD	; 253
    3dec:	80 e0       	ldi	r24, 0x00	; 0
    3dee:	90 e0       	ldi	r25, 0x00	; 0
    3df0:	ac e8       	ldi	r26, 0x8C	; 140
    3df2:	b2 e4       	ldi	r27, 0x42	; 66
    3df4:	80 83       	st	Z, r24
    3df6:	91 83       	std	Z+1, r25	; 0x01
    3df8:	a2 83       	std	Z+2, r26	; 0x02
    3dfa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dfc:	8e 01       	movw	r16, r28
    3dfe:	05 57       	subi	r16, 0x75	; 117
    3e00:	1d 4f       	sbci	r17, 0xFD	; 253
    3e02:	fe 01       	movw	r30, r28
    3e04:	e1 57       	subi	r30, 0x71	; 113
    3e06:	fd 4f       	sbci	r31, 0xFD	; 253
    3e08:	60 81       	ld	r22, Z
    3e0a:	71 81       	ldd	r23, Z+1	; 0x01
    3e0c:	82 81       	ldd	r24, Z+2	; 0x02
    3e0e:	93 81       	ldd	r25, Z+3	; 0x03
    3e10:	20 e0       	ldi	r18, 0x00	; 0
    3e12:	30 e0       	ldi	r19, 0x00	; 0
    3e14:	4a e7       	ldi	r20, 0x7A	; 122
    3e16:	55 e4       	ldi	r21, 0x45	; 69
    3e18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e1c:	dc 01       	movw	r26, r24
    3e1e:	cb 01       	movw	r24, r22
    3e20:	f8 01       	movw	r30, r16
    3e22:	80 83       	st	Z, r24
    3e24:	91 83       	std	Z+1, r25	; 0x01
    3e26:	a2 83       	std	Z+2, r26	; 0x02
    3e28:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e2a:	fe 01       	movw	r30, r28
    3e2c:	e5 57       	subi	r30, 0x75	; 117
    3e2e:	fd 4f       	sbci	r31, 0xFD	; 253
    3e30:	60 81       	ld	r22, Z
    3e32:	71 81       	ldd	r23, Z+1	; 0x01
    3e34:	82 81       	ldd	r24, Z+2	; 0x02
    3e36:	93 81       	ldd	r25, Z+3	; 0x03
    3e38:	20 e0       	ldi	r18, 0x00	; 0
    3e3a:	30 e0       	ldi	r19, 0x00	; 0
    3e3c:	40 e8       	ldi	r20, 0x80	; 128
    3e3e:	5f e3       	ldi	r21, 0x3F	; 63
    3e40:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3e44:	88 23       	and	r24, r24
    3e46:	44 f4       	brge	.+16     	; 0x3e58 <Forward+0x1a78>
		__ticks = 1;
    3e48:	fe 01       	movw	r30, r28
    3e4a:	e7 57       	subi	r30, 0x77	; 119
    3e4c:	fd 4f       	sbci	r31, 0xFD	; 253
    3e4e:	81 e0       	ldi	r24, 0x01	; 1
    3e50:	90 e0       	ldi	r25, 0x00	; 0
    3e52:	91 83       	std	Z+1, r25	; 0x01
    3e54:	80 83       	st	Z, r24
    3e56:	64 c0       	rjmp	.+200    	; 0x3f20 <Forward+0x1b40>
	else if (__tmp > 65535)
    3e58:	fe 01       	movw	r30, r28
    3e5a:	e5 57       	subi	r30, 0x75	; 117
    3e5c:	fd 4f       	sbci	r31, 0xFD	; 253
    3e5e:	60 81       	ld	r22, Z
    3e60:	71 81       	ldd	r23, Z+1	; 0x01
    3e62:	82 81       	ldd	r24, Z+2	; 0x02
    3e64:	93 81       	ldd	r25, Z+3	; 0x03
    3e66:	20 e0       	ldi	r18, 0x00	; 0
    3e68:	3f ef       	ldi	r19, 0xFF	; 255
    3e6a:	4f e7       	ldi	r20, 0x7F	; 127
    3e6c:	57 e4       	ldi	r21, 0x47	; 71
    3e6e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3e72:	18 16       	cp	r1, r24
    3e74:	0c f0       	brlt	.+2      	; 0x3e78 <Forward+0x1a98>
    3e76:	43 c0       	rjmp	.+134    	; 0x3efe <Forward+0x1b1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e78:	fe 01       	movw	r30, r28
    3e7a:	e1 57       	subi	r30, 0x71	; 113
    3e7c:	fd 4f       	sbci	r31, 0xFD	; 253
    3e7e:	60 81       	ld	r22, Z
    3e80:	71 81       	ldd	r23, Z+1	; 0x01
    3e82:	82 81       	ldd	r24, Z+2	; 0x02
    3e84:	93 81       	ldd	r25, Z+3	; 0x03
    3e86:	20 e0       	ldi	r18, 0x00	; 0
    3e88:	30 e0       	ldi	r19, 0x00	; 0
    3e8a:	40 e2       	ldi	r20, 0x20	; 32
    3e8c:	51 e4       	ldi	r21, 0x41	; 65
    3e8e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e92:	dc 01       	movw	r26, r24
    3e94:	cb 01       	movw	r24, r22
    3e96:	8e 01       	movw	r16, r28
    3e98:	07 57       	subi	r16, 0x77	; 119
    3e9a:	1d 4f       	sbci	r17, 0xFD	; 253
    3e9c:	bc 01       	movw	r22, r24
    3e9e:	cd 01       	movw	r24, r26
    3ea0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ea4:	dc 01       	movw	r26, r24
    3ea6:	cb 01       	movw	r24, r22
    3ea8:	f8 01       	movw	r30, r16
    3eaa:	91 83       	std	Z+1, r25	; 0x01
    3eac:	80 83       	st	Z, r24
    3eae:	1f c0       	rjmp	.+62     	; 0x3eee <Forward+0x1b0e>
    3eb0:	fe 01       	movw	r30, r28
    3eb2:	e9 57       	subi	r30, 0x79	; 121
    3eb4:	fd 4f       	sbci	r31, 0xFD	; 253
    3eb6:	80 e9       	ldi	r24, 0x90	; 144
    3eb8:	91 e0       	ldi	r25, 0x01	; 1
    3eba:	91 83       	std	Z+1, r25	; 0x01
    3ebc:	80 83       	st	Z, r24
    3ebe:	fe 01       	movw	r30, r28
    3ec0:	e9 57       	subi	r30, 0x79	; 121
    3ec2:	fd 4f       	sbci	r31, 0xFD	; 253
    3ec4:	80 81       	ld	r24, Z
    3ec6:	91 81       	ldd	r25, Z+1	; 0x01
    3ec8:	01 97       	sbiw	r24, 0x01	; 1
    3eca:	f1 f7       	brne	.-4      	; 0x3ec8 <Forward+0x1ae8>
    3ecc:	fe 01       	movw	r30, r28
    3ece:	e9 57       	subi	r30, 0x79	; 121
    3ed0:	fd 4f       	sbci	r31, 0xFD	; 253
    3ed2:	91 83       	std	Z+1, r25	; 0x01
    3ed4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ed6:	de 01       	movw	r26, r28
    3ed8:	a7 57       	subi	r26, 0x77	; 119
    3eda:	bd 4f       	sbci	r27, 0xFD	; 253
    3edc:	fe 01       	movw	r30, r28
    3ede:	e7 57       	subi	r30, 0x77	; 119
    3ee0:	fd 4f       	sbci	r31, 0xFD	; 253
    3ee2:	80 81       	ld	r24, Z
    3ee4:	91 81       	ldd	r25, Z+1	; 0x01
    3ee6:	01 97       	sbiw	r24, 0x01	; 1
    3ee8:	11 96       	adiw	r26, 0x01	; 1
    3eea:	9c 93       	st	X, r25
    3eec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3eee:	fe 01       	movw	r30, r28
    3ef0:	e7 57       	subi	r30, 0x77	; 119
    3ef2:	fd 4f       	sbci	r31, 0xFD	; 253
    3ef4:	80 81       	ld	r24, Z
    3ef6:	91 81       	ldd	r25, Z+1	; 0x01
    3ef8:	00 97       	sbiw	r24, 0x00	; 0
    3efa:	d1 f6       	brne	.-76     	; 0x3eb0 <Forward+0x1ad0>
    3efc:	27 c0       	rjmp	.+78     	; 0x3f4c <Forward+0x1b6c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3efe:	8e 01       	movw	r16, r28
    3f00:	07 57       	subi	r16, 0x77	; 119
    3f02:	1d 4f       	sbci	r17, 0xFD	; 253
    3f04:	fe 01       	movw	r30, r28
    3f06:	e5 57       	subi	r30, 0x75	; 117
    3f08:	fd 4f       	sbci	r31, 0xFD	; 253
    3f0a:	60 81       	ld	r22, Z
    3f0c:	71 81       	ldd	r23, Z+1	; 0x01
    3f0e:	82 81       	ldd	r24, Z+2	; 0x02
    3f10:	93 81       	ldd	r25, Z+3	; 0x03
    3f12:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f16:	dc 01       	movw	r26, r24
    3f18:	cb 01       	movw	r24, r22
    3f1a:	f8 01       	movw	r30, r16
    3f1c:	91 83       	std	Z+1, r25	; 0x01
    3f1e:	80 83       	st	Z, r24
    3f20:	de 01       	movw	r26, r28
    3f22:	ab 57       	subi	r26, 0x7B	; 123
    3f24:	bd 4f       	sbci	r27, 0xFD	; 253
    3f26:	fe 01       	movw	r30, r28
    3f28:	e7 57       	subi	r30, 0x77	; 119
    3f2a:	fd 4f       	sbci	r31, 0xFD	; 253
    3f2c:	80 81       	ld	r24, Z
    3f2e:	91 81       	ldd	r25, Z+1	; 0x01
    3f30:	8d 93       	st	X+, r24
    3f32:	9c 93       	st	X, r25
    3f34:	fe 01       	movw	r30, r28
    3f36:	eb 57       	subi	r30, 0x7B	; 123
    3f38:	fd 4f       	sbci	r31, 0xFD	; 253
    3f3a:	80 81       	ld	r24, Z
    3f3c:	91 81       	ldd	r25, Z+1	; 0x01
    3f3e:	01 97       	sbiw	r24, 0x01	; 1
    3f40:	f1 f7       	brne	.-4      	; 0x3f3e <Forward+0x1b5e>
    3f42:	fe 01       	movw	r30, r28
    3f44:	eb 57       	subi	r30, 0x7B	; 123
    3f46:	fd 4f       	sbci	r31, 0xFD	; 253
    3f48:	91 83       	std	Z+1, r25	; 0x01
    3f4a:	80 83       	st	Z, r24
	_delay_ms(70);
	angle2 = NaturalPos;
    3f4c:	8d e0       	ldi	r24, 0x0D	; 13
    3f4e:	80 93 6a 00 	sts	0x006A, r24
    3f52:	fe 01       	movw	r30, r28
    3f54:	ef 57       	subi	r30, 0x7F	; 127
    3f56:	fd 4f       	sbci	r31, 0xFD	; 253
    3f58:	80 e0       	ldi	r24, 0x00	; 0
    3f5a:	90 e0       	ldi	r25, 0x00	; 0
    3f5c:	aa ef       	ldi	r26, 0xFA	; 250
    3f5e:	b3 e4       	ldi	r27, 0x43	; 67
    3f60:	80 83       	st	Z, r24
    3f62:	91 83       	std	Z+1, r25	; 0x01
    3f64:	a2 83       	std	Z+2, r26	; 0x02
    3f66:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f68:	8e 01       	movw	r16, r28
    3f6a:	03 58       	subi	r16, 0x83	; 131
    3f6c:	1d 4f       	sbci	r17, 0xFD	; 253
    3f6e:	fe 01       	movw	r30, r28
    3f70:	ef 57       	subi	r30, 0x7F	; 127
    3f72:	fd 4f       	sbci	r31, 0xFD	; 253
    3f74:	60 81       	ld	r22, Z
    3f76:	71 81       	ldd	r23, Z+1	; 0x01
    3f78:	82 81       	ldd	r24, Z+2	; 0x02
    3f7a:	93 81       	ldd	r25, Z+3	; 0x03
    3f7c:	20 e0       	ldi	r18, 0x00	; 0
    3f7e:	30 e0       	ldi	r19, 0x00	; 0
    3f80:	4a e7       	ldi	r20, 0x7A	; 122
    3f82:	55 e4       	ldi	r21, 0x45	; 69
    3f84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3f88:	dc 01       	movw	r26, r24
    3f8a:	cb 01       	movw	r24, r22
    3f8c:	f8 01       	movw	r30, r16
    3f8e:	80 83       	st	Z, r24
    3f90:	91 83       	std	Z+1, r25	; 0x01
    3f92:	a2 83       	std	Z+2, r26	; 0x02
    3f94:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f96:	fe 01       	movw	r30, r28
    3f98:	e3 58       	subi	r30, 0x83	; 131
    3f9a:	fd 4f       	sbci	r31, 0xFD	; 253
    3f9c:	60 81       	ld	r22, Z
    3f9e:	71 81       	ldd	r23, Z+1	; 0x01
    3fa0:	82 81       	ldd	r24, Z+2	; 0x02
    3fa2:	93 81       	ldd	r25, Z+3	; 0x03
    3fa4:	20 e0       	ldi	r18, 0x00	; 0
    3fa6:	30 e0       	ldi	r19, 0x00	; 0
    3fa8:	40 e8       	ldi	r20, 0x80	; 128
    3faa:	5f e3       	ldi	r21, 0x3F	; 63
    3fac:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3fb0:	88 23       	and	r24, r24
    3fb2:	44 f4       	brge	.+16     	; 0x3fc4 <Forward+0x1be4>
		__ticks = 1;
    3fb4:	fe 01       	movw	r30, r28
    3fb6:	e5 58       	subi	r30, 0x85	; 133
    3fb8:	fd 4f       	sbci	r31, 0xFD	; 253
    3fba:	81 e0       	ldi	r24, 0x01	; 1
    3fbc:	90 e0       	ldi	r25, 0x00	; 0
    3fbe:	91 83       	std	Z+1, r25	; 0x01
    3fc0:	80 83       	st	Z, r24
    3fc2:	64 c0       	rjmp	.+200    	; 0x408c <Forward+0x1cac>
	else if (__tmp > 65535)
    3fc4:	fe 01       	movw	r30, r28
    3fc6:	e3 58       	subi	r30, 0x83	; 131
    3fc8:	fd 4f       	sbci	r31, 0xFD	; 253
    3fca:	60 81       	ld	r22, Z
    3fcc:	71 81       	ldd	r23, Z+1	; 0x01
    3fce:	82 81       	ldd	r24, Z+2	; 0x02
    3fd0:	93 81       	ldd	r25, Z+3	; 0x03
    3fd2:	20 e0       	ldi	r18, 0x00	; 0
    3fd4:	3f ef       	ldi	r19, 0xFF	; 255
    3fd6:	4f e7       	ldi	r20, 0x7F	; 127
    3fd8:	57 e4       	ldi	r21, 0x47	; 71
    3fda:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3fde:	18 16       	cp	r1, r24
    3fe0:	0c f0       	brlt	.+2      	; 0x3fe4 <Forward+0x1c04>
    3fe2:	43 c0       	rjmp	.+134    	; 0x406a <Forward+0x1c8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fe4:	fe 01       	movw	r30, r28
    3fe6:	ef 57       	subi	r30, 0x7F	; 127
    3fe8:	fd 4f       	sbci	r31, 0xFD	; 253
    3fea:	60 81       	ld	r22, Z
    3fec:	71 81       	ldd	r23, Z+1	; 0x01
    3fee:	82 81       	ldd	r24, Z+2	; 0x02
    3ff0:	93 81       	ldd	r25, Z+3	; 0x03
    3ff2:	20 e0       	ldi	r18, 0x00	; 0
    3ff4:	30 e0       	ldi	r19, 0x00	; 0
    3ff6:	40 e2       	ldi	r20, 0x20	; 32
    3ff8:	51 e4       	ldi	r21, 0x41	; 65
    3ffa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3ffe:	dc 01       	movw	r26, r24
    4000:	cb 01       	movw	r24, r22
    4002:	8e 01       	movw	r16, r28
    4004:	05 58       	subi	r16, 0x85	; 133
    4006:	1d 4f       	sbci	r17, 0xFD	; 253
    4008:	bc 01       	movw	r22, r24
    400a:	cd 01       	movw	r24, r26
    400c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4010:	dc 01       	movw	r26, r24
    4012:	cb 01       	movw	r24, r22
    4014:	f8 01       	movw	r30, r16
    4016:	91 83       	std	Z+1, r25	; 0x01
    4018:	80 83       	st	Z, r24
    401a:	1f c0       	rjmp	.+62     	; 0x405a <Forward+0x1c7a>
    401c:	fe 01       	movw	r30, r28
    401e:	e7 58       	subi	r30, 0x87	; 135
    4020:	fd 4f       	sbci	r31, 0xFD	; 253
    4022:	80 e9       	ldi	r24, 0x90	; 144
    4024:	91 e0       	ldi	r25, 0x01	; 1
    4026:	91 83       	std	Z+1, r25	; 0x01
    4028:	80 83       	st	Z, r24
    402a:	fe 01       	movw	r30, r28
    402c:	e7 58       	subi	r30, 0x87	; 135
    402e:	fd 4f       	sbci	r31, 0xFD	; 253
    4030:	80 81       	ld	r24, Z
    4032:	91 81       	ldd	r25, Z+1	; 0x01
    4034:	01 97       	sbiw	r24, 0x01	; 1
    4036:	f1 f7       	brne	.-4      	; 0x4034 <Forward+0x1c54>
    4038:	fe 01       	movw	r30, r28
    403a:	e7 58       	subi	r30, 0x87	; 135
    403c:	fd 4f       	sbci	r31, 0xFD	; 253
    403e:	91 83       	std	Z+1, r25	; 0x01
    4040:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4042:	de 01       	movw	r26, r28
    4044:	a5 58       	subi	r26, 0x85	; 133
    4046:	bd 4f       	sbci	r27, 0xFD	; 253
    4048:	fe 01       	movw	r30, r28
    404a:	e5 58       	subi	r30, 0x85	; 133
    404c:	fd 4f       	sbci	r31, 0xFD	; 253
    404e:	80 81       	ld	r24, Z
    4050:	91 81       	ldd	r25, Z+1	; 0x01
    4052:	01 97       	sbiw	r24, 0x01	; 1
    4054:	11 96       	adiw	r26, 0x01	; 1
    4056:	9c 93       	st	X, r25
    4058:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    405a:	fe 01       	movw	r30, r28
    405c:	e5 58       	subi	r30, 0x85	; 133
    405e:	fd 4f       	sbci	r31, 0xFD	; 253
    4060:	80 81       	ld	r24, Z
    4062:	91 81       	ldd	r25, Z+1	; 0x01
    4064:	00 97       	sbiw	r24, 0x00	; 0
    4066:	d1 f6       	brne	.-76     	; 0x401c <Forward+0x1c3c>
    4068:	27 c0       	rjmp	.+78     	; 0x40b8 <Forward+0x1cd8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    406a:	8e 01       	movw	r16, r28
    406c:	05 58       	subi	r16, 0x85	; 133
    406e:	1d 4f       	sbci	r17, 0xFD	; 253
    4070:	fe 01       	movw	r30, r28
    4072:	e3 58       	subi	r30, 0x83	; 131
    4074:	fd 4f       	sbci	r31, 0xFD	; 253
    4076:	60 81       	ld	r22, Z
    4078:	71 81       	ldd	r23, Z+1	; 0x01
    407a:	82 81       	ldd	r24, Z+2	; 0x02
    407c:	93 81       	ldd	r25, Z+3	; 0x03
    407e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4082:	dc 01       	movw	r26, r24
    4084:	cb 01       	movw	r24, r22
    4086:	f8 01       	movw	r30, r16
    4088:	91 83       	std	Z+1, r25	; 0x01
    408a:	80 83       	st	Z, r24
    408c:	de 01       	movw	r26, r28
    408e:	a9 58       	subi	r26, 0x89	; 137
    4090:	bd 4f       	sbci	r27, 0xFD	; 253
    4092:	fe 01       	movw	r30, r28
    4094:	e5 58       	subi	r30, 0x85	; 133
    4096:	fd 4f       	sbci	r31, 0xFD	; 253
    4098:	80 81       	ld	r24, Z
    409a:	91 81       	ldd	r25, Z+1	; 0x01
    409c:	8d 93       	st	X+, r24
    409e:	9c 93       	st	X, r25
    40a0:	fe 01       	movw	r30, r28
    40a2:	e9 58       	subi	r30, 0x89	; 137
    40a4:	fd 4f       	sbci	r31, 0xFD	; 253
    40a6:	80 81       	ld	r24, Z
    40a8:	91 81       	ldd	r25, Z+1	; 0x01
    40aa:	01 97       	sbiw	r24, 0x01	; 1
    40ac:	f1 f7       	brne	.-4      	; 0x40aa <Forward+0x1cca>
    40ae:	fe 01       	movw	r30, r28
    40b0:	e9 58       	subi	r30, 0x89	; 137
    40b2:	fd 4f       	sbci	r31, 0xFD	; 253
    40b4:	91 83       	std	Z+1, r25	; 0x01
    40b6:	80 83       	st	Z, r24

	_delay_ms(500);

	/*leg 4*/
	angle11 = POSN5;
    40b8:	8c e0       	ldi	r24, 0x0C	; 12
    40ba:	80 93 73 00 	sts	0x0073, r24
    40be:	fe 01       	movw	r30, r28
    40c0:	ed 58       	subi	r30, 0x8D	; 141
    40c2:	fd 4f       	sbci	r31, 0xFD	; 253
    40c4:	80 e0       	ldi	r24, 0x00	; 0
    40c6:	90 e0       	ldi	r25, 0x00	; 0
    40c8:	ac e8       	ldi	r26, 0x8C	; 140
    40ca:	b2 e4       	ldi	r27, 0x42	; 66
    40cc:	80 83       	st	Z, r24
    40ce:	91 83       	std	Z+1, r25	; 0x01
    40d0:	a2 83       	std	Z+2, r26	; 0x02
    40d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40d4:	8e 01       	movw	r16, r28
    40d6:	01 59       	subi	r16, 0x91	; 145
    40d8:	1d 4f       	sbci	r17, 0xFD	; 253
    40da:	fe 01       	movw	r30, r28
    40dc:	ed 58       	subi	r30, 0x8D	; 141
    40de:	fd 4f       	sbci	r31, 0xFD	; 253
    40e0:	60 81       	ld	r22, Z
    40e2:	71 81       	ldd	r23, Z+1	; 0x01
    40e4:	82 81       	ldd	r24, Z+2	; 0x02
    40e6:	93 81       	ldd	r25, Z+3	; 0x03
    40e8:	20 e0       	ldi	r18, 0x00	; 0
    40ea:	30 e0       	ldi	r19, 0x00	; 0
    40ec:	4a e7       	ldi	r20, 0x7A	; 122
    40ee:	55 e4       	ldi	r21, 0x45	; 69
    40f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    40f4:	dc 01       	movw	r26, r24
    40f6:	cb 01       	movw	r24, r22
    40f8:	f8 01       	movw	r30, r16
    40fa:	80 83       	st	Z, r24
    40fc:	91 83       	std	Z+1, r25	; 0x01
    40fe:	a2 83       	std	Z+2, r26	; 0x02
    4100:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4102:	fe 01       	movw	r30, r28
    4104:	e1 59       	subi	r30, 0x91	; 145
    4106:	fd 4f       	sbci	r31, 0xFD	; 253
    4108:	60 81       	ld	r22, Z
    410a:	71 81       	ldd	r23, Z+1	; 0x01
    410c:	82 81       	ldd	r24, Z+2	; 0x02
    410e:	93 81       	ldd	r25, Z+3	; 0x03
    4110:	20 e0       	ldi	r18, 0x00	; 0
    4112:	30 e0       	ldi	r19, 0x00	; 0
    4114:	40 e8       	ldi	r20, 0x80	; 128
    4116:	5f e3       	ldi	r21, 0x3F	; 63
    4118:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    411c:	88 23       	and	r24, r24
    411e:	44 f4       	brge	.+16     	; 0x4130 <Forward+0x1d50>
		__ticks = 1;
    4120:	fe 01       	movw	r30, r28
    4122:	e3 59       	subi	r30, 0x93	; 147
    4124:	fd 4f       	sbci	r31, 0xFD	; 253
    4126:	81 e0       	ldi	r24, 0x01	; 1
    4128:	90 e0       	ldi	r25, 0x00	; 0
    412a:	91 83       	std	Z+1, r25	; 0x01
    412c:	80 83       	st	Z, r24
    412e:	64 c0       	rjmp	.+200    	; 0x41f8 <Forward+0x1e18>
	else if (__tmp > 65535)
    4130:	fe 01       	movw	r30, r28
    4132:	e1 59       	subi	r30, 0x91	; 145
    4134:	fd 4f       	sbci	r31, 0xFD	; 253
    4136:	60 81       	ld	r22, Z
    4138:	71 81       	ldd	r23, Z+1	; 0x01
    413a:	82 81       	ldd	r24, Z+2	; 0x02
    413c:	93 81       	ldd	r25, Z+3	; 0x03
    413e:	20 e0       	ldi	r18, 0x00	; 0
    4140:	3f ef       	ldi	r19, 0xFF	; 255
    4142:	4f e7       	ldi	r20, 0x7F	; 127
    4144:	57 e4       	ldi	r21, 0x47	; 71
    4146:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    414a:	18 16       	cp	r1, r24
    414c:	0c f0       	brlt	.+2      	; 0x4150 <Forward+0x1d70>
    414e:	43 c0       	rjmp	.+134    	; 0x41d6 <Forward+0x1df6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4150:	fe 01       	movw	r30, r28
    4152:	ed 58       	subi	r30, 0x8D	; 141
    4154:	fd 4f       	sbci	r31, 0xFD	; 253
    4156:	60 81       	ld	r22, Z
    4158:	71 81       	ldd	r23, Z+1	; 0x01
    415a:	82 81       	ldd	r24, Z+2	; 0x02
    415c:	93 81       	ldd	r25, Z+3	; 0x03
    415e:	20 e0       	ldi	r18, 0x00	; 0
    4160:	30 e0       	ldi	r19, 0x00	; 0
    4162:	40 e2       	ldi	r20, 0x20	; 32
    4164:	51 e4       	ldi	r21, 0x41	; 65
    4166:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    416a:	dc 01       	movw	r26, r24
    416c:	cb 01       	movw	r24, r22
    416e:	8e 01       	movw	r16, r28
    4170:	03 59       	subi	r16, 0x93	; 147
    4172:	1d 4f       	sbci	r17, 0xFD	; 253
    4174:	bc 01       	movw	r22, r24
    4176:	cd 01       	movw	r24, r26
    4178:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    417c:	dc 01       	movw	r26, r24
    417e:	cb 01       	movw	r24, r22
    4180:	f8 01       	movw	r30, r16
    4182:	91 83       	std	Z+1, r25	; 0x01
    4184:	80 83       	st	Z, r24
    4186:	1f c0       	rjmp	.+62     	; 0x41c6 <Forward+0x1de6>
    4188:	fe 01       	movw	r30, r28
    418a:	e5 59       	subi	r30, 0x95	; 149
    418c:	fd 4f       	sbci	r31, 0xFD	; 253
    418e:	80 e9       	ldi	r24, 0x90	; 144
    4190:	91 e0       	ldi	r25, 0x01	; 1
    4192:	91 83       	std	Z+1, r25	; 0x01
    4194:	80 83       	st	Z, r24
    4196:	fe 01       	movw	r30, r28
    4198:	e5 59       	subi	r30, 0x95	; 149
    419a:	fd 4f       	sbci	r31, 0xFD	; 253
    419c:	80 81       	ld	r24, Z
    419e:	91 81       	ldd	r25, Z+1	; 0x01
    41a0:	01 97       	sbiw	r24, 0x01	; 1
    41a2:	f1 f7       	brne	.-4      	; 0x41a0 <Forward+0x1dc0>
    41a4:	fe 01       	movw	r30, r28
    41a6:	e5 59       	subi	r30, 0x95	; 149
    41a8:	fd 4f       	sbci	r31, 0xFD	; 253
    41aa:	91 83       	std	Z+1, r25	; 0x01
    41ac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41ae:	de 01       	movw	r26, r28
    41b0:	a3 59       	subi	r26, 0x93	; 147
    41b2:	bd 4f       	sbci	r27, 0xFD	; 253
    41b4:	fe 01       	movw	r30, r28
    41b6:	e3 59       	subi	r30, 0x93	; 147
    41b8:	fd 4f       	sbci	r31, 0xFD	; 253
    41ba:	80 81       	ld	r24, Z
    41bc:	91 81       	ldd	r25, Z+1	; 0x01
    41be:	01 97       	sbiw	r24, 0x01	; 1
    41c0:	11 96       	adiw	r26, 0x01	; 1
    41c2:	9c 93       	st	X, r25
    41c4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41c6:	fe 01       	movw	r30, r28
    41c8:	e3 59       	subi	r30, 0x93	; 147
    41ca:	fd 4f       	sbci	r31, 0xFD	; 253
    41cc:	80 81       	ld	r24, Z
    41ce:	91 81       	ldd	r25, Z+1	; 0x01
    41d0:	00 97       	sbiw	r24, 0x00	; 0
    41d2:	d1 f6       	brne	.-76     	; 0x4188 <Forward+0x1da8>
    41d4:	27 c0       	rjmp	.+78     	; 0x4224 <Forward+0x1e44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41d6:	8e 01       	movw	r16, r28
    41d8:	03 59       	subi	r16, 0x93	; 147
    41da:	1d 4f       	sbci	r17, 0xFD	; 253
    41dc:	fe 01       	movw	r30, r28
    41de:	e1 59       	subi	r30, 0x91	; 145
    41e0:	fd 4f       	sbci	r31, 0xFD	; 253
    41e2:	60 81       	ld	r22, Z
    41e4:	71 81       	ldd	r23, Z+1	; 0x01
    41e6:	82 81       	ldd	r24, Z+2	; 0x02
    41e8:	93 81       	ldd	r25, Z+3	; 0x03
    41ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41ee:	dc 01       	movw	r26, r24
    41f0:	cb 01       	movw	r24, r22
    41f2:	f8 01       	movw	r30, r16
    41f4:	91 83       	std	Z+1, r25	; 0x01
    41f6:	80 83       	st	Z, r24
    41f8:	de 01       	movw	r26, r28
    41fa:	a7 59       	subi	r26, 0x97	; 151
    41fc:	bd 4f       	sbci	r27, 0xFD	; 253
    41fe:	fe 01       	movw	r30, r28
    4200:	e3 59       	subi	r30, 0x93	; 147
    4202:	fd 4f       	sbci	r31, 0xFD	; 253
    4204:	80 81       	ld	r24, Z
    4206:	91 81       	ldd	r25, Z+1	; 0x01
    4208:	8d 93       	st	X+, r24
    420a:	9c 93       	st	X, r25
    420c:	fe 01       	movw	r30, r28
    420e:	e7 59       	subi	r30, 0x97	; 151
    4210:	fd 4f       	sbci	r31, 0xFD	; 253
    4212:	80 81       	ld	r24, Z
    4214:	91 81       	ldd	r25, Z+1	; 0x01
    4216:	01 97       	sbiw	r24, 0x01	; 1
    4218:	f1 f7       	brne	.-4      	; 0x4216 <Forward+0x1e36>
    421a:	fe 01       	movw	r30, r28
    421c:	e7 59       	subi	r30, 0x97	; 151
    421e:	fd 4f       	sbci	r31, 0xFD	; 253
    4220:	91 83       	std	Z+1, r25	; 0x01
    4222:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = POSN4;
    4224:	8b e0       	ldi	r24, 0x0B	; 11
    4226:	80 93 73 00 	sts	0x0073, r24
    422a:	fe 01       	movw	r30, r28
    422c:	eb 59       	subi	r30, 0x9B	; 155
    422e:	fd 4f       	sbci	r31, 0xFD	; 253
    4230:	80 e0       	ldi	r24, 0x00	; 0
    4232:	90 e0       	ldi	r25, 0x00	; 0
    4234:	ac e8       	ldi	r26, 0x8C	; 140
    4236:	b2 e4       	ldi	r27, 0x42	; 66
    4238:	80 83       	st	Z, r24
    423a:	91 83       	std	Z+1, r25	; 0x01
    423c:	a2 83       	std	Z+2, r26	; 0x02
    423e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4240:	8e 01       	movw	r16, r28
    4242:	0f 59       	subi	r16, 0x9F	; 159
    4244:	1d 4f       	sbci	r17, 0xFD	; 253
    4246:	fe 01       	movw	r30, r28
    4248:	eb 59       	subi	r30, 0x9B	; 155
    424a:	fd 4f       	sbci	r31, 0xFD	; 253
    424c:	60 81       	ld	r22, Z
    424e:	71 81       	ldd	r23, Z+1	; 0x01
    4250:	82 81       	ldd	r24, Z+2	; 0x02
    4252:	93 81       	ldd	r25, Z+3	; 0x03
    4254:	20 e0       	ldi	r18, 0x00	; 0
    4256:	30 e0       	ldi	r19, 0x00	; 0
    4258:	4a e7       	ldi	r20, 0x7A	; 122
    425a:	55 e4       	ldi	r21, 0x45	; 69
    425c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4260:	dc 01       	movw	r26, r24
    4262:	cb 01       	movw	r24, r22
    4264:	f8 01       	movw	r30, r16
    4266:	80 83       	st	Z, r24
    4268:	91 83       	std	Z+1, r25	; 0x01
    426a:	a2 83       	std	Z+2, r26	; 0x02
    426c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    426e:	fe 01       	movw	r30, r28
    4270:	ef 59       	subi	r30, 0x9F	; 159
    4272:	fd 4f       	sbci	r31, 0xFD	; 253
    4274:	60 81       	ld	r22, Z
    4276:	71 81       	ldd	r23, Z+1	; 0x01
    4278:	82 81       	ldd	r24, Z+2	; 0x02
    427a:	93 81       	ldd	r25, Z+3	; 0x03
    427c:	20 e0       	ldi	r18, 0x00	; 0
    427e:	30 e0       	ldi	r19, 0x00	; 0
    4280:	40 e8       	ldi	r20, 0x80	; 128
    4282:	5f e3       	ldi	r21, 0x3F	; 63
    4284:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4288:	88 23       	and	r24, r24
    428a:	44 f4       	brge	.+16     	; 0x429c <Forward+0x1ebc>
		__ticks = 1;
    428c:	fe 01       	movw	r30, r28
    428e:	e1 5a       	subi	r30, 0xA1	; 161
    4290:	fd 4f       	sbci	r31, 0xFD	; 253
    4292:	81 e0       	ldi	r24, 0x01	; 1
    4294:	90 e0       	ldi	r25, 0x00	; 0
    4296:	91 83       	std	Z+1, r25	; 0x01
    4298:	80 83       	st	Z, r24
    429a:	64 c0       	rjmp	.+200    	; 0x4364 <Forward+0x1f84>
	else if (__tmp > 65535)
    429c:	fe 01       	movw	r30, r28
    429e:	ef 59       	subi	r30, 0x9F	; 159
    42a0:	fd 4f       	sbci	r31, 0xFD	; 253
    42a2:	60 81       	ld	r22, Z
    42a4:	71 81       	ldd	r23, Z+1	; 0x01
    42a6:	82 81       	ldd	r24, Z+2	; 0x02
    42a8:	93 81       	ldd	r25, Z+3	; 0x03
    42aa:	20 e0       	ldi	r18, 0x00	; 0
    42ac:	3f ef       	ldi	r19, 0xFF	; 255
    42ae:	4f e7       	ldi	r20, 0x7F	; 127
    42b0:	57 e4       	ldi	r21, 0x47	; 71
    42b2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    42b6:	18 16       	cp	r1, r24
    42b8:	0c f0       	brlt	.+2      	; 0x42bc <Forward+0x1edc>
    42ba:	43 c0       	rjmp	.+134    	; 0x4342 <Forward+0x1f62>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42bc:	fe 01       	movw	r30, r28
    42be:	eb 59       	subi	r30, 0x9B	; 155
    42c0:	fd 4f       	sbci	r31, 0xFD	; 253
    42c2:	60 81       	ld	r22, Z
    42c4:	71 81       	ldd	r23, Z+1	; 0x01
    42c6:	82 81       	ldd	r24, Z+2	; 0x02
    42c8:	93 81       	ldd	r25, Z+3	; 0x03
    42ca:	20 e0       	ldi	r18, 0x00	; 0
    42cc:	30 e0       	ldi	r19, 0x00	; 0
    42ce:	40 e2       	ldi	r20, 0x20	; 32
    42d0:	51 e4       	ldi	r21, 0x41	; 65
    42d2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    42d6:	dc 01       	movw	r26, r24
    42d8:	cb 01       	movw	r24, r22
    42da:	8e 01       	movw	r16, r28
    42dc:	01 5a       	subi	r16, 0xA1	; 161
    42de:	1d 4f       	sbci	r17, 0xFD	; 253
    42e0:	bc 01       	movw	r22, r24
    42e2:	cd 01       	movw	r24, r26
    42e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    42e8:	dc 01       	movw	r26, r24
    42ea:	cb 01       	movw	r24, r22
    42ec:	f8 01       	movw	r30, r16
    42ee:	91 83       	std	Z+1, r25	; 0x01
    42f0:	80 83       	st	Z, r24
    42f2:	1f c0       	rjmp	.+62     	; 0x4332 <Forward+0x1f52>
    42f4:	fe 01       	movw	r30, r28
    42f6:	e3 5a       	subi	r30, 0xA3	; 163
    42f8:	fd 4f       	sbci	r31, 0xFD	; 253
    42fa:	80 e9       	ldi	r24, 0x90	; 144
    42fc:	91 e0       	ldi	r25, 0x01	; 1
    42fe:	91 83       	std	Z+1, r25	; 0x01
    4300:	80 83       	st	Z, r24
    4302:	fe 01       	movw	r30, r28
    4304:	e3 5a       	subi	r30, 0xA3	; 163
    4306:	fd 4f       	sbci	r31, 0xFD	; 253
    4308:	80 81       	ld	r24, Z
    430a:	91 81       	ldd	r25, Z+1	; 0x01
    430c:	01 97       	sbiw	r24, 0x01	; 1
    430e:	f1 f7       	brne	.-4      	; 0x430c <Forward+0x1f2c>
    4310:	fe 01       	movw	r30, r28
    4312:	e3 5a       	subi	r30, 0xA3	; 163
    4314:	fd 4f       	sbci	r31, 0xFD	; 253
    4316:	91 83       	std	Z+1, r25	; 0x01
    4318:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    431a:	de 01       	movw	r26, r28
    431c:	a1 5a       	subi	r26, 0xA1	; 161
    431e:	bd 4f       	sbci	r27, 0xFD	; 253
    4320:	fe 01       	movw	r30, r28
    4322:	e1 5a       	subi	r30, 0xA1	; 161
    4324:	fd 4f       	sbci	r31, 0xFD	; 253
    4326:	80 81       	ld	r24, Z
    4328:	91 81       	ldd	r25, Z+1	; 0x01
    432a:	01 97       	sbiw	r24, 0x01	; 1
    432c:	11 96       	adiw	r26, 0x01	; 1
    432e:	9c 93       	st	X, r25
    4330:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4332:	fe 01       	movw	r30, r28
    4334:	e1 5a       	subi	r30, 0xA1	; 161
    4336:	fd 4f       	sbci	r31, 0xFD	; 253
    4338:	80 81       	ld	r24, Z
    433a:	91 81       	ldd	r25, Z+1	; 0x01
    433c:	00 97       	sbiw	r24, 0x00	; 0
    433e:	d1 f6       	brne	.-76     	; 0x42f4 <Forward+0x1f14>
    4340:	27 c0       	rjmp	.+78     	; 0x4390 <Forward+0x1fb0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4342:	8e 01       	movw	r16, r28
    4344:	01 5a       	subi	r16, 0xA1	; 161
    4346:	1d 4f       	sbci	r17, 0xFD	; 253
    4348:	fe 01       	movw	r30, r28
    434a:	ef 59       	subi	r30, 0x9F	; 159
    434c:	fd 4f       	sbci	r31, 0xFD	; 253
    434e:	60 81       	ld	r22, Z
    4350:	71 81       	ldd	r23, Z+1	; 0x01
    4352:	82 81       	ldd	r24, Z+2	; 0x02
    4354:	93 81       	ldd	r25, Z+3	; 0x03
    4356:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    435a:	dc 01       	movw	r26, r24
    435c:	cb 01       	movw	r24, r22
    435e:	f8 01       	movw	r30, r16
    4360:	91 83       	std	Z+1, r25	; 0x01
    4362:	80 83       	st	Z, r24
    4364:	de 01       	movw	r26, r28
    4366:	a5 5a       	subi	r26, 0xA5	; 165
    4368:	bd 4f       	sbci	r27, 0xFD	; 253
    436a:	fe 01       	movw	r30, r28
    436c:	e1 5a       	subi	r30, 0xA1	; 161
    436e:	fd 4f       	sbci	r31, 0xFD	; 253
    4370:	80 81       	ld	r24, Z
    4372:	91 81       	ldd	r25, Z+1	; 0x01
    4374:	8d 93       	st	X+, r24
    4376:	9c 93       	st	X, r25
    4378:	fe 01       	movw	r30, r28
    437a:	e5 5a       	subi	r30, 0xA5	; 165
    437c:	fd 4f       	sbci	r31, 0xFD	; 253
    437e:	80 81       	ld	r24, Z
    4380:	91 81       	ldd	r25, Z+1	; 0x01
    4382:	01 97       	sbiw	r24, 0x01	; 1
    4384:	f1 f7       	brne	.-4      	; 0x4382 <Forward+0x1fa2>
    4386:	fe 01       	movw	r30, r28
    4388:	e5 5a       	subi	r30, 0xA5	; 165
    438a:	fd 4f       	sbci	r31, 0xFD	; 253
    438c:	91 83       	std	Z+1, r25	; 0x01
    438e:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = POSN3;
    4390:	8a e0       	ldi	r24, 0x0A	; 10
    4392:	80 93 73 00 	sts	0x0073, r24
    4396:	fe 01       	movw	r30, r28
    4398:	e9 5a       	subi	r30, 0xA9	; 169
    439a:	fd 4f       	sbci	r31, 0xFD	; 253
    439c:	80 e0       	ldi	r24, 0x00	; 0
    439e:	90 e0       	ldi	r25, 0x00	; 0
    43a0:	ac e8       	ldi	r26, 0x8C	; 140
    43a2:	b2 e4       	ldi	r27, 0x42	; 66
    43a4:	80 83       	st	Z, r24
    43a6:	91 83       	std	Z+1, r25	; 0x01
    43a8:	a2 83       	std	Z+2, r26	; 0x02
    43aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43ac:	8e 01       	movw	r16, r28
    43ae:	0d 5a       	subi	r16, 0xAD	; 173
    43b0:	1d 4f       	sbci	r17, 0xFD	; 253
    43b2:	fe 01       	movw	r30, r28
    43b4:	e9 5a       	subi	r30, 0xA9	; 169
    43b6:	fd 4f       	sbci	r31, 0xFD	; 253
    43b8:	60 81       	ld	r22, Z
    43ba:	71 81       	ldd	r23, Z+1	; 0x01
    43bc:	82 81       	ldd	r24, Z+2	; 0x02
    43be:	93 81       	ldd	r25, Z+3	; 0x03
    43c0:	20 e0       	ldi	r18, 0x00	; 0
    43c2:	30 e0       	ldi	r19, 0x00	; 0
    43c4:	4a e7       	ldi	r20, 0x7A	; 122
    43c6:	55 e4       	ldi	r21, 0x45	; 69
    43c8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    43cc:	dc 01       	movw	r26, r24
    43ce:	cb 01       	movw	r24, r22
    43d0:	f8 01       	movw	r30, r16
    43d2:	80 83       	st	Z, r24
    43d4:	91 83       	std	Z+1, r25	; 0x01
    43d6:	a2 83       	std	Z+2, r26	; 0x02
    43d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43da:	fe 01       	movw	r30, r28
    43dc:	ed 5a       	subi	r30, 0xAD	; 173
    43de:	fd 4f       	sbci	r31, 0xFD	; 253
    43e0:	60 81       	ld	r22, Z
    43e2:	71 81       	ldd	r23, Z+1	; 0x01
    43e4:	82 81       	ldd	r24, Z+2	; 0x02
    43e6:	93 81       	ldd	r25, Z+3	; 0x03
    43e8:	20 e0       	ldi	r18, 0x00	; 0
    43ea:	30 e0       	ldi	r19, 0x00	; 0
    43ec:	40 e8       	ldi	r20, 0x80	; 128
    43ee:	5f e3       	ldi	r21, 0x3F	; 63
    43f0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    43f4:	88 23       	and	r24, r24
    43f6:	44 f4       	brge	.+16     	; 0x4408 <Forward+0x2028>
		__ticks = 1;
    43f8:	fe 01       	movw	r30, r28
    43fa:	ef 5a       	subi	r30, 0xAF	; 175
    43fc:	fd 4f       	sbci	r31, 0xFD	; 253
    43fe:	81 e0       	ldi	r24, 0x01	; 1
    4400:	90 e0       	ldi	r25, 0x00	; 0
    4402:	91 83       	std	Z+1, r25	; 0x01
    4404:	80 83       	st	Z, r24
    4406:	64 c0       	rjmp	.+200    	; 0x44d0 <Forward+0x20f0>
	else if (__tmp > 65535)
    4408:	fe 01       	movw	r30, r28
    440a:	ed 5a       	subi	r30, 0xAD	; 173
    440c:	fd 4f       	sbci	r31, 0xFD	; 253
    440e:	60 81       	ld	r22, Z
    4410:	71 81       	ldd	r23, Z+1	; 0x01
    4412:	82 81       	ldd	r24, Z+2	; 0x02
    4414:	93 81       	ldd	r25, Z+3	; 0x03
    4416:	20 e0       	ldi	r18, 0x00	; 0
    4418:	3f ef       	ldi	r19, 0xFF	; 255
    441a:	4f e7       	ldi	r20, 0x7F	; 127
    441c:	57 e4       	ldi	r21, 0x47	; 71
    441e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4422:	18 16       	cp	r1, r24
    4424:	0c f0       	brlt	.+2      	; 0x4428 <Forward+0x2048>
    4426:	43 c0       	rjmp	.+134    	; 0x44ae <Forward+0x20ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4428:	fe 01       	movw	r30, r28
    442a:	e9 5a       	subi	r30, 0xA9	; 169
    442c:	fd 4f       	sbci	r31, 0xFD	; 253
    442e:	60 81       	ld	r22, Z
    4430:	71 81       	ldd	r23, Z+1	; 0x01
    4432:	82 81       	ldd	r24, Z+2	; 0x02
    4434:	93 81       	ldd	r25, Z+3	; 0x03
    4436:	20 e0       	ldi	r18, 0x00	; 0
    4438:	30 e0       	ldi	r19, 0x00	; 0
    443a:	40 e2       	ldi	r20, 0x20	; 32
    443c:	51 e4       	ldi	r21, 0x41	; 65
    443e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4442:	dc 01       	movw	r26, r24
    4444:	cb 01       	movw	r24, r22
    4446:	8e 01       	movw	r16, r28
    4448:	0f 5a       	subi	r16, 0xAF	; 175
    444a:	1d 4f       	sbci	r17, 0xFD	; 253
    444c:	bc 01       	movw	r22, r24
    444e:	cd 01       	movw	r24, r26
    4450:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4454:	dc 01       	movw	r26, r24
    4456:	cb 01       	movw	r24, r22
    4458:	f8 01       	movw	r30, r16
    445a:	91 83       	std	Z+1, r25	; 0x01
    445c:	80 83       	st	Z, r24
    445e:	1f c0       	rjmp	.+62     	; 0x449e <Forward+0x20be>
    4460:	fe 01       	movw	r30, r28
    4462:	e1 5b       	subi	r30, 0xB1	; 177
    4464:	fd 4f       	sbci	r31, 0xFD	; 253
    4466:	80 e9       	ldi	r24, 0x90	; 144
    4468:	91 e0       	ldi	r25, 0x01	; 1
    446a:	91 83       	std	Z+1, r25	; 0x01
    446c:	80 83       	st	Z, r24
    446e:	fe 01       	movw	r30, r28
    4470:	e1 5b       	subi	r30, 0xB1	; 177
    4472:	fd 4f       	sbci	r31, 0xFD	; 253
    4474:	80 81       	ld	r24, Z
    4476:	91 81       	ldd	r25, Z+1	; 0x01
    4478:	01 97       	sbiw	r24, 0x01	; 1
    447a:	f1 f7       	brne	.-4      	; 0x4478 <Forward+0x2098>
    447c:	fe 01       	movw	r30, r28
    447e:	e1 5b       	subi	r30, 0xB1	; 177
    4480:	fd 4f       	sbci	r31, 0xFD	; 253
    4482:	91 83       	std	Z+1, r25	; 0x01
    4484:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4486:	de 01       	movw	r26, r28
    4488:	af 5a       	subi	r26, 0xAF	; 175
    448a:	bd 4f       	sbci	r27, 0xFD	; 253
    448c:	fe 01       	movw	r30, r28
    448e:	ef 5a       	subi	r30, 0xAF	; 175
    4490:	fd 4f       	sbci	r31, 0xFD	; 253
    4492:	80 81       	ld	r24, Z
    4494:	91 81       	ldd	r25, Z+1	; 0x01
    4496:	01 97       	sbiw	r24, 0x01	; 1
    4498:	11 96       	adiw	r26, 0x01	; 1
    449a:	9c 93       	st	X, r25
    449c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    449e:	fe 01       	movw	r30, r28
    44a0:	ef 5a       	subi	r30, 0xAF	; 175
    44a2:	fd 4f       	sbci	r31, 0xFD	; 253
    44a4:	80 81       	ld	r24, Z
    44a6:	91 81       	ldd	r25, Z+1	; 0x01
    44a8:	00 97       	sbiw	r24, 0x00	; 0
    44aa:	d1 f6       	brne	.-76     	; 0x4460 <Forward+0x2080>
    44ac:	27 c0       	rjmp	.+78     	; 0x44fc <Forward+0x211c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44ae:	8e 01       	movw	r16, r28
    44b0:	0f 5a       	subi	r16, 0xAF	; 175
    44b2:	1d 4f       	sbci	r17, 0xFD	; 253
    44b4:	fe 01       	movw	r30, r28
    44b6:	ed 5a       	subi	r30, 0xAD	; 173
    44b8:	fd 4f       	sbci	r31, 0xFD	; 253
    44ba:	60 81       	ld	r22, Z
    44bc:	71 81       	ldd	r23, Z+1	; 0x01
    44be:	82 81       	ldd	r24, Z+2	; 0x02
    44c0:	93 81       	ldd	r25, Z+3	; 0x03
    44c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44c6:	dc 01       	movw	r26, r24
    44c8:	cb 01       	movw	r24, r22
    44ca:	f8 01       	movw	r30, r16
    44cc:	91 83       	std	Z+1, r25	; 0x01
    44ce:	80 83       	st	Z, r24
    44d0:	de 01       	movw	r26, r28
    44d2:	a3 5b       	subi	r26, 0xB3	; 179
    44d4:	bd 4f       	sbci	r27, 0xFD	; 253
    44d6:	fe 01       	movw	r30, r28
    44d8:	ef 5a       	subi	r30, 0xAF	; 175
    44da:	fd 4f       	sbci	r31, 0xFD	; 253
    44dc:	80 81       	ld	r24, Z
    44de:	91 81       	ldd	r25, Z+1	; 0x01
    44e0:	8d 93       	st	X+, r24
    44e2:	9c 93       	st	X, r25
    44e4:	fe 01       	movw	r30, r28
    44e6:	e3 5b       	subi	r30, 0xB3	; 179
    44e8:	fd 4f       	sbci	r31, 0xFD	; 253
    44ea:	80 81       	ld	r24, Z
    44ec:	91 81       	ldd	r25, Z+1	; 0x01
    44ee:	01 97       	sbiw	r24, 0x01	; 1
    44f0:	f1 f7       	brne	.-4      	; 0x44ee <Forward+0x210e>
    44f2:	fe 01       	movw	r30, r28
    44f4:	e3 5b       	subi	r30, 0xB3	; 179
    44f6:	fd 4f       	sbci	r31, 0xFD	; 253
    44f8:	91 83       	std	Z+1, r25	; 0x01
    44fa:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = POSN2;
    44fc:	89 e0       	ldi	r24, 0x09	; 9
    44fe:	80 93 73 00 	sts	0x0073, r24
	angle12 = POS7N;
    4502:	8e e0       	ldi	r24, 0x0E	; 14
    4504:	80 93 74 00 	sts	0x0074, r24
    4508:	fe 01       	movw	r30, r28
    450a:	e7 5b       	subi	r30, 0xB7	; 183
    450c:	fd 4f       	sbci	r31, 0xFD	; 253
    450e:	80 e0       	ldi	r24, 0x00	; 0
    4510:	90 e0       	ldi	r25, 0x00	; 0
    4512:	ac e8       	ldi	r26, 0x8C	; 140
    4514:	b2 e4       	ldi	r27, 0x42	; 66
    4516:	80 83       	st	Z, r24
    4518:	91 83       	std	Z+1, r25	; 0x01
    451a:	a2 83       	std	Z+2, r26	; 0x02
    451c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    451e:	8e 01       	movw	r16, r28
    4520:	0b 5b       	subi	r16, 0xBB	; 187
    4522:	1d 4f       	sbci	r17, 0xFD	; 253
    4524:	fe 01       	movw	r30, r28
    4526:	e7 5b       	subi	r30, 0xB7	; 183
    4528:	fd 4f       	sbci	r31, 0xFD	; 253
    452a:	60 81       	ld	r22, Z
    452c:	71 81       	ldd	r23, Z+1	; 0x01
    452e:	82 81       	ldd	r24, Z+2	; 0x02
    4530:	93 81       	ldd	r25, Z+3	; 0x03
    4532:	20 e0       	ldi	r18, 0x00	; 0
    4534:	30 e0       	ldi	r19, 0x00	; 0
    4536:	4a e7       	ldi	r20, 0x7A	; 122
    4538:	55 e4       	ldi	r21, 0x45	; 69
    453a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    453e:	dc 01       	movw	r26, r24
    4540:	cb 01       	movw	r24, r22
    4542:	f8 01       	movw	r30, r16
    4544:	80 83       	st	Z, r24
    4546:	91 83       	std	Z+1, r25	; 0x01
    4548:	a2 83       	std	Z+2, r26	; 0x02
    454a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    454c:	fe 01       	movw	r30, r28
    454e:	eb 5b       	subi	r30, 0xBB	; 187
    4550:	fd 4f       	sbci	r31, 0xFD	; 253
    4552:	60 81       	ld	r22, Z
    4554:	71 81       	ldd	r23, Z+1	; 0x01
    4556:	82 81       	ldd	r24, Z+2	; 0x02
    4558:	93 81       	ldd	r25, Z+3	; 0x03
    455a:	20 e0       	ldi	r18, 0x00	; 0
    455c:	30 e0       	ldi	r19, 0x00	; 0
    455e:	40 e8       	ldi	r20, 0x80	; 128
    4560:	5f e3       	ldi	r21, 0x3F	; 63
    4562:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4566:	88 23       	and	r24, r24
    4568:	44 f4       	brge	.+16     	; 0x457a <Forward+0x219a>
		__ticks = 1;
    456a:	fe 01       	movw	r30, r28
    456c:	ed 5b       	subi	r30, 0xBD	; 189
    456e:	fd 4f       	sbci	r31, 0xFD	; 253
    4570:	81 e0       	ldi	r24, 0x01	; 1
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	91 83       	std	Z+1, r25	; 0x01
    4576:	80 83       	st	Z, r24
    4578:	64 c0       	rjmp	.+200    	; 0x4642 <Forward+0x2262>
	else if (__tmp > 65535)
    457a:	fe 01       	movw	r30, r28
    457c:	eb 5b       	subi	r30, 0xBB	; 187
    457e:	fd 4f       	sbci	r31, 0xFD	; 253
    4580:	60 81       	ld	r22, Z
    4582:	71 81       	ldd	r23, Z+1	; 0x01
    4584:	82 81       	ldd	r24, Z+2	; 0x02
    4586:	93 81       	ldd	r25, Z+3	; 0x03
    4588:	20 e0       	ldi	r18, 0x00	; 0
    458a:	3f ef       	ldi	r19, 0xFF	; 255
    458c:	4f e7       	ldi	r20, 0x7F	; 127
    458e:	57 e4       	ldi	r21, 0x47	; 71
    4590:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4594:	18 16       	cp	r1, r24
    4596:	0c f0       	brlt	.+2      	; 0x459a <Forward+0x21ba>
    4598:	43 c0       	rjmp	.+134    	; 0x4620 <Forward+0x2240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    459a:	fe 01       	movw	r30, r28
    459c:	e7 5b       	subi	r30, 0xB7	; 183
    459e:	fd 4f       	sbci	r31, 0xFD	; 253
    45a0:	60 81       	ld	r22, Z
    45a2:	71 81       	ldd	r23, Z+1	; 0x01
    45a4:	82 81       	ldd	r24, Z+2	; 0x02
    45a6:	93 81       	ldd	r25, Z+3	; 0x03
    45a8:	20 e0       	ldi	r18, 0x00	; 0
    45aa:	30 e0       	ldi	r19, 0x00	; 0
    45ac:	40 e2       	ldi	r20, 0x20	; 32
    45ae:	51 e4       	ldi	r21, 0x41	; 65
    45b0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45b4:	dc 01       	movw	r26, r24
    45b6:	cb 01       	movw	r24, r22
    45b8:	8e 01       	movw	r16, r28
    45ba:	0d 5b       	subi	r16, 0xBD	; 189
    45bc:	1d 4f       	sbci	r17, 0xFD	; 253
    45be:	bc 01       	movw	r22, r24
    45c0:	cd 01       	movw	r24, r26
    45c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45c6:	dc 01       	movw	r26, r24
    45c8:	cb 01       	movw	r24, r22
    45ca:	f8 01       	movw	r30, r16
    45cc:	91 83       	std	Z+1, r25	; 0x01
    45ce:	80 83       	st	Z, r24
    45d0:	1f c0       	rjmp	.+62     	; 0x4610 <Forward+0x2230>
    45d2:	fe 01       	movw	r30, r28
    45d4:	ef 5b       	subi	r30, 0xBF	; 191
    45d6:	fd 4f       	sbci	r31, 0xFD	; 253
    45d8:	80 e9       	ldi	r24, 0x90	; 144
    45da:	91 e0       	ldi	r25, 0x01	; 1
    45dc:	91 83       	std	Z+1, r25	; 0x01
    45de:	80 83       	st	Z, r24
    45e0:	fe 01       	movw	r30, r28
    45e2:	ef 5b       	subi	r30, 0xBF	; 191
    45e4:	fd 4f       	sbci	r31, 0xFD	; 253
    45e6:	80 81       	ld	r24, Z
    45e8:	91 81       	ldd	r25, Z+1	; 0x01
    45ea:	01 97       	sbiw	r24, 0x01	; 1
    45ec:	f1 f7       	brne	.-4      	; 0x45ea <Forward+0x220a>
    45ee:	fe 01       	movw	r30, r28
    45f0:	ef 5b       	subi	r30, 0xBF	; 191
    45f2:	fd 4f       	sbci	r31, 0xFD	; 253
    45f4:	91 83       	std	Z+1, r25	; 0x01
    45f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    45f8:	de 01       	movw	r26, r28
    45fa:	ad 5b       	subi	r26, 0xBD	; 189
    45fc:	bd 4f       	sbci	r27, 0xFD	; 253
    45fe:	fe 01       	movw	r30, r28
    4600:	ed 5b       	subi	r30, 0xBD	; 189
    4602:	fd 4f       	sbci	r31, 0xFD	; 253
    4604:	80 81       	ld	r24, Z
    4606:	91 81       	ldd	r25, Z+1	; 0x01
    4608:	01 97       	sbiw	r24, 0x01	; 1
    460a:	11 96       	adiw	r26, 0x01	; 1
    460c:	9c 93       	st	X, r25
    460e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4610:	fe 01       	movw	r30, r28
    4612:	ed 5b       	subi	r30, 0xBD	; 189
    4614:	fd 4f       	sbci	r31, 0xFD	; 253
    4616:	80 81       	ld	r24, Z
    4618:	91 81       	ldd	r25, Z+1	; 0x01
    461a:	00 97       	sbiw	r24, 0x00	; 0
    461c:	d1 f6       	brne	.-76     	; 0x45d2 <Forward+0x21f2>
    461e:	27 c0       	rjmp	.+78     	; 0x466e <Forward+0x228e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4620:	8e 01       	movw	r16, r28
    4622:	0d 5b       	subi	r16, 0xBD	; 189
    4624:	1d 4f       	sbci	r17, 0xFD	; 253
    4626:	fe 01       	movw	r30, r28
    4628:	eb 5b       	subi	r30, 0xBB	; 187
    462a:	fd 4f       	sbci	r31, 0xFD	; 253
    462c:	60 81       	ld	r22, Z
    462e:	71 81       	ldd	r23, Z+1	; 0x01
    4630:	82 81       	ldd	r24, Z+2	; 0x02
    4632:	93 81       	ldd	r25, Z+3	; 0x03
    4634:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4638:	dc 01       	movw	r26, r24
    463a:	cb 01       	movw	r24, r22
    463c:	f8 01       	movw	r30, r16
    463e:	91 83       	std	Z+1, r25	; 0x01
    4640:	80 83       	st	Z, r24
    4642:	de 01       	movw	r26, r28
    4644:	a1 5c       	subi	r26, 0xC1	; 193
    4646:	bd 4f       	sbci	r27, 0xFD	; 253
    4648:	fe 01       	movw	r30, r28
    464a:	ed 5b       	subi	r30, 0xBD	; 189
    464c:	fd 4f       	sbci	r31, 0xFD	; 253
    464e:	80 81       	ld	r24, Z
    4650:	91 81       	ldd	r25, Z+1	; 0x01
    4652:	8d 93       	st	X+, r24
    4654:	9c 93       	st	X, r25
    4656:	fe 01       	movw	r30, r28
    4658:	e1 5c       	subi	r30, 0xC1	; 193
    465a:	fd 4f       	sbci	r31, 0xFD	; 253
    465c:	80 81       	ld	r24, Z
    465e:	91 81       	ldd	r25, Z+1	; 0x01
    4660:	01 97       	sbiw	r24, 0x01	; 1
    4662:	f1 f7       	brne	.-4      	; 0x4660 <Forward+0x2280>
    4664:	fe 01       	movw	r30, r28
    4666:	e1 5c       	subi	r30, 0xC1	; 193
    4668:	fd 4f       	sbci	r31, 0xFD	; 253
    466a:	91 83       	std	Z+1, r25	; 0x01
    466c:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = NaturalPos;
    466e:	8d e0       	ldi	r24, 0x0D	; 13
    4670:	80 93 74 00 	sts	0x0074, r24
    4674:	fe 01       	movw	r30, r28
    4676:	e5 5c       	subi	r30, 0xC5	; 197
    4678:	fd 4f       	sbci	r31, 0xFD	; 253
    467a:	80 e0       	ldi	r24, 0x00	; 0
    467c:	90 e0       	ldi	r25, 0x00	; 0
    467e:	ac e8       	ldi	r26, 0x8C	; 140
    4680:	b2 e4       	ldi	r27, 0x42	; 66
    4682:	80 83       	st	Z, r24
    4684:	91 83       	std	Z+1, r25	; 0x01
    4686:	a2 83       	std	Z+2, r26	; 0x02
    4688:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    468a:	8e 01       	movw	r16, r28
    468c:	09 5c       	subi	r16, 0xC9	; 201
    468e:	1d 4f       	sbci	r17, 0xFD	; 253
    4690:	fe 01       	movw	r30, r28
    4692:	e5 5c       	subi	r30, 0xC5	; 197
    4694:	fd 4f       	sbci	r31, 0xFD	; 253
    4696:	60 81       	ld	r22, Z
    4698:	71 81       	ldd	r23, Z+1	; 0x01
    469a:	82 81       	ldd	r24, Z+2	; 0x02
    469c:	93 81       	ldd	r25, Z+3	; 0x03
    469e:	20 e0       	ldi	r18, 0x00	; 0
    46a0:	30 e0       	ldi	r19, 0x00	; 0
    46a2:	4a e7       	ldi	r20, 0x7A	; 122
    46a4:	55 e4       	ldi	r21, 0x45	; 69
    46a6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    46aa:	dc 01       	movw	r26, r24
    46ac:	cb 01       	movw	r24, r22
    46ae:	f8 01       	movw	r30, r16
    46b0:	80 83       	st	Z, r24
    46b2:	91 83       	std	Z+1, r25	; 0x01
    46b4:	a2 83       	std	Z+2, r26	; 0x02
    46b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    46b8:	fe 01       	movw	r30, r28
    46ba:	e9 5c       	subi	r30, 0xC9	; 201
    46bc:	fd 4f       	sbci	r31, 0xFD	; 253
    46be:	60 81       	ld	r22, Z
    46c0:	71 81       	ldd	r23, Z+1	; 0x01
    46c2:	82 81       	ldd	r24, Z+2	; 0x02
    46c4:	93 81       	ldd	r25, Z+3	; 0x03
    46c6:	20 e0       	ldi	r18, 0x00	; 0
    46c8:	30 e0       	ldi	r19, 0x00	; 0
    46ca:	40 e8       	ldi	r20, 0x80	; 128
    46cc:	5f e3       	ldi	r21, 0x3F	; 63
    46ce:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    46d2:	88 23       	and	r24, r24
    46d4:	44 f4       	brge	.+16     	; 0x46e6 <Forward+0x2306>
		__ticks = 1;
    46d6:	fe 01       	movw	r30, r28
    46d8:	eb 5c       	subi	r30, 0xCB	; 203
    46da:	fd 4f       	sbci	r31, 0xFD	; 253
    46dc:	81 e0       	ldi	r24, 0x01	; 1
    46de:	90 e0       	ldi	r25, 0x00	; 0
    46e0:	91 83       	std	Z+1, r25	; 0x01
    46e2:	80 83       	st	Z, r24
    46e4:	64 c0       	rjmp	.+200    	; 0x47ae <Forward+0x23ce>
	else if (__tmp > 65535)
    46e6:	fe 01       	movw	r30, r28
    46e8:	e9 5c       	subi	r30, 0xC9	; 201
    46ea:	fd 4f       	sbci	r31, 0xFD	; 253
    46ec:	60 81       	ld	r22, Z
    46ee:	71 81       	ldd	r23, Z+1	; 0x01
    46f0:	82 81       	ldd	r24, Z+2	; 0x02
    46f2:	93 81       	ldd	r25, Z+3	; 0x03
    46f4:	20 e0       	ldi	r18, 0x00	; 0
    46f6:	3f ef       	ldi	r19, 0xFF	; 255
    46f8:	4f e7       	ldi	r20, 0x7F	; 127
    46fa:	57 e4       	ldi	r21, 0x47	; 71
    46fc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4700:	18 16       	cp	r1, r24
    4702:	0c f0       	brlt	.+2      	; 0x4706 <Forward+0x2326>
    4704:	43 c0       	rjmp	.+134    	; 0x478c <Forward+0x23ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4706:	fe 01       	movw	r30, r28
    4708:	e5 5c       	subi	r30, 0xC5	; 197
    470a:	fd 4f       	sbci	r31, 0xFD	; 253
    470c:	60 81       	ld	r22, Z
    470e:	71 81       	ldd	r23, Z+1	; 0x01
    4710:	82 81       	ldd	r24, Z+2	; 0x02
    4712:	93 81       	ldd	r25, Z+3	; 0x03
    4714:	20 e0       	ldi	r18, 0x00	; 0
    4716:	30 e0       	ldi	r19, 0x00	; 0
    4718:	40 e2       	ldi	r20, 0x20	; 32
    471a:	51 e4       	ldi	r21, 0x41	; 65
    471c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4720:	dc 01       	movw	r26, r24
    4722:	cb 01       	movw	r24, r22
    4724:	8e 01       	movw	r16, r28
    4726:	0b 5c       	subi	r16, 0xCB	; 203
    4728:	1d 4f       	sbci	r17, 0xFD	; 253
    472a:	bc 01       	movw	r22, r24
    472c:	cd 01       	movw	r24, r26
    472e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4732:	dc 01       	movw	r26, r24
    4734:	cb 01       	movw	r24, r22
    4736:	f8 01       	movw	r30, r16
    4738:	91 83       	std	Z+1, r25	; 0x01
    473a:	80 83       	st	Z, r24
    473c:	1f c0       	rjmp	.+62     	; 0x477c <Forward+0x239c>
    473e:	fe 01       	movw	r30, r28
    4740:	ed 5c       	subi	r30, 0xCD	; 205
    4742:	fd 4f       	sbci	r31, 0xFD	; 253
    4744:	80 e9       	ldi	r24, 0x90	; 144
    4746:	91 e0       	ldi	r25, 0x01	; 1
    4748:	91 83       	std	Z+1, r25	; 0x01
    474a:	80 83       	st	Z, r24
    474c:	fe 01       	movw	r30, r28
    474e:	ed 5c       	subi	r30, 0xCD	; 205
    4750:	fd 4f       	sbci	r31, 0xFD	; 253
    4752:	80 81       	ld	r24, Z
    4754:	91 81       	ldd	r25, Z+1	; 0x01
    4756:	01 97       	sbiw	r24, 0x01	; 1
    4758:	f1 f7       	brne	.-4      	; 0x4756 <Forward+0x2376>
    475a:	fe 01       	movw	r30, r28
    475c:	ed 5c       	subi	r30, 0xCD	; 205
    475e:	fd 4f       	sbci	r31, 0xFD	; 253
    4760:	91 83       	std	Z+1, r25	; 0x01
    4762:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4764:	de 01       	movw	r26, r28
    4766:	ab 5c       	subi	r26, 0xCB	; 203
    4768:	bd 4f       	sbci	r27, 0xFD	; 253
    476a:	fe 01       	movw	r30, r28
    476c:	eb 5c       	subi	r30, 0xCB	; 203
    476e:	fd 4f       	sbci	r31, 0xFD	; 253
    4770:	80 81       	ld	r24, Z
    4772:	91 81       	ldd	r25, Z+1	; 0x01
    4774:	01 97       	sbiw	r24, 0x01	; 1
    4776:	11 96       	adiw	r26, 0x01	; 1
    4778:	9c 93       	st	X, r25
    477a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    477c:	fe 01       	movw	r30, r28
    477e:	eb 5c       	subi	r30, 0xCB	; 203
    4780:	fd 4f       	sbci	r31, 0xFD	; 253
    4782:	80 81       	ld	r24, Z
    4784:	91 81       	ldd	r25, Z+1	; 0x01
    4786:	00 97       	sbiw	r24, 0x00	; 0
    4788:	d1 f6       	brne	.-76     	; 0x473e <Forward+0x235e>
    478a:	27 c0       	rjmp	.+78     	; 0x47da <Forward+0x23fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    478c:	8e 01       	movw	r16, r28
    478e:	0b 5c       	subi	r16, 0xCB	; 203
    4790:	1d 4f       	sbci	r17, 0xFD	; 253
    4792:	fe 01       	movw	r30, r28
    4794:	e9 5c       	subi	r30, 0xC9	; 201
    4796:	fd 4f       	sbci	r31, 0xFD	; 253
    4798:	60 81       	ld	r22, Z
    479a:	71 81       	ldd	r23, Z+1	; 0x01
    479c:	82 81       	ldd	r24, Z+2	; 0x02
    479e:	93 81       	ldd	r25, Z+3	; 0x03
    47a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    47a4:	dc 01       	movw	r26, r24
    47a6:	cb 01       	movw	r24, r22
    47a8:	f8 01       	movw	r30, r16
    47aa:	91 83       	std	Z+1, r25	; 0x01
    47ac:	80 83       	st	Z, r24
    47ae:	de 01       	movw	r26, r28
    47b0:	af 5c       	subi	r26, 0xCF	; 207
    47b2:	bd 4f       	sbci	r27, 0xFD	; 253
    47b4:	fe 01       	movw	r30, r28
    47b6:	eb 5c       	subi	r30, 0xCB	; 203
    47b8:	fd 4f       	sbci	r31, 0xFD	; 253
    47ba:	80 81       	ld	r24, Z
    47bc:	91 81       	ldd	r25, Z+1	; 0x01
    47be:	8d 93       	st	X+, r24
    47c0:	9c 93       	st	X, r25
    47c2:	fe 01       	movw	r30, r28
    47c4:	ef 5c       	subi	r30, 0xCF	; 207
    47c6:	fd 4f       	sbci	r31, 0xFD	; 253
    47c8:	80 81       	ld	r24, Z
    47ca:	91 81       	ldd	r25, Z+1	; 0x01
    47cc:	01 97       	sbiw	r24, 0x01	; 1
    47ce:	f1 f7       	brne	.-4      	; 0x47cc <Forward+0x23ec>
    47d0:	fe 01       	movw	r30, r28
    47d2:	ef 5c       	subi	r30, 0xCF	; 207
    47d4:	fd 4f       	sbci	r31, 0xFD	; 253
    47d6:	91 83       	std	Z+1, r25	; 0x01
    47d8:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POSN5;
    47da:	8c e0       	ldi	r24, 0x0C	; 12
    47dc:	80 93 74 00 	sts	0x0074, r24
    47e0:	fe 01       	movw	r30, r28
    47e2:	e3 5d       	subi	r30, 0xD3	; 211
    47e4:	fd 4f       	sbci	r31, 0xFD	; 253
    47e6:	80 e0       	ldi	r24, 0x00	; 0
    47e8:	90 e0       	ldi	r25, 0x00	; 0
    47ea:	ac e8       	ldi	r26, 0x8C	; 140
    47ec:	b2 e4       	ldi	r27, 0x42	; 66
    47ee:	80 83       	st	Z, r24
    47f0:	91 83       	std	Z+1, r25	; 0x01
    47f2:	a2 83       	std	Z+2, r26	; 0x02
    47f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47f6:	8e 01       	movw	r16, r28
    47f8:	07 5d       	subi	r16, 0xD7	; 215
    47fa:	1d 4f       	sbci	r17, 0xFD	; 253
    47fc:	fe 01       	movw	r30, r28
    47fe:	e3 5d       	subi	r30, 0xD3	; 211
    4800:	fd 4f       	sbci	r31, 0xFD	; 253
    4802:	60 81       	ld	r22, Z
    4804:	71 81       	ldd	r23, Z+1	; 0x01
    4806:	82 81       	ldd	r24, Z+2	; 0x02
    4808:	93 81       	ldd	r25, Z+3	; 0x03
    480a:	20 e0       	ldi	r18, 0x00	; 0
    480c:	30 e0       	ldi	r19, 0x00	; 0
    480e:	4a e7       	ldi	r20, 0x7A	; 122
    4810:	55 e4       	ldi	r21, 0x45	; 69
    4812:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4816:	dc 01       	movw	r26, r24
    4818:	cb 01       	movw	r24, r22
    481a:	f8 01       	movw	r30, r16
    481c:	80 83       	st	Z, r24
    481e:	91 83       	std	Z+1, r25	; 0x01
    4820:	a2 83       	std	Z+2, r26	; 0x02
    4822:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4824:	fe 01       	movw	r30, r28
    4826:	e7 5d       	subi	r30, 0xD7	; 215
    4828:	fd 4f       	sbci	r31, 0xFD	; 253
    482a:	60 81       	ld	r22, Z
    482c:	71 81       	ldd	r23, Z+1	; 0x01
    482e:	82 81       	ldd	r24, Z+2	; 0x02
    4830:	93 81       	ldd	r25, Z+3	; 0x03
    4832:	20 e0       	ldi	r18, 0x00	; 0
    4834:	30 e0       	ldi	r19, 0x00	; 0
    4836:	40 e8       	ldi	r20, 0x80	; 128
    4838:	5f e3       	ldi	r21, 0x3F	; 63
    483a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    483e:	88 23       	and	r24, r24
    4840:	44 f4       	brge	.+16     	; 0x4852 <Forward+0x2472>
		__ticks = 1;
    4842:	fe 01       	movw	r30, r28
    4844:	e9 5d       	subi	r30, 0xD9	; 217
    4846:	fd 4f       	sbci	r31, 0xFD	; 253
    4848:	81 e0       	ldi	r24, 0x01	; 1
    484a:	90 e0       	ldi	r25, 0x00	; 0
    484c:	91 83       	std	Z+1, r25	; 0x01
    484e:	80 83       	st	Z, r24
    4850:	64 c0       	rjmp	.+200    	; 0x491a <Forward+0x253a>
	else if (__tmp > 65535)
    4852:	fe 01       	movw	r30, r28
    4854:	e7 5d       	subi	r30, 0xD7	; 215
    4856:	fd 4f       	sbci	r31, 0xFD	; 253
    4858:	60 81       	ld	r22, Z
    485a:	71 81       	ldd	r23, Z+1	; 0x01
    485c:	82 81       	ldd	r24, Z+2	; 0x02
    485e:	93 81       	ldd	r25, Z+3	; 0x03
    4860:	20 e0       	ldi	r18, 0x00	; 0
    4862:	3f ef       	ldi	r19, 0xFF	; 255
    4864:	4f e7       	ldi	r20, 0x7F	; 127
    4866:	57 e4       	ldi	r21, 0x47	; 71
    4868:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    486c:	18 16       	cp	r1, r24
    486e:	0c f0       	brlt	.+2      	; 0x4872 <Forward+0x2492>
    4870:	43 c0       	rjmp	.+134    	; 0x48f8 <Forward+0x2518>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4872:	fe 01       	movw	r30, r28
    4874:	e3 5d       	subi	r30, 0xD3	; 211
    4876:	fd 4f       	sbci	r31, 0xFD	; 253
    4878:	60 81       	ld	r22, Z
    487a:	71 81       	ldd	r23, Z+1	; 0x01
    487c:	82 81       	ldd	r24, Z+2	; 0x02
    487e:	93 81       	ldd	r25, Z+3	; 0x03
    4880:	20 e0       	ldi	r18, 0x00	; 0
    4882:	30 e0       	ldi	r19, 0x00	; 0
    4884:	40 e2       	ldi	r20, 0x20	; 32
    4886:	51 e4       	ldi	r21, 0x41	; 65
    4888:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    488c:	dc 01       	movw	r26, r24
    488e:	cb 01       	movw	r24, r22
    4890:	8e 01       	movw	r16, r28
    4892:	09 5d       	subi	r16, 0xD9	; 217
    4894:	1d 4f       	sbci	r17, 0xFD	; 253
    4896:	bc 01       	movw	r22, r24
    4898:	cd 01       	movw	r24, r26
    489a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    489e:	dc 01       	movw	r26, r24
    48a0:	cb 01       	movw	r24, r22
    48a2:	f8 01       	movw	r30, r16
    48a4:	91 83       	std	Z+1, r25	; 0x01
    48a6:	80 83       	st	Z, r24
    48a8:	1f c0       	rjmp	.+62     	; 0x48e8 <Forward+0x2508>
    48aa:	fe 01       	movw	r30, r28
    48ac:	eb 5d       	subi	r30, 0xDB	; 219
    48ae:	fd 4f       	sbci	r31, 0xFD	; 253
    48b0:	80 e9       	ldi	r24, 0x90	; 144
    48b2:	91 e0       	ldi	r25, 0x01	; 1
    48b4:	91 83       	std	Z+1, r25	; 0x01
    48b6:	80 83       	st	Z, r24
    48b8:	fe 01       	movw	r30, r28
    48ba:	eb 5d       	subi	r30, 0xDB	; 219
    48bc:	fd 4f       	sbci	r31, 0xFD	; 253
    48be:	80 81       	ld	r24, Z
    48c0:	91 81       	ldd	r25, Z+1	; 0x01
    48c2:	01 97       	sbiw	r24, 0x01	; 1
    48c4:	f1 f7       	brne	.-4      	; 0x48c2 <Forward+0x24e2>
    48c6:	fe 01       	movw	r30, r28
    48c8:	eb 5d       	subi	r30, 0xDB	; 219
    48ca:	fd 4f       	sbci	r31, 0xFD	; 253
    48cc:	91 83       	std	Z+1, r25	; 0x01
    48ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48d0:	de 01       	movw	r26, r28
    48d2:	a9 5d       	subi	r26, 0xD9	; 217
    48d4:	bd 4f       	sbci	r27, 0xFD	; 253
    48d6:	fe 01       	movw	r30, r28
    48d8:	e9 5d       	subi	r30, 0xD9	; 217
    48da:	fd 4f       	sbci	r31, 0xFD	; 253
    48dc:	80 81       	ld	r24, Z
    48de:	91 81       	ldd	r25, Z+1	; 0x01
    48e0:	01 97       	sbiw	r24, 0x01	; 1
    48e2:	11 96       	adiw	r26, 0x01	; 1
    48e4:	9c 93       	st	X, r25
    48e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48e8:	fe 01       	movw	r30, r28
    48ea:	e9 5d       	subi	r30, 0xD9	; 217
    48ec:	fd 4f       	sbci	r31, 0xFD	; 253
    48ee:	80 81       	ld	r24, Z
    48f0:	91 81       	ldd	r25, Z+1	; 0x01
    48f2:	00 97       	sbiw	r24, 0x00	; 0
    48f4:	d1 f6       	brne	.-76     	; 0x48aa <Forward+0x24ca>
    48f6:	27 c0       	rjmp	.+78     	; 0x4946 <Forward+0x2566>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48f8:	8e 01       	movw	r16, r28
    48fa:	09 5d       	subi	r16, 0xD9	; 217
    48fc:	1d 4f       	sbci	r17, 0xFD	; 253
    48fe:	fe 01       	movw	r30, r28
    4900:	e7 5d       	subi	r30, 0xD7	; 215
    4902:	fd 4f       	sbci	r31, 0xFD	; 253
    4904:	60 81       	ld	r22, Z
    4906:	71 81       	ldd	r23, Z+1	; 0x01
    4908:	82 81       	ldd	r24, Z+2	; 0x02
    490a:	93 81       	ldd	r25, Z+3	; 0x03
    490c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4910:	dc 01       	movw	r26, r24
    4912:	cb 01       	movw	r24, r22
    4914:	f8 01       	movw	r30, r16
    4916:	91 83       	std	Z+1, r25	; 0x01
    4918:	80 83       	st	Z, r24
    491a:	de 01       	movw	r26, r28
    491c:	ad 5d       	subi	r26, 0xDD	; 221
    491e:	bd 4f       	sbci	r27, 0xFD	; 253
    4920:	fe 01       	movw	r30, r28
    4922:	e9 5d       	subi	r30, 0xD9	; 217
    4924:	fd 4f       	sbci	r31, 0xFD	; 253
    4926:	80 81       	ld	r24, Z
    4928:	91 81       	ldd	r25, Z+1	; 0x01
    492a:	8d 93       	st	X+, r24
    492c:	9c 93       	st	X, r25
    492e:	fe 01       	movw	r30, r28
    4930:	ed 5d       	subi	r30, 0xDD	; 221
    4932:	fd 4f       	sbci	r31, 0xFD	; 253
    4934:	80 81       	ld	r24, Z
    4936:	91 81       	ldd	r25, Z+1	; 0x01
    4938:	01 97       	sbiw	r24, 0x01	; 1
    493a:	f1 f7       	brne	.-4      	; 0x4938 <Forward+0x2558>
    493c:	fe 01       	movw	r30, r28
    493e:	ed 5d       	subi	r30, 0xDD	; 221
    4940:	fd 4f       	sbci	r31, 0xFD	; 253
    4942:	91 83       	std	Z+1, r25	; 0x01
    4944:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POSN4;
    4946:	8b e0       	ldi	r24, 0x0B	; 11
    4948:	80 93 74 00 	sts	0x0074, r24
    494c:	fe 01       	movw	r30, r28
    494e:	e1 5e       	subi	r30, 0xE1	; 225
    4950:	fd 4f       	sbci	r31, 0xFD	; 253
    4952:	80 e0       	ldi	r24, 0x00	; 0
    4954:	90 e0       	ldi	r25, 0x00	; 0
    4956:	ac e8       	ldi	r26, 0x8C	; 140
    4958:	b2 e4       	ldi	r27, 0x42	; 66
    495a:	80 83       	st	Z, r24
    495c:	91 83       	std	Z+1, r25	; 0x01
    495e:	a2 83       	std	Z+2, r26	; 0x02
    4960:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4962:	8e 01       	movw	r16, r28
    4964:	05 5e       	subi	r16, 0xE5	; 229
    4966:	1d 4f       	sbci	r17, 0xFD	; 253
    4968:	fe 01       	movw	r30, r28
    496a:	e1 5e       	subi	r30, 0xE1	; 225
    496c:	fd 4f       	sbci	r31, 0xFD	; 253
    496e:	60 81       	ld	r22, Z
    4970:	71 81       	ldd	r23, Z+1	; 0x01
    4972:	82 81       	ldd	r24, Z+2	; 0x02
    4974:	93 81       	ldd	r25, Z+3	; 0x03
    4976:	20 e0       	ldi	r18, 0x00	; 0
    4978:	30 e0       	ldi	r19, 0x00	; 0
    497a:	4a e7       	ldi	r20, 0x7A	; 122
    497c:	55 e4       	ldi	r21, 0x45	; 69
    497e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4982:	dc 01       	movw	r26, r24
    4984:	cb 01       	movw	r24, r22
    4986:	f8 01       	movw	r30, r16
    4988:	80 83       	st	Z, r24
    498a:	91 83       	std	Z+1, r25	; 0x01
    498c:	a2 83       	std	Z+2, r26	; 0x02
    498e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4990:	fe 01       	movw	r30, r28
    4992:	e5 5e       	subi	r30, 0xE5	; 229
    4994:	fd 4f       	sbci	r31, 0xFD	; 253
    4996:	60 81       	ld	r22, Z
    4998:	71 81       	ldd	r23, Z+1	; 0x01
    499a:	82 81       	ldd	r24, Z+2	; 0x02
    499c:	93 81       	ldd	r25, Z+3	; 0x03
    499e:	20 e0       	ldi	r18, 0x00	; 0
    49a0:	30 e0       	ldi	r19, 0x00	; 0
    49a2:	40 e8       	ldi	r20, 0x80	; 128
    49a4:	5f e3       	ldi	r21, 0x3F	; 63
    49a6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    49aa:	88 23       	and	r24, r24
    49ac:	44 f4       	brge	.+16     	; 0x49be <Forward+0x25de>
		__ticks = 1;
    49ae:	fe 01       	movw	r30, r28
    49b0:	e7 5e       	subi	r30, 0xE7	; 231
    49b2:	fd 4f       	sbci	r31, 0xFD	; 253
    49b4:	81 e0       	ldi	r24, 0x01	; 1
    49b6:	90 e0       	ldi	r25, 0x00	; 0
    49b8:	91 83       	std	Z+1, r25	; 0x01
    49ba:	80 83       	st	Z, r24
    49bc:	64 c0       	rjmp	.+200    	; 0x4a86 <Forward+0x26a6>
	else if (__tmp > 65535)
    49be:	fe 01       	movw	r30, r28
    49c0:	e5 5e       	subi	r30, 0xE5	; 229
    49c2:	fd 4f       	sbci	r31, 0xFD	; 253
    49c4:	60 81       	ld	r22, Z
    49c6:	71 81       	ldd	r23, Z+1	; 0x01
    49c8:	82 81       	ldd	r24, Z+2	; 0x02
    49ca:	93 81       	ldd	r25, Z+3	; 0x03
    49cc:	20 e0       	ldi	r18, 0x00	; 0
    49ce:	3f ef       	ldi	r19, 0xFF	; 255
    49d0:	4f e7       	ldi	r20, 0x7F	; 127
    49d2:	57 e4       	ldi	r21, 0x47	; 71
    49d4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    49d8:	18 16       	cp	r1, r24
    49da:	0c f0       	brlt	.+2      	; 0x49de <Forward+0x25fe>
    49dc:	43 c0       	rjmp	.+134    	; 0x4a64 <Forward+0x2684>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    49de:	fe 01       	movw	r30, r28
    49e0:	e1 5e       	subi	r30, 0xE1	; 225
    49e2:	fd 4f       	sbci	r31, 0xFD	; 253
    49e4:	60 81       	ld	r22, Z
    49e6:	71 81       	ldd	r23, Z+1	; 0x01
    49e8:	82 81       	ldd	r24, Z+2	; 0x02
    49ea:	93 81       	ldd	r25, Z+3	; 0x03
    49ec:	20 e0       	ldi	r18, 0x00	; 0
    49ee:	30 e0       	ldi	r19, 0x00	; 0
    49f0:	40 e2       	ldi	r20, 0x20	; 32
    49f2:	51 e4       	ldi	r21, 0x41	; 65
    49f4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    49f8:	dc 01       	movw	r26, r24
    49fa:	cb 01       	movw	r24, r22
    49fc:	8e 01       	movw	r16, r28
    49fe:	07 5e       	subi	r16, 0xE7	; 231
    4a00:	1d 4f       	sbci	r17, 0xFD	; 253
    4a02:	bc 01       	movw	r22, r24
    4a04:	cd 01       	movw	r24, r26
    4a06:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a0a:	dc 01       	movw	r26, r24
    4a0c:	cb 01       	movw	r24, r22
    4a0e:	f8 01       	movw	r30, r16
    4a10:	91 83       	std	Z+1, r25	; 0x01
    4a12:	80 83       	st	Z, r24
    4a14:	1f c0       	rjmp	.+62     	; 0x4a54 <Forward+0x2674>
    4a16:	fe 01       	movw	r30, r28
    4a18:	e9 5e       	subi	r30, 0xE9	; 233
    4a1a:	fd 4f       	sbci	r31, 0xFD	; 253
    4a1c:	80 e9       	ldi	r24, 0x90	; 144
    4a1e:	91 e0       	ldi	r25, 0x01	; 1
    4a20:	91 83       	std	Z+1, r25	; 0x01
    4a22:	80 83       	st	Z, r24
    4a24:	fe 01       	movw	r30, r28
    4a26:	e9 5e       	subi	r30, 0xE9	; 233
    4a28:	fd 4f       	sbci	r31, 0xFD	; 253
    4a2a:	80 81       	ld	r24, Z
    4a2c:	91 81       	ldd	r25, Z+1	; 0x01
    4a2e:	01 97       	sbiw	r24, 0x01	; 1
    4a30:	f1 f7       	brne	.-4      	; 0x4a2e <Forward+0x264e>
    4a32:	fe 01       	movw	r30, r28
    4a34:	e9 5e       	subi	r30, 0xE9	; 233
    4a36:	fd 4f       	sbci	r31, 0xFD	; 253
    4a38:	91 83       	std	Z+1, r25	; 0x01
    4a3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4a3c:	de 01       	movw	r26, r28
    4a3e:	a7 5e       	subi	r26, 0xE7	; 231
    4a40:	bd 4f       	sbci	r27, 0xFD	; 253
    4a42:	fe 01       	movw	r30, r28
    4a44:	e7 5e       	subi	r30, 0xE7	; 231
    4a46:	fd 4f       	sbci	r31, 0xFD	; 253
    4a48:	80 81       	ld	r24, Z
    4a4a:	91 81       	ldd	r25, Z+1	; 0x01
    4a4c:	01 97       	sbiw	r24, 0x01	; 1
    4a4e:	11 96       	adiw	r26, 0x01	; 1
    4a50:	9c 93       	st	X, r25
    4a52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4a54:	fe 01       	movw	r30, r28
    4a56:	e7 5e       	subi	r30, 0xE7	; 231
    4a58:	fd 4f       	sbci	r31, 0xFD	; 253
    4a5a:	80 81       	ld	r24, Z
    4a5c:	91 81       	ldd	r25, Z+1	; 0x01
    4a5e:	00 97       	sbiw	r24, 0x00	; 0
    4a60:	d1 f6       	brne	.-76     	; 0x4a16 <Forward+0x2636>
    4a62:	27 c0       	rjmp	.+78     	; 0x4ab2 <Forward+0x26d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4a64:	8e 01       	movw	r16, r28
    4a66:	07 5e       	subi	r16, 0xE7	; 231
    4a68:	1d 4f       	sbci	r17, 0xFD	; 253
    4a6a:	fe 01       	movw	r30, r28
    4a6c:	e5 5e       	subi	r30, 0xE5	; 229
    4a6e:	fd 4f       	sbci	r31, 0xFD	; 253
    4a70:	60 81       	ld	r22, Z
    4a72:	71 81       	ldd	r23, Z+1	; 0x01
    4a74:	82 81       	ldd	r24, Z+2	; 0x02
    4a76:	93 81       	ldd	r25, Z+3	; 0x03
    4a78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4a7c:	dc 01       	movw	r26, r24
    4a7e:	cb 01       	movw	r24, r22
    4a80:	f8 01       	movw	r30, r16
    4a82:	91 83       	std	Z+1, r25	; 0x01
    4a84:	80 83       	st	Z, r24
    4a86:	de 01       	movw	r26, r28
    4a88:	ab 5e       	subi	r26, 0xEB	; 235
    4a8a:	bd 4f       	sbci	r27, 0xFD	; 253
    4a8c:	fe 01       	movw	r30, r28
    4a8e:	e7 5e       	subi	r30, 0xE7	; 231
    4a90:	fd 4f       	sbci	r31, 0xFD	; 253
    4a92:	80 81       	ld	r24, Z
    4a94:	91 81       	ldd	r25, Z+1	; 0x01
    4a96:	8d 93       	st	X+, r24
    4a98:	9c 93       	st	X, r25
    4a9a:	fe 01       	movw	r30, r28
    4a9c:	eb 5e       	subi	r30, 0xEB	; 235
    4a9e:	fd 4f       	sbci	r31, 0xFD	; 253
    4aa0:	80 81       	ld	r24, Z
    4aa2:	91 81       	ldd	r25, Z+1	; 0x01
    4aa4:	01 97       	sbiw	r24, 0x01	; 1
    4aa6:	f1 f7       	brne	.-4      	; 0x4aa4 <Forward+0x26c4>
    4aa8:	fe 01       	movw	r30, r28
    4aaa:	eb 5e       	subi	r30, 0xEB	; 235
    4aac:	fd 4f       	sbci	r31, 0xFD	; 253
    4aae:	91 83       	std	Z+1, r25	; 0x01
    4ab0:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POSN3;
    4ab2:	8a e0       	ldi	r24, 0x0A	; 10
    4ab4:	80 93 74 00 	sts	0x0074, r24
    4ab8:	fe 01       	movw	r30, r28
    4aba:	ef 5e       	subi	r30, 0xEF	; 239
    4abc:	fd 4f       	sbci	r31, 0xFD	; 253
    4abe:	80 e0       	ldi	r24, 0x00	; 0
    4ac0:	90 e0       	ldi	r25, 0x00	; 0
    4ac2:	aa ef       	ldi	r26, 0xFA	; 250
    4ac4:	b3 e4       	ldi	r27, 0x43	; 67
    4ac6:	80 83       	st	Z, r24
    4ac8:	91 83       	std	Z+1, r25	; 0x01
    4aca:	a2 83       	std	Z+2, r26	; 0x02
    4acc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4ace:	8e 01       	movw	r16, r28
    4ad0:	03 5f       	subi	r16, 0xF3	; 243
    4ad2:	1d 4f       	sbci	r17, 0xFD	; 253
    4ad4:	fe 01       	movw	r30, r28
    4ad6:	ef 5e       	subi	r30, 0xEF	; 239
    4ad8:	fd 4f       	sbci	r31, 0xFD	; 253
    4ada:	60 81       	ld	r22, Z
    4adc:	71 81       	ldd	r23, Z+1	; 0x01
    4ade:	82 81       	ldd	r24, Z+2	; 0x02
    4ae0:	93 81       	ldd	r25, Z+3	; 0x03
    4ae2:	20 e0       	ldi	r18, 0x00	; 0
    4ae4:	30 e0       	ldi	r19, 0x00	; 0
    4ae6:	4a e7       	ldi	r20, 0x7A	; 122
    4ae8:	55 e4       	ldi	r21, 0x45	; 69
    4aea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4aee:	dc 01       	movw	r26, r24
    4af0:	cb 01       	movw	r24, r22
    4af2:	f8 01       	movw	r30, r16
    4af4:	80 83       	st	Z, r24
    4af6:	91 83       	std	Z+1, r25	; 0x01
    4af8:	a2 83       	std	Z+2, r26	; 0x02
    4afa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4afc:	fe 01       	movw	r30, r28
    4afe:	e3 5f       	subi	r30, 0xF3	; 243
    4b00:	fd 4f       	sbci	r31, 0xFD	; 253
    4b02:	60 81       	ld	r22, Z
    4b04:	71 81       	ldd	r23, Z+1	; 0x01
    4b06:	82 81       	ldd	r24, Z+2	; 0x02
    4b08:	93 81       	ldd	r25, Z+3	; 0x03
    4b0a:	20 e0       	ldi	r18, 0x00	; 0
    4b0c:	30 e0       	ldi	r19, 0x00	; 0
    4b0e:	40 e8       	ldi	r20, 0x80	; 128
    4b10:	5f e3       	ldi	r21, 0x3F	; 63
    4b12:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4b16:	88 23       	and	r24, r24
    4b18:	44 f4       	brge	.+16     	; 0x4b2a <Forward+0x274a>
		__ticks = 1;
    4b1a:	fe 01       	movw	r30, r28
    4b1c:	e5 5f       	subi	r30, 0xF5	; 245
    4b1e:	fd 4f       	sbci	r31, 0xFD	; 253
    4b20:	81 e0       	ldi	r24, 0x01	; 1
    4b22:	90 e0       	ldi	r25, 0x00	; 0
    4b24:	91 83       	std	Z+1, r25	; 0x01
    4b26:	80 83       	st	Z, r24
    4b28:	64 c0       	rjmp	.+200    	; 0x4bf2 <Forward+0x2812>
	else if (__tmp > 65535)
    4b2a:	fe 01       	movw	r30, r28
    4b2c:	e3 5f       	subi	r30, 0xF3	; 243
    4b2e:	fd 4f       	sbci	r31, 0xFD	; 253
    4b30:	60 81       	ld	r22, Z
    4b32:	71 81       	ldd	r23, Z+1	; 0x01
    4b34:	82 81       	ldd	r24, Z+2	; 0x02
    4b36:	93 81       	ldd	r25, Z+3	; 0x03
    4b38:	20 e0       	ldi	r18, 0x00	; 0
    4b3a:	3f ef       	ldi	r19, 0xFF	; 255
    4b3c:	4f e7       	ldi	r20, 0x7F	; 127
    4b3e:	57 e4       	ldi	r21, 0x47	; 71
    4b40:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4b44:	18 16       	cp	r1, r24
    4b46:	0c f0       	brlt	.+2      	; 0x4b4a <Forward+0x276a>
    4b48:	43 c0       	rjmp	.+134    	; 0x4bd0 <Forward+0x27f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b4a:	fe 01       	movw	r30, r28
    4b4c:	ef 5e       	subi	r30, 0xEF	; 239
    4b4e:	fd 4f       	sbci	r31, 0xFD	; 253
    4b50:	60 81       	ld	r22, Z
    4b52:	71 81       	ldd	r23, Z+1	; 0x01
    4b54:	82 81       	ldd	r24, Z+2	; 0x02
    4b56:	93 81       	ldd	r25, Z+3	; 0x03
    4b58:	20 e0       	ldi	r18, 0x00	; 0
    4b5a:	30 e0       	ldi	r19, 0x00	; 0
    4b5c:	40 e2       	ldi	r20, 0x20	; 32
    4b5e:	51 e4       	ldi	r21, 0x41	; 65
    4b60:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4b64:	dc 01       	movw	r26, r24
    4b66:	cb 01       	movw	r24, r22
    4b68:	8e 01       	movw	r16, r28
    4b6a:	05 5f       	subi	r16, 0xF5	; 245
    4b6c:	1d 4f       	sbci	r17, 0xFD	; 253
    4b6e:	bc 01       	movw	r22, r24
    4b70:	cd 01       	movw	r24, r26
    4b72:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4b76:	dc 01       	movw	r26, r24
    4b78:	cb 01       	movw	r24, r22
    4b7a:	f8 01       	movw	r30, r16
    4b7c:	91 83       	std	Z+1, r25	; 0x01
    4b7e:	80 83       	st	Z, r24
    4b80:	1f c0       	rjmp	.+62     	; 0x4bc0 <Forward+0x27e0>
    4b82:	fe 01       	movw	r30, r28
    4b84:	e7 5f       	subi	r30, 0xF7	; 247
    4b86:	fd 4f       	sbci	r31, 0xFD	; 253
    4b88:	80 e9       	ldi	r24, 0x90	; 144
    4b8a:	91 e0       	ldi	r25, 0x01	; 1
    4b8c:	91 83       	std	Z+1, r25	; 0x01
    4b8e:	80 83       	st	Z, r24
    4b90:	fe 01       	movw	r30, r28
    4b92:	e7 5f       	subi	r30, 0xF7	; 247
    4b94:	fd 4f       	sbci	r31, 0xFD	; 253
    4b96:	80 81       	ld	r24, Z
    4b98:	91 81       	ldd	r25, Z+1	; 0x01
    4b9a:	01 97       	sbiw	r24, 0x01	; 1
    4b9c:	f1 f7       	brne	.-4      	; 0x4b9a <Forward+0x27ba>
    4b9e:	fe 01       	movw	r30, r28
    4ba0:	e7 5f       	subi	r30, 0xF7	; 247
    4ba2:	fd 4f       	sbci	r31, 0xFD	; 253
    4ba4:	91 83       	std	Z+1, r25	; 0x01
    4ba6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ba8:	de 01       	movw	r26, r28
    4baa:	a5 5f       	subi	r26, 0xF5	; 245
    4bac:	bd 4f       	sbci	r27, 0xFD	; 253
    4bae:	fe 01       	movw	r30, r28
    4bb0:	e5 5f       	subi	r30, 0xF5	; 245
    4bb2:	fd 4f       	sbci	r31, 0xFD	; 253
    4bb4:	80 81       	ld	r24, Z
    4bb6:	91 81       	ldd	r25, Z+1	; 0x01
    4bb8:	01 97       	sbiw	r24, 0x01	; 1
    4bba:	11 96       	adiw	r26, 0x01	; 1
    4bbc:	9c 93       	st	X, r25
    4bbe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4bc0:	fe 01       	movw	r30, r28
    4bc2:	e5 5f       	subi	r30, 0xF5	; 245
    4bc4:	fd 4f       	sbci	r31, 0xFD	; 253
    4bc6:	80 81       	ld	r24, Z
    4bc8:	91 81       	ldd	r25, Z+1	; 0x01
    4bca:	00 97       	sbiw	r24, 0x00	; 0
    4bcc:	d1 f6       	brne	.-76     	; 0x4b82 <Forward+0x27a2>
    4bce:	27 c0       	rjmp	.+78     	; 0x4c1e <Forward+0x283e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4bd0:	8e 01       	movw	r16, r28
    4bd2:	05 5f       	subi	r16, 0xF5	; 245
    4bd4:	1d 4f       	sbci	r17, 0xFD	; 253
    4bd6:	fe 01       	movw	r30, r28
    4bd8:	e3 5f       	subi	r30, 0xF3	; 243
    4bda:	fd 4f       	sbci	r31, 0xFD	; 253
    4bdc:	60 81       	ld	r22, Z
    4bde:	71 81       	ldd	r23, Z+1	; 0x01
    4be0:	82 81       	ldd	r24, Z+2	; 0x02
    4be2:	93 81       	ldd	r25, Z+3	; 0x03
    4be4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4be8:	dc 01       	movw	r26, r24
    4bea:	cb 01       	movw	r24, r22
    4bec:	f8 01       	movw	r30, r16
    4bee:	91 83       	std	Z+1, r25	; 0x01
    4bf0:	80 83       	st	Z, r24
    4bf2:	de 01       	movw	r26, r28
    4bf4:	a9 5f       	subi	r26, 0xF9	; 249
    4bf6:	bd 4f       	sbci	r27, 0xFD	; 253
    4bf8:	fe 01       	movw	r30, r28
    4bfa:	e5 5f       	subi	r30, 0xF5	; 245
    4bfc:	fd 4f       	sbci	r31, 0xFD	; 253
    4bfe:	80 81       	ld	r24, Z
    4c00:	91 81       	ldd	r25, Z+1	; 0x01
    4c02:	8d 93       	st	X+, r24
    4c04:	9c 93       	st	X, r25
    4c06:	fe 01       	movw	r30, r28
    4c08:	e9 5f       	subi	r30, 0xF9	; 249
    4c0a:	fd 4f       	sbci	r31, 0xFD	; 253
    4c0c:	80 81       	ld	r24, Z
    4c0e:	91 81       	ldd	r25, Z+1	; 0x01
    4c10:	01 97       	sbiw	r24, 0x01	; 1
    4c12:	f1 f7       	brne	.-4      	; 0x4c10 <Forward+0x2830>
    4c14:	fe 01       	movw	r30, r28
    4c16:	e9 5f       	subi	r30, 0xF9	; 249
    4c18:	fd 4f       	sbci	r31, 0xFD	; 253
    4c1a:	91 83       	std	Z+1, r25	; 0x01
    4c1c:	80 83       	st	Z, r24
	_delay_ms(500);
	angle10 = POSN5;
    4c1e:	8c e0       	ldi	r24, 0x0C	; 12
    4c20:	80 93 72 00 	sts	0x0072, r24
    4c24:	fe 01       	movw	r30, r28
    4c26:	ed 5f       	subi	r30, 0xFD	; 253
    4c28:	fd 4f       	sbci	r31, 0xFD	; 253
    4c2a:	80 e0       	ldi	r24, 0x00	; 0
    4c2c:	90 e0       	ldi	r25, 0x00	; 0
    4c2e:	ac e8       	ldi	r26, 0x8C	; 140
    4c30:	b2 e4       	ldi	r27, 0x42	; 66
    4c32:	80 83       	st	Z, r24
    4c34:	91 83       	std	Z+1, r25	; 0x01
    4c36:	a2 83       	std	Z+2, r26	; 0x02
    4c38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c3a:	8e 01       	movw	r16, r28
    4c3c:	01 50       	subi	r16, 0x01	; 1
    4c3e:	1e 4f       	sbci	r17, 0xFE	; 254
    4c40:	fe 01       	movw	r30, r28
    4c42:	ed 5f       	subi	r30, 0xFD	; 253
    4c44:	fd 4f       	sbci	r31, 0xFD	; 253
    4c46:	60 81       	ld	r22, Z
    4c48:	71 81       	ldd	r23, Z+1	; 0x01
    4c4a:	82 81       	ldd	r24, Z+2	; 0x02
    4c4c:	93 81       	ldd	r25, Z+3	; 0x03
    4c4e:	20 e0       	ldi	r18, 0x00	; 0
    4c50:	30 e0       	ldi	r19, 0x00	; 0
    4c52:	4a e7       	ldi	r20, 0x7A	; 122
    4c54:	55 e4       	ldi	r21, 0x45	; 69
    4c56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4c5a:	dc 01       	movw	r26, r24
    4c5c:	cb 01       	movw	r24, r22
    4c5e:	f8 01       	movw	r30, r16
    4c60:	80 83       	st	Z, r24
    4c62:	91 83       	std	Z+1, r25	; 0x01
    4c64:	a2 83       	std	Z+2, r26	; 0x02
    4c66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c68:	fe 01       	movw	r30, r28
    4c6a:	e1 50       	subi	r30, 0x01	; 1
    4c6c:	fe 4f       	sbci	r31, 0xFE	; 254
    4c6e:	60 81       	ld	r22, Z
    4c70:	71 81       	ldd	r23, Z+1	; 0x01
    4c72:	82 81       	ldd	r24, Z+2	; 0x02
    4c74:	93 81       	ldd	r25, Z+3	; 0x03
    4c76:	20 e0       	ldi	r18, 0x00	; 0
    4c78:	30 e0       	ldi	r19, 0x00	; 0
    4c7a:	40 e8       	ldi	r20, 0x80	; 128
    4c7c:	5f e3       	ldi	r21, 0x3F	; 63
    4c7e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4c82:	88 23       	and	r24, r24
    4c84:	44 f4       	brge	.+16     	; 0x4c96 <Forward+0x28b6>
		__ticks = 1;
    4c86:	fe 01       	movw	r30, r28
    4c88:	e3 50       	subi	r30, 0x03	; 3
    4c8a:	fe 4f       	sbci	r31, 0xFE	; 254
    4c8c:	81 e0       	ldi	r24, 0x01	; 1
    4c8e:	90 e0       	ldi	r25, 0x00	; 0
    4c90:	91 83       	std	Z+1, r25	; 0x01
    4c92:	80 83       	st	Z, r24
    4c94:	64 c0       	rjmp	.+200    	; 0x4d5e <Forward+0x297e>
	else if (__tmp > 65535)
    4c96:	fe 01       	movw	r30, r28
    4c98:	e1 50       	subi	r30, 0x01	; 1
    4c9a:	fe 4f       	sbci	r31, 0xFE	; 254
    4c9c:	60 81       	ld	r22, Z
    4c9e:	71 81       	ldd	r23, Z+1	; 0x01
    4ca0:	82 81       	ldd	r24, Z+2	; 0x02
    4ca2:	93 81       	ldd	r25, Z+3	; 0x03
    4ca4:	20 e0       	ldi	r18, 0x00	; 0
    4ca6:	3f ef       	ldi	r19, 0xFF	; 255
    4ca8:	4f e7       	ldi	r20, 0x7F	; 127
    4caa:	57 e4       	ldi	r21, 0x47	; 71
    4cac:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4cb0:	18 16       	cp	r1, r24
    4cb2:	0c f0       	brlt	.+2      	; 0x4cb6 <Forward+0x28d6>
    4cb4:	43 c0       	rjmp	.+134    	; 0x4d3c <Forward+0x295c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4cb6:	fe 01       	movw	r30, r28
    4cb8:	ed 5f       	subi	r30, 0xFD	; 253
    4cba:	fd 4f       	sbci	r31, 0xFD	; 253
    4cbc:	60 81       	ld	r22, Z
    4cbe:	71 81       	ldd	r23, Z+1	; 0x01
    4cc0:	82 81       	ldd	r24, Z+2	; 0x02
    4cc2:	93 81       	ldd	r25, Z+3	; 0x03
    4cc4:	20 e0       	ldi	r18, 0x00	; 0
    4cc6:	30 e0       	ldi	r19, 0x00	; 0
    4cc8:	40 e2       	ldi	r20, 0x20	; 32
    4cca:	51 e4       	ldi	r21, 0x41	; 65
    4ccc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4cd0:	dc 01       	movw	r26, r24
    4cd2:	cb 01       	movw	r24, r22
    4cd4:	8e 01       	movw	r16, r28
    4cd6:	03 50       	subi	r16, 0x03	; 3
    4cd8:	1e 4f       	sbci	r17, 0xFE	; 254
    4cda:	bc 01       	movw	r22, r24
    4cdc:	cd 01       	movw	r24, r26
    4cde:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ce2:	dc 01       	movw	r26, r24
    4ce4:	cb 01       	movw	r24, r22
    4ce6:	f8 01       	movw	r30, r16
    4ce8:	91 83       	std	Z+1, r25	; 0x01
    4cea:	80 83       	st	Z, r24
    4cec:	1f c0       	rjmp	.+62     	; 0x4d2c <Forward+0x294c>
    4cee:	fe 01       	movw	r30, r28
    4cf0:	e5 50       	subi	r30, 0x05	; 5
    4cf2:	fe 4f       	sbci	r31, 0xFE	; 254
    4cf4:	80 e9       	ldi	r24, 0x90	; 144
    4cf6:	91 e0       	ldi	r25, 0x01	; 1
    4cf8:	91 83       	std	Z+1, r25	; 0x01
    4cfa:	80 83       	st	Z, r24
    4cfc:	fe 01       	movw	r30, r28
    4cfe:	e5 50       	subi	r30, 0x05	; 5
    4d00:	fe 4f       	sbci	r31, 0xFE	; 254
    4d02:	80 81       	ld	r24, Z
    4d04:	91 81       	ldd	r25, Z+1	; 0x01
    4d06:	01 97       	sbiw	r24, 0x01	; 1
    4d08:	f1 f7       	brne	.-4      	; 0x4d06 <Forward+0x2926>
    4d0a:	fe 01       	movw	r30, r28
    4d0c:	e5 50       	subi	r30, 0x05	; 5
    4d0e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d10:	91 83       	std	Z+1, r25	; 0x01
    4d12:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d14:	de 01       	movw	r26, r28
    4d16:	a3 50       	subi	r26, 0x03	; 3
    4d18:	be 4f       	sbci	r27, 0xFE	; 254
    4d1a:	fe 01       	movw	r30, r28
    4d1c:	e3 50       	subi	r30, 0x03	; 3
    4d1e:	fe 4f       	sbci	r31, 0xFE	; 254
    4d20:	80 81       	ld	r24, Z
    4d22:	91 81       	ldd	r25, Z+1	; 0x01
    4d24:	01 97       	sbiw	r24, 0x01	; 1
    4d26:	11 96       	adiw	r26, 0x01	; 1
    4d28:	9c 93       	st	X, r25
    4d2a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d2c:	fe 01       	movw	r30, r28
    4d2e:	e3 50       	subi	r30, 0x03	; 3
    4d30:	fe 4f       	sbci	r31, 0xFE	; 254
    4d32:	80 81       	ld	r24, Z
    4d34:	91 81       	ldd	r25, Z+1	; 0x01
    4d36:	00 97       	sbiw	r24, 0x00	; 0
    4d38:	d1 f6       	brne	.-76     	; 0x4cee <Forward+0x290e>
    4d3a:	27 c0       	rjmp	.+78     	; 0x4d8a <Forward+0x29aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d3c:	8e 01       	movw	r16, r28
    4d3e:	03 50       	subi	r16, 0x03	; 3
    4d40:	1e 4f       	sbci	r17, 0xFE	; 254
    4d42:	fe 01       	movw	r30, r28
    4d44:	e1 50       	subi	r30, 0x01	; 1
    4d46:	fe 4f       	sbci	r31, 0xFE	; 254
    4d48:	60 81       	ld	r22, Z
    4d4a:	71 81       	ldd	r23, Z+1	; 0x01
    4d4c:	82 81       	ldd	r24, Z+2	; 0x02
    4d4e:	93 81       	ldd	r25, Z+3	; 0x03
    4d50:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4d54:	dc 01       	movw	r26, r24
    4d56:	cb 01       	movw	r24, r22
    4d58:	f8 01       	movw	r30, r16
    4d5a:	91 83       	std	Z+1, r25	; 0x01
    4d5c:	80 83       	st	Z, r24
    4d5e:	de 01       	movw	r26, r28
    4d60:	a7 50       	subi	r26, 0x07	; 7
    4d62:	be 4f       	sbci	r27, 0xFE	; 254
    4d64:	fe 01       	movw	r30, r28
    4d66:	e3 50       	subi	r30, 0x03	; 3
    4d68:	fe 4f       	sbci	r31, 0xFE	; 254
    4d6a:	80 81       	ld	r24, Z
    4d6c:	91 81       	ldd	r25, Z+1	; 0x01
    4d6e:	8d 93       	st	X+, r24
    4d70:	9c 93       	st	X, r25
    4d72:	fe 01       	movw	r30, r28
    4d74:	e7 50       	subi	r30, 0x07	; 7
    4d76:	fe 4f       	sbci	r31, 0xFE	; 254
    4d78:	80 81       	ld	r24, Z
    4d7a:	91 81       	ldd	r25, Z+1	; 0x01
    4d7c:	01 97       	sbiw	r24, 0x01	; 1
    4d7e:	f1 f7       	brne	.-4      	; 0x4d7c <Forward+0x299c>
    4d80:	fe 01       	movw	r30, r28
    4d82:	e7 50       	subi	r30, 0x07	; 7
    4d84:	fe 4f       	sbci	r31, 0xFE	; 254
    4d86:	91 83       	std	Z+1, r25	; 0x01
    4d88:	80 83       	st	Z, r24
	_delay_ms(70);
	angle10 = POSN4;
    4d8a:	8b e0       	ldi	r24, 0x0B	; 11
    4d8c:	80 93 72 00 	sts	0x0072, r24
    4d90:	fe 01       	movw	r30, r28
    4d92:	eb 50       	subi	r30, 0x0B	; 11
    4d94:	fe 4f       	sbci	r31, 0xFE	; 254
    4d96:	80 e0       	ldi	r24, 0x00	; 0
    4d98:	90 e0       	ldi	r25, 0x00	; 0
    4d9a:	ac e8       	ldi	r26, 0x8C	; 140
    4d9c:	b2 e4       	ldi	r27, 0x42	; 66
    4d9e:	80 83       	st	Z, r24
    4da0:	91 83       	std	Z+1, r25	; 0x01
    4da2:	a2 83       	std	Z+2, r26	; 0x02
    4da4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4da6:	8e 01       	movw	r16, r28
    4da8:	0f 50       	subi	r16, 0x0F	; 15
    4daa:	1e 4f       	sbci	r17, 0xFE	; 254
    4dac:	fe 01       	movw	r30, r28
    4dae:	eb 50       	subi	r30, 0x0B	; 11
    4db0:	fe 4f       	sbci	r31, 0xFE	; 254
    4db2:	60 81       	ld	r22, Z
    4db4:	71 81       	ldd	r23, Z+1	; 0x01
    4db6:	82 81       	ldd	r24, Z+2	; 0x02
    4db8:	93 81       	ldd	r25, Z+3	; 0x03
    4dba:	20 e0       	ldi	r18, 0x00	; 0
    4dbc:	30 e0       	ldi	r19, 0x00	; 0
    4dbe:	4a e7       	ldi	r20, 0x7A	; 122
    4dc0:	55 e4       	ldi	r21, 0x45	; 69
    4dc2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4dc6:	dc 01       	movw	r26, r24
    4dc8:	cb 01       	movw	r24, r22
    4dca:	f8 01       	movw	r30, r16
    4dcc:	80 83       	st	Z, r24
    4dce:	91 83       	std	Z+1, r25	; 0x01
    4dd0:	a2 83       	std	Z+2, r26	; 0x02
    4dd2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4dd4:	fe 01       	movw	r30, r28
    4dd6:	ef 50       	subi	r30, 0x0F	; 15
    4dd8:	fe 4f       	sbci	r31, 0xFE	; 254
    4dda:	60 81       	ld	r22, Z
    4ddc:	71 81       	ldd	r23, Z+1	; 0x01
    4dde:	82 81       	ldd	r24, Z+2	; 0x02
    4de0:	93 81       	ldd	r25, Z+3	; 0x03
    4de2:	20 e0       	ldi	r18, 0x00	; 0
    4de4:	30 e0       	ldi	r19, 0x00	; 0
    4de6:	40 e8       	ldi	r20, 0x80	; 128
    4de8:	5f e3       	ldi	r21, 0x3F	; 63
    4dea:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4dee:	88 23       	and	r24, r24
    4df0:	44 f4       	brge	.+16     	; 0x4e02 <Forward+0x2a22>
		__ticks = 1;
    4df2:	fe 01       	movw	r30, r28
    4df4:	e1 51       	subi	r30, 0x11	; 17
    4df6:	fe 4f       	sbci	r31, 0xFE	; 254
    4df8:	81 e0       	ldi	r24, 0x01	; 1
    4dfa:	90 e0       	ldi	r25, 0x00	; 0
    4dfc:	91 83       	std	Z+1, r25	; 0x01
    4dfe:	80 83       	st	Z, r24
    4e00:	64 c0       	rjmp	.+200    	; 0x4eca <Forward+0x2aea>
	else if (__tmp > 65535)
    4e02:	fe 01       	movw	r30, r28
    4e04:	ef 50       	subi	r30, 0x0F	; 15
    4e06:	fe 4f       	sbci	r31, 0xFE	; 254
    4e08:	60 81       	ld	r22, Z
    4e0a:	71 81       	ldd	r23, Z+1	; 0x01
    4e0c:	82 81       	ldd	r24, Z+2	; 0x02
    4e0e:	93 81       	ldd	r25, Z+3	; 0x03
    4e10:	20 e0       	ldi	r18, 0x00	; 0
    4e12:	3f ef       	ldi	r19, 0xFF	; 255
    4e14:	4f e7       	ldi	r20, 0x7F	; 127
    4e16:	57 e4       	ldi	r21, 0x47	; 71
    4e18:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4e1c:	18 16       	cp	r1, r24
    4e1e:	0c f0       	brlt	.+2      	; 0x4e22 <Forward+0x2a42>
    4e20:	43 c0       	rjmp	.+134    	; 0x4ea8 <Forward+0x2ac8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e22:	fe 01       	movw	r30, r28
    4e24:	eb 50       	subi	r30, 0x0B	; 11
    4e26:	fe 4f       	sbci	r31, 0xFE	; 254
    4e28:	60 81       	ld	r22, Z
    4e2a:	71 81       	ldd	r23, Z+1	; 0x01
    4e2c:	82 81       	ldd	r24, Z+2	; 0x02
    4e2e:	93 81       	ldd	r25, Z+3	; 0x03
    4e30:	20 e0       	ldi	r18, 0x00	; 0
    4e32:	30 e0       	ldi	r19, 0x00	; 0
    4e34:	40 e2       	ldi	r20, 0x20	; 32
    4e36:	51 e4       	ldi	r21, 0x41	; 65
    4e38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4e3c:	dc 01       	movw	r26, r24
    4e3e:	cb 01       	movw	r24, r22
    4e40:	8e 01       	movw	r16, r28
    4e42:	01 51       	subi	r16, 0x11	; 17
    4e44:	1e 4f       	sbci	r17, 0xFE	; 254
    4e46:	bc 01       	movw	r22, r24
    4e48:	cd 01       	movw	r24, r26
    4e4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4e4e:	dc 01       	movw	r26, r24
    4e50:	cb 01       	movw	r24, r22
    4e52:	f8 01       	movw	r30, r16
    4e54:	91 83       	std	Z+1, r25	; 0x01
    4e56:	80 83       	st	Z, r24
    4e58:	1f c0       	rjmp	.+62     	; 0x4e98 <Forward+0x2ab8>
    4e5a:	fe 01       	movw	r30, r28
    4e5c:	e3 51       	subi	r30, 0x13	; 19
    4e5e:	fe 4f       	sbci	r31, 0xFE	; 254
    4e60:	80 e9       	ldi	r24, 0x90	; 144
    4e62:	91 e0       	ldi	r25, 0x01	; 1
    4e64:	91 83       	std	Z+1, r25	; 0x01
    4e66:	80 83       	st	Z, r24
    4e68:	fe 01       	movw	r30, r28
    4e6a:	e3 51       	subi	r30, 0x13	; 19
    4e6c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e6e:	80 81       	ld	r24, Z
    4e70:	91 81       	ldd	r25, Z+1	; 0x01
    4e72:	01 97       	sbiw	r24, 0x01	; 1
    4e74:	f1 f7       	brne	.-4      	; 0x4e72 <Forward+0x2a92>
    4e76:	fe 01       	movw	r30, r28
    4e78:	e3 51       	subi	r30, 0x13	; 19
    4e7a:	fe 4f       	sbci	r31, 0xFE	; 254
    4e7c:	91 83       	std	Z+1, r25	; 0x01
    4e7e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e80:	de 01       	movw	r26, r28
    4e82:	a1 51       	subi	r26, 0x11	; 17
    4e84:	be 4f       	sbci	r27, 0xFE	; 254
    4e86:	fe 01       	movw	r30, r28
    4e88:	e1 51       	subi	r30, 0x11	; 17
    4e8a:	fe 4f       	sbci	r31, 0xFE	; 254
    4e8c:	80 81       	ld	r24, Z
    4e8e:	91 81       	ldd	r25, Z+1	; 0x01
    4e90:	01 97       	sbiw	r24, 0x01	; 1
    4e92:	11 96       	adiw	r26, 0x01	; 1
    4e94:	9c 93       	st	X, r25
    4e96:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e98:	fe 01       	movw	r30, r28
    4e9a:	e1 51       	subi	r30, 0x11	; 17
    4e9c:	fe 4f       	sbci	r31, 0xFE	; 254
    4e9e:	80 81       	ld	r24, Z
    4ea0:	91 81       	ldd	r25, Z+1	; 0x01
    4ea2:	00 97       	sbiw	r24, 0x00	; 0
    4ea4:	d1 f6       	brne	.-76     	; 0x4e5a <Forward+0x2a7a>
    4ea6:	27 c0       	rjmp	.+78     	; 0x4ef6 <Forward+0x2b16>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ea8:	8e 01       	movw	r16, r28
    4eaa:	01 51       	subi	r16, 0x11	; 17
    4eac:	1e 4f       	sbci	r17, 0xFE	; 254
    4eae:	fe 01       	movw	r30, r28
    4eb0:	ef 50       	subi	r30, 0x0F	; 15
    4eb2:	fe 4f       	sbci	r31, 0xFE	; 254
    4eb4:	60 81       	ld	r22, Z
    4eb6:	71 81       	ldd	r23, Z+1	; 0x01
    4eb8:	82 81       	ldd	r24, Z+2	; 0x02
    4eba:	93 81       	ldd	r25, Z+3	; 0x03
    4ebc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4ec0:	dc 01       	movw	r26, r24
    4ec2:	cb 01       	movw	r24, r22
    4ec4:	f8 01       	movw	r30, r16
    4ec6:	91 83       	std	Z+1, r25	; 0x01
    4ec8:	80 83       	st	Z, r24
    4eca:	de 01       	movw	r26, r28
    4ecc:	a5 51       	subi	r26, 0x15	; 21
    4ece:	be 4f       	sbci	r27, 0xFE	; 254
    4ed0:	fe 01       	movw	r30, r28
    4ed2:	e1 51       	subi	r30, 0x11	; 17
    4ed4:	fe 4f       	sbci	r31, 0xFE	; 254
    4ed6:	80 81       	ld	r24, Z
    4ed8:	91 81       	ldd	r25, Z+1	; 0x01
    4eda:	8d 93       	st	X+, r24
    4edc:	9c 93       	st	X, r25
    4ede:	fe 01       	movw	r30, r28
    4ee0:	e5 51       	subi	r30, 0x15	; 21
    4ee2:	fe 4f       	sbci	r31, 0xFE	; 254
    4ee4:	80 81       	ld	r24, Z
    4ee6:	91 81       	ldd	r25, Z+1	; 0x01
    4ee8:	01 97       	sbiw	r24, 0x01	; 1
    4eea:	f1 f7       	brne	.-4      	; 0x4ee8 <Forward+0x2b08>
    4eec:	fe 01       	movw	r30, r28
    4eee:	e5 51       	subi	r30, 0x15	; 21
    4ef0:	fe 4f       	sbci	r31, 0xFE	; 254
    4ef2:	91 83       	std	Z+1, r25	; 0x01
    4ef4:	80 83       	st	Z, r24
	_delay_ms(70);
	angle10 = POSN3;
    4ef6:	8a e0       	ldi	r24, 0x0A	; 10
    4ef8:	80 93 72 00 	sts	0x0072, r24
    4efc:	fe 01       	movw	r30, r28
    4efe:	e9 51       	subi	r30, 0x19	; 25
    4f00:	fe 4f       	sbci	r31, 0xFE	; 254
    4f02:	80 e0       	ldi	r24, 0x00	; 0
    4f04:	90 e0       	ldi	r25, 0x00	; 0
    4f06:	aa ef       	ldi	r26, 0xFA	; 250
    4f08:	b3 e4       	ldi	r27, 0x43	; 67
    4f0a:	80 83       	st	Z, r24
    4f0c:	91 83       	std	Z+1, r25	; 0x01
    4f0e:	a2 83       	std	Z+2, r26	; 0x02
    4f10:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f12:	8e 01       	movw	r16, r28
    4f14:	0d 51       	subi	r16, 0x1D	; 29
    4f16:	1e 4f       	sbci	r17, 0xFE	; 254
    4f18:	fe 01       	movw	r30, r28
    4f1a:	e9 51       	subi	r30, 0x19	; 25
    4f1c:	fe 4f       	sbci	r31, 0xFE	; 254
    4f1e:	60 81       	ld	r22, Z
    4f20:	71 81       	ldd	r23, Z+1	; 0x01
    4f22:	82 81       	ldd	r24, Z+2	; 0x02
    4f24:	93 81       	ldd	r25, Z+3	; 0x03
    4f26:	20 e0       	ldi	r18, 0x00	; 0
    4f28:	30 e0       	ldi	r19, 0x00	; 0
    4f2a:	4a e7       	ldi	r20, 0x7A	; 122
    4f2c:	55 e4       	ldi	r21, 0x45	; 69
    4f2e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4f32:	dc 01       	movw	r26, r24
    4f34:	cb 01       	movw	r24, r22
    4f36:	f8 01       	movw	r30, r16
    4f38:	80 83       	st	Z, r24
    4f3a:	91 83       	std	Z+1, r25	; 0x01
    4f3c:	a2 83       	std	Z+2, r26	; 0x02
    4f3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4f40:	fe 01       	movw	r30, r28
    4f42:	ed 51       	subi	r30, 0x1D	; 29
    4f44:	fe 4f       	sbci	r31, 0xFE	; 254
    4f46:	60 81       	ld	r22, Z
    4f48:	71 81       	ldd	r23, Z+1	; 0x01
    4f4a:	82 81       	ldd	r24, Z+2	; 0x02
    4f4c:	93 81       	ldd	r25, Z+3	; 0x03
    4f4e:	20 e0       	ldi	r18, 0x00	; 0
    4f50:	30 e0       	ldi	r19, 0x00	; 0
    4f52:	40 e8       	ldi	r20, 0x80	; 128
    4f54:	5f e3       	ldi	r21, 0x3F	; 63
    4f56:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    4f5a:	88 23       	and	r24, r24
    4f5c:	44 f4       	brge	.+16     	; 0x4f6e <Forward+0x2b8e>
		__ticks = 1;
    4f5e:	fe 01       	movw	r30, r28
    4f60:	ef 51       	subi	r30, 0x1F	; 31
    4f62:	fe 4f       	sbci	r31, 0xFE	; 254
    4f64:	81 e0       	ldi	r24, 0x01	; 1
    4f66:	90 e0       	ldi	r25, 0x00	; 0
    4f68:	91 83       	std	Z+1, r25	; 0x01
    4f6a:	80 83       	st	Z, r24
    4f6c:	64 c0       	rjmp	.+200    	; 0x5036 <Forward+0x2c56>
	else if (__tmp > 65535)
    4f6e:	fe 01       	movw	r30, r28
    4f70:	ed 51       	subi	r30, 0x1D	; 29
    4f72:	fe 4f       	sbci	r31, 0xFE	; 254
    4f74:	60 81       	ld	r22, Z
    4f76:	71 81       	ldd	r23, Z+1	; 0x01
    4f78:	82 81       	ldd	r24, Z+2	; 0x02
    4f7a:	93 81       	ldd	r25, Z+3	; 0x03
    4f7c:	20 e0       	ldi	r18, 0x00	; 0
    4f7e:	3f ef       	ldi	r19, 0xFF	; 255
    4f80:	4f e7       	ldi	r20, 0x7F	; 127
    4f82:	57 e4       	ldi	r21, 0x47	; 71
    4f84:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    4f88:	18 16       	cp	r1, r24
    4f8a:	0c f0       	brlt	.+2      	; 0x4f8e <Forward+0x2bae>
    4f8c:	43 c0       	rjmp	.+134    	; 0x5014 <Forward+0x2c34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f8e:	fe 01       	movw	r30, r28
    4f90:	e9 51       	subi	r30, 0x19	; 25
    4f92:	fe 4f       	sbci	r31, 0xFE	; 254
    4f94:	60 81       	ld	r22, Z
    4f96:	71 81       	ldd	r23, Z+1	; 0x01
    4f98:	82 81       	ldd	r24, Z+2	; 0x02
    4f9a:	93 81       	ldd	r25, Z+3	; 0x03
    4f9c:	20 e0       	ldi	r18, 0x00	; 0
    4f9e:	30 e0       	ldi	r19, 0x00	; 0
    4fa0:	40 e2       	ldi	r20, 0x20	; 32
    4fa2:	51 e4       	ldi	r21, 0x41	; 65
    4fa4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4fa8:	dc 01       	movw	r26, r24
    4faa:	cb 01       	movw	r24, r22
    4fac:	8e 01       	movw	r16, r28
    4fae:	0f 51       	subi	r16, 0x1F	; 31
    4fb0:	1e 4f       	sbci	r17, 0xFE	; 254
    4fb2:	bc 01       	movw	r22, r24
    4fb4:	cd 01       	movw	r24, r26
    4fb6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4fba:	dc 01       	movw	r26, r24
    4fbc:	cb 01       	movw	r24, r22
    4fbe:	f8 01       	movw	r30, r16
    4fc0:	91 83       	std	Z+1, r25	; 0x01
    4fc2:	80 83       	st	Z, r24
    4fc4:	1f c0       	rjmp	.+62     	; 0x5004 <Forward+0x2c24>
    4fc6:	fe 01       	movw	r30, r28
    4fc8:	e1 52       	subi	r30, 0x21	; 33
    4fca:	fe 4f       	sbci	r31, 0xFE	; 254
    4fcc:	80 e9       	ldi	r24, 0x90	; 144
    4fce:	91 e0       	ldi	r25, 0x01	; 1
    4fd0:	91 83       	std	Z+1, r25	; 0x01
    4fd2:	80 83       	st	Z, r24
    4fd4:	fe 01       	movw	r30, r28
    4fd6:	e1 52       	subi	r30, 0x21	; 33
    4fd8:	fe 4f       	sbci	r31, 0xFE	; 254
    4fda:	80 81       	ld	r24, Z
    4fdc:	91 81       	ldd	r25, Z+1	; 0x01
    4fde:	01 97       	sbiw	r24, 0x01	; 1
    4fe0:	f1 f7       	brne	.-4      	; 0x4fde <Forward+0x2bfe>
    4fe2:	fe 01       	movw	r30, r28
    4fe4:	e1 52       	subi	r30, 0x21	; 33
    4fe6:	fe 4f       	sbci	r31, 0xFE	; 254
    4fe8:	91 83       	std	Z+1, r25	; 0x01
    4fea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fec:	de 01       	movw	r26, r28
    4fee:	af 51       	subi	r26, 0x1F	; 31
    4ff0:	be 4f       	sbci	r27, 0xFE	; 254
    4ff2:	fe 01       	movw	r30, r28
    4ff4:	ef 51       	subi	r30, 0x1F	; 31
    4ff6:	fe 4f       	sbci	r31, 0xFE	; 254
    4ff8:	80 81       	ld	r24, Z
    4ffa:	91 81       	ldd	r25, Z+1	; 0x01
    4ffc:	01 97       	sbiw	r24, 0x01	; 1
    4ffe:	11 96       	adiw	r26, 0x01	; 1
    5000:	9c 93       	st	X, r25
    5002:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5004:	fe 01       	movw	r30, r28
    5006:	ef 51       	subi	r30, 0x1F	; 31
    5008:	fe 4f       	sbci	r31, 0xFE	; 254
    500a:	80 81       	ld	r24, Z
    500c:	91 81       	ldd	r25, Z+1	; 0x01
    500e:	00 97       	sbiw	r24, 0x00	; 0
    5010:	d1 f6       	brne	.-76     	; 0x4fc6 <Forward+0x2be6>
    5012:	27 c0       	rjmp	.+78     	; 0x5062 <Forward+0x2c82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5014:	8e 01       	movw	r16, r28
    5016:	0f 51       	subi	r16, 0x1F	; 31
    5018:	1e 4f       	sbci	r17, 0xFE	; 254
    501a:	fe 01       	movw	r30, r28
    501c:	ed 51       	subi	r30, 0x1D	; 29
    501e:	fe 4f       	sbci	r31, 0xFE	; 254
    5020:	60 81       	ld	r22, Z
    5022:	71 81       	ldd	r23, Z+1	; 0x01
    5024:	82 81       	ldd	r24, Z+2	; 0x02
    5026:	93 81       	ldd	r25, Z+3	; 0x03
    5028:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    502c:	dc 01       	movw	r26, r24
    502e:	cb 01       	movw	r24, r22
    5030:	f8 01       	movw	r30, r16
    5032:	91 83       	std	Z+1, r25	; 0x01
    5034:	80 83       	st	Z, r24
    5036:	de 01       	movw	r26, r28
    5038:	a3 52       	subi	r26, 0x23	; 35
    503a:	be 4f       	sbci	r27, 0xFE	; 254
    503c:	fe 01       	movw	r30, r28
    503e:	ef 51       	subi	r30, 0x1F	; 31
    5040:	fe 4f       	sbci	r31, 0xFE	; 254
    5042:	80 81       	ld	r24, Z
    5044:	91 81       	ldd	r25, Z+1	; 0x01
    5046:	8d 93       	st	X+, r24
    5048:	9c 93       	st	X, r25
    504a:	fe 01       	movw	r30, r28
    504c:	e3 52       	subi	r30, 0x23	; 35
    504e:	fe 4f       	sbci	r31, 0xFE	; 254
    5050:	80 81       	ld	r24, Z
    5052:	91 81       	ldd	r25, Z+1	; 0x01
    5054:	01 97       	sbiw	r24, 0x01	; 1
    5056:	f1 f7       	brne	.-4      	; 0x5054 <Forward+0x2c74>
    5058:	fe 01       	movw	r30, r28
    505a:	e3 52       	subi	r30, 0x23	; 35
    505c:	fe 4f       	sbci	r31, 0xFE	; 254
    505e:	91 83       	std	Z+1, r25	; 0x01
    5060:	80 83       	st	Z, r24
	_delay_ms(500);
	angle12 = POSN4;
    5062:	8b e0       	ldi	r24, 0x0B	; 11
    5064:	80 93 74 00 	sts	0x0074, r24
    5068:	fe 01       	movw	r30, r28
    506a:	e7 52       	subi	r30, 0x27	; 39
    506c:	fe 4f       	sbci	r31, 0xFE	; 254
    506e:	80 e0       	ldi	r24, 0x00	; 0
    5070:	90 e0       	ldi	r25, 0x00	; 0
    5072:	ac e8       	ldi	r26, 0x8C	; 140
    5074:	b2 e4       	ldi	r27, 0x42	; 66
    5076:	80 83       	st	Z, r24
    5078:	91 83       	std	Z+1, r25	; 0x01
    507a:	a2 83       	std	Z+2, r26	; 0x02
    507c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    507e:	8e 01       	movw	r16, r28
    5080:	0b 52       	subi	r16, 0x2B	; 43
    5082:	1e 4f       	sbci	r17, 0xFE	; 254
    5084:	fe 01       	movw	r30, r28
    5086:	e7 52       	subi	r30, 0x27	; 39
    5088:	fe 4f       	sbci	r31, 0xFE	; 254
    508a:	60 81       	ld	r22, Z
    508c:	71 81       	ldd	r23, Z+1	; 0x01
    508e:	82 81       	ldd	r24, Z+2	; 0x02
    5090:	93 81       	ldd	r25, Z+3	; 0x03
    5092:	20 e0       	ldi	r18, 0x00	; 0
    5094:	30 e0       	ldi	r19, 0x00	; 0
    5096:	4a e7       	ldi	r20, 0x7A	; 122
    5098:	55 e4       	ldi	r21, 0x45	; 69
    509a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    509e:	dc 01       	movw	r26, r24
    50a0:	cb 01       	movw	r24, r22
    50a2:	f8 01       	movw	r30, r16
    50a4:	80 83       	st	Z, r24
    50a6:	91 83       	std	Z+1, r25	; 0x01
    50a8:	a2 83       	std	Z+2, r26	; 0x02
    50aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    50ac:	fe 01       	movw	r30, r28
    50ae:	eb 52       	subi	r30, 0x2B	; 43
    50b0:	fe 4f       	sbci	r31, 0xFE	; 254
    50b2:	60 81       	ld	r22, Z
    50b4:	71 81       	ldd	r23, Z+1	; 0x01
    50b6:	82 81       	ldd	r24, Z+2	; 0x02
    50b8:	93 81       	ldd	r25, Z+3	; 0x03
    50ba:	20 e0       	ldi	r18, 0x00	; 0
    50bc:	30 e0       	ldi	r19, 0x00	; 0
    50be:	40 e8       	ldi	r20, 0x80	; 128
    50c0:	5f e3       	ldi	r21, 0x3F	; 63
    50c2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    50c6:	88 23       	and	r24, r24
    50c8:	44 f4       	brge	.+16     	; 0x50da <Forward+0x2cfa>
		__ticks = 1;
    50ca:	fe 01       	movw	r30, r28
    50cc:	ed 52       	subi	r30, 0x2D	; 45
    50ce:	fe 4f       	sbci	r31, 0xFE	; 254
    50d0:	81 e0       	ldi	r24, 0x01	; 1
    50d2:	90 e0       	ldi	r25, 0x00	; 0
    50d4:	91 83       	std	Z+1, r25	; 0x01
    50d6:	80 83       	st	Z, r24
    50d8:	64 c0       	rjmp	.+200    	; 0x51a2 <Forward+0x2dc2>
	else if (__tmp > 65535)
    50da:	fe 01       	movw	r30, r28
    50dc:	eb 52       	subi	r30, 0x2B	; 43
    50de:	fe 4f       	sbci	r31, 0xFE	; 254
    50e0:	60 81       	ld	r22, Z
    50e2:	71 81       	ldd	r23, Z+1	; 0x01
    50e4:	82 81       	ldd	r24, Z+2	; 0x02
    50e6:	93 81       	ldd	r25, Z+3	; 0x03
    50e8:	20 e0       	ldi	r18, 0x00	; 0
    50ea:	3f ef       	ldi	r19, 0xFF	; 255
    50ec:	4f e7       	ldi	r20, 0x7F	; 127
    50ee:	57 e4       	ldi	r21, 0x47	; 71
    50f0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    50f4:	18 16       	cp	r1, r24
    50f6:	0c f0       	brlt	.+2      	; 0x50fa <Forward+0x2d1a>
    50f8:	43 c0       	rjmp	.+134    	; 0x5180 <Forward+0x2da0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50fa:	fe 01       	movw	r30, r28
    50fc:	e7 52       	subi	r30, 0x27	; 39
    50fe:	fe 4f       	sbci	r31, 0xFE	; 254
    5100:	60 81       	ld	r22, Z
    5102:	71 81       	ldd	r23, Z+1	; 0x01
    5104:	82 81       	ldd	r24, Z+2	; 0x02
    5106:	93 81       	ldd	r25, Z+3	; 0x03
    5108:	20 e0       	ldi	r18, 0x00	; 0
    510a:	30 e0       	ldi	r19, 0x00	; 0
    510c:	40 e2       	ldi	r20, 0x20	; 32
    510e:	51 e4       	ldi	r21, 0x41	; 65
    5110:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5114:	dc 01       	movw	r26, r24
    5116:	cb 01       	movw	r24, r22
    5118:	8e 01       	movw	r16, r28
    511a:	0d 52       	subi	r16, 0x2D	; 45
    511c:	1e 4f       	sbci	r17, 0xFE	; 254
    511e:	bc 01       	movw	r22, r24
    5120:	cd 01       	movw	r24, r26
    5122:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5126:	dc 01       	movw	r26, r24
    5128:	cb 01       	movw	r24, r22
    512a:	f8 01       	movw	r30, r16
    512c:	91 83       	std	Z+1, r25	; 0x01
    512e:	80 83       	st	Z, r24
    5130:	1f c0       	rjmp	.+62     	; 0x5170 <Forward+0x2d90>
    5132:	fe 01       	movw	r30, r28
    5134:	ef 52       	subi	r30, 0x2F	; 47
    5136:	fe 4f       	sbci	r31, 0xFE	; 254
    5138:	80 e9       	ldi	r24, 0x90	; 144
    513a:	91 e0       	ldi	r25, 0x01	; 1
    513c:	91 83       	std	Z+1, r25	; 0x01
    513e:	80 83       	st	Z, r24
    5140:	fe 01       	movw	r30, r28
    5142:	ef 52       	subi	r30, 0x2F	; 47
    5144:	fe 4f       	sbci	r31, 0xFE	; 254
    5146:	80 81       	ld	r24, Z
    5148:	91 81       	ldd	r25, Z+1	; 0x01
    514a:	01 97       	sbiw	r24, 0x01	; 1
    514c:	f1 f7       	brne	.-4      	; 0x514a <Forward+0x2d6a>
    514e:	fe 01       	movw	r30, r28
    5150:	ef 52       	subi	r30, 0x2F	; 47
    5152:	fe 4f       	sbci	r31, 0xFE	; 254
    5154:	91 83       	std	Z+1, r25	; 0x01
    5156:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5158:	de 01       	movw	r26, r28
    515a:	ad 52       	subi	r26, 0x2D	; 45
    515c:	be 4f       	sbci	r27, 0xFE	; 254
    515e:	fe 01       	movw	r30, r28
    5160:	ed 52       	subi	r30, 0x2D	; 45
    5162:	fe 4f       	sbci	r31, 0xFE	; 254
    5164:	80 81       	ld	r24, Z
    5166:	91 81       	ldd	r25, Z+1	; 0x01
    5168:	01 97       	sbiw	r24, 0x01	; 1
    516a:	11 96       	adiw	r26, 0x01	; 1
    516c:	9c 93       	st	X, r25
    516e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5170:	fe 01       	movw	r30, r28
    5172:	ed 52       	subi	r30, 0x2D	; 45
    5174:	fe 4f       	sbci	r31, 0xFE	; 254
    5176:	80 81       	ld	r24, Z
    5178:	91 81       	ldd	r25, Z+1	; 0x01
    517a:	00 97       	sbiw	r24, 0x00	; 0
    517c:	d1 f6       	brne	.-76     	; 0x5132 <Forward+0x2d52>
    517e:	27 c0       	rjmp	.+78     	; 0x51ce <Forward+0x2dee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5180:	8e 01       	movw	r16, r28
    5182:	0d 52       	subi	r16, 0x2D	; 45
    5184:	1e 4f       	sbci	r17, 0xFE	; 254
    5186:	fe 01       	movw	r30, r28
    5188:	eb 52       	subi	r30, 0x2B	; 43
    518a:	fe 4f       	sbci	r31, 0xFE	; 254
    518c:	60 81       	ld	r22, Z
    518e:	71 81       	ldd	r23, Z+1	; 0x01
    5190:	82 81       	ldd	r24, Z+2	; 0x02
    5192:	93 81       	ldd	r25, Z+3	; 0x03
    5194:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5198:	dc 01       	movw	r26, r24
    519a:	cb 01       	movw	r24, r22
    519c:	f8 01       	movw	r30, r16
    519e:	91 83       	std	Z+1, r25	; 0x01
    51a0:	80 83       	st	Z, r24
    51a2:	de 01       	movw	r26, r28
    51a4:	a1 53       	subi	r26, 0x31	; 49
    51a6:	be 4f       	sbci	r27, 0xFE	; 254
    51a8:	fe 01       	movw	r30, r28
    51aa:	ed 52       	subi	r30, 0x2D	; 45
    51ac:	fe 4f       	sbci	r31, 0xFE	; 254
    51ae:	80 81       	ld	r24, Z
    51b0:	91 81       	ldd	r25, Z+1	; 0x01
    51b2:	8d 93       	st	X+, r24
    51b4:	9c 93       	st	X, r25
    51b6:	fe 01       	movw	r30, r28
    51b8:	e1 53       	subi	r30, 0x31	; 49
    51ba:	fe 4f       	sbci	r31, 0xFE	; 254
    51bc:	80 81       	ld	r24, Z
    51be:	91 81       	ldd	r25, Z+1	; 0x01
    51c0:	01 97       	sbiw	r24, 0x01	; 1
    51c2:	f1 f7       	brne	.-4      	; 0x51c0 <Forward+0x2de0>
    51c4:	fe 01       	movw	r30, r28
    51c6:	e1 53       	subi	r30, 0x31	; 49
    51c8:	fe 4f       	sbci	r31, 0xFE	; 254
    51ca:	91 83       	std	Z+1, r25	; 0x01
    51cc:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POSN5;
    51ce:	8c e0       	ldi	r24, 0x0C	; 12
    51d0:	80 93 74 00 	sts	0x0074, r24
    51d4:	fe 01       	movw	r30, r28
    51d6:	e5 53       	subi	r30, 0x35	; 53
    51d8:	fe 4f       	sbci	r31, 0xFE	; 254
    51da:	80 e0       	ldi	r24, 0x00	; 0
    51dc:	90 e0       	ldi	r25, 0x00	; 0
    51de:	ac e8       	ldi	r26, 0x8C	; 140
    51e0:	b2 e4       	ldi	r27, 0x42	; 66
    51e2:	80 83       	st	Z, r24
    51e4:	91 83       	std	Z+1, r25	; 0x01
    51e6:	a2 83       	std	Z+2, r26	; 0x02
    51e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    51ea:	8e 01       	movw	r16, r28
    51ec:	09 53       	subi	r16, 0x39	; 57
    51ee:	1e 4f       	sbci	r17, 0xFE	; 254
    51f0:	fe 01       	movw	r30, r28
    51f2:	e5 53       	subi	r30, 0x35	; 53
    51f4:	fe 4f       	sbci	r31, 0xFE	; 254
    51f6:	60 81       	ld	r22, Z
    51f8:	71 81       	ldd	r23, Z+1	; 0x01
    51fa:	82 81       	ldd	r24, Z+2	; 0x02
    51fc:	93 81       	ldd	r25, Z+3	; 0x03
    51fe:	20 e0       	ldi	r18, 0x00	; 0
    5200:	30 e0       	ldi	r19, 0x00	; 0
    5202:	4a e7       	ldi	r20, 0x7A	; 122
    5204:	55 e4       	ldi	r21, 0x45	; 69
    5206:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    520a:	dc 01       	movw	r26, r24
    520c:	cb 01       	movw	r24, r22
    520e:	f8 01       	movw	r30, r16
    5210:	80 83       	st	Z, r24
    5212:	91 83       	std	Z+1, r25	; 0x01
    5214:	a2 83       	std	Z+2, r26	; 0x02
    5216:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5218:	fe 01       	movw	r30, r28
    521a:	e9 53       	subi	r30, 0x39	; 57
    521c:	fe 4f       	sbci	r31, 0xFE	; 254
    521e:	60 81       	ld	r22, Z
    5220:	71 81       	ldd	r23, Z+1	; 0x01
    5222:	82 81       	ldd	r24, Z+2	; 0x02
    5224:	93 81       	ldd	r25, Z+3	; 0x03
    5226:	20 e0       	ldi	r18, 0x00	; 0
    5228:	30 e0       	ldi	r19, 0x00	; 0
    522a:	40 e8       	ldi	r20, 0x80	; 128
    522c:	5f e3       	ldi	r21, 0x3F	; 63
    522e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5232:	88 23       	and	r24, r24
    5234:	44 f4       	brge	.+16     	; 0x5246 <Forward+0x2e66>
		__ticks = 1;
    5236:	fe 01       	movw	r30, r28
    5238:	eb 53       	subi	r30, 0x3B	; 59
    523a:	fe 4f       	sbci	r31, 0xFE	; 254
    523c:	81 e0       	ldi	r24, 0x01	; 1
    523e:	90 e0       	ldi	r25, 0x00	; 0
    5240:	91 83       	std	Z+1, r25	; 0x01
    5242:	80 83       	st	Z, r24
    5244:	64 c0       	rjmp	.+200    	; 0x530e <Forward+0x2f2e>
	else if (__tmp > 65535)
    5246:	fe 01       	movw	r30, r28
    5248:	e9 53       	subi	r30, 0x39	; 57
    524a:	fe 4f       	sbci	r31, 0xFE	; 254
    524c:	60 81       	ld	r22, Z
    524e:	71 81       	ldd	r23, Z+1	; 0x01
    5250:	82 81       	ldd	r24, Z+2	; 0x02
    5252:	93 81       	ldd	r25, Z+3	; 0x03
    5254:	20 e0       	ldi	r18, 0x00	; 0
    5256:	3f ef       	ldi	r19, 0xFF	; 255
    5258:	4f e7       	ldi	r20, 0x7F	; 127
    525a:	57 e4       	ldi	r21, 0x47	; 71
    525c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5260:	18 16       	cp	r1, r24
    5262:	0c f0       	brlt	.+2      	; 0x5266 <Forward+0x2e86>
    5264:	43 c0       	rjmp	.+134    	; 0x52ec <Forward+0x2f0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5266:	fe 01       	movw	r30, r28
    5268:	e5 53       	subi	r30, 0x35	; 53
    526a:	fe 4f       	sbci	r31, 0xFE	; 254
    526c:	60 81       	ld	r22, Z
    526e:	71 81       	ldd	r23, Z+1	; 0x01
    5270:	82 81       	ldd	r24, Z+2	; 0x02
    5272:	93 81       	ldd	r25, Z+3	; 0x03
    5274:	20 e0       	ldi	r18, 0x00	; 0
    5276:	30 e0       	ldi	r19, 0x00	; 0
    5278:	40 e2       	ldi	r20, 0x20	; 32
    527a:	51 e4       	ldi	r21, 0x41	; 65
    527c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5280:	dc 01       	movw	r26, r24
    5282:	cb 01       	movw	r24, r22
    5284:	8e 01       	movw	r16, r28
    5286:	0b 53       	subi	r16, 0x3B	; 59
    5288:	1e 4f       	sbci	r17, 0xFE	; 254
    528a:	bc 01       	movw	r22, r24
    528c:	cd 01       	movw	r24, r26
    528e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5292:	dc 01       	movw	r26, r24
    5294:	cb 01       	movw	r24, r22
    5296:	f8 01       	movw	r30, r16
    5298:	91 83       	std	Z+1, r25	; 0x01
    529a:	80 83       	st	Z, r24
    529c:	1f c0       	rjmp	.+62     	; 0x52dc <Forward+0x2efc>
    529e:	fe 01       	movw	r30, r28
    52a0:	ed 53       	subi	r30, 0x3D	; 61
    52a2:	fe 4f       	sbci	r31, 0xFE	; 254
    52a4:	80 e9       	ldi	r24, 0x90	; 144
    52a6:	91 e0       	ldi	r25, 0x01	; 1
    52a8:	91 83       	std	Z+1, r25	; 0x01
    52aa:	80 83       	st	Z, r24
    52ac:	fe 01       	movw	r30, r28
    52ae:	ed 53       	subi	r30, 0x3D	; 61
    52b0:	fe 4f       	sbci	r31, 0xFE	; 254
    52b2:	80 81       	ld	r24, Z
    52b4:	91 81       	ldd	r25, Z+1	; 0x01
    52b6:	01 97       	sbiw	r24, 0x01	; 1
    52b8:	f1 f7       	brne	.-4      	; 0x52b6 <Forward+0x2ed6>
    52ba:	fe 01       	movw	r30, r28
    52bc:	ed 53       	subi	r30, 0x3D	; 61
    52be:	fe 4f       	sbci	r31, 0xFE	; 254
    52c0:	91 83       	std	Z+1, r25	; 0x01
    52c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    52c4:	de 01       	movw	r26, r28
    52c6:	ab 53       	subi	r26, 0x3B	; 59
    52c8:	be 4f       	sbci	r27, 0xFE	; 254
    52ca:	fe 01       	movw	r30, r28
    52cc:	eb 53       	subi	r30, 0x3B	; 59
    52ce:	fe 4f       	sbci	r31, 0xFE	; 254
    52d0:	80 81       	ld	r24, Z
    52d2:	91 81       	ldd	r25, Z+1	; 0x01
    52d4:	01 97       	sbiw	r24, 0x01	; 1
    52d6:	11 96       	adiw	r26, 0x01	; 1
    52d8:	9c 93       	st	X, r25
    52da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    52dc:	fe 01       	movw	r30, r28
    52de:	eb 53       	subi	r30, 0x3B	; 59
    52e0:	fe 4f       	sbci	r31, 0xFE	; 254
    52e2:	80 81       	ld	r24, Z
    52e4:	91 81       	ldd	r25, Z+1	; 0x01
    52e6:	00 97       	sbiw	r24, 0x00	; 0
    52e8:	d1 f6       	brne	.-76     	; 0x529e <Forward+0x2ebe>
    52ea:	27 c0       	rjmp	.+78     	; 0x533a <Forward+0x2f5a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    52ec:	8e 01       	movw	r16, r28
    52ee:	0b 53       	subi	r16, 0x3B	; 59
    52f0:	1e 4f       	sbci	r17, 0xFE	; 254
    52f2:	fe 01       	movw	r30, r28
    52f4:	e9 53       	subi	r30, 0x39	; 57
    52f6:	fe 4f       	sbci	r31, 0xFE	; 254
    52f8:	60 81       	ld	r22, Z
    52fa:	71 81       	ldd	r23, Z+1	; 0x01
    52fc:	82 81       	ldd	r24, Z+2	; 0x02
    52fe:	93 81       	ldd	r25, Z+3	; 0x03
    5300:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5304:	dc 01       	movw	r26, r24
    5306:	cb 01       	movw	r24, r22
    5308:	f8 01       	movw	r30, r16
    530a:	91 83       	std	Z+1, r25	; 0x01
    530c:	80 83       	st	Z, r24
    530e:	de 01       	movw	r26, r28
    5310:	af 53       	subi	r26, 0x3F	; 63
    5312:	be 4f       	sbci	r27, 0xFE	; 254
    5314:	fe 01       	movw	r30, r28
    5316:	eb 53       	subi	r30, 0x3B	; 59
    5318:	fe 4f       	sbci	r31, 0xFE	; 254
    531a:	80 81       	ld	r24, Z
    531c:	91 81       	ldd	r25, Z+1	; 0x01
    531e:	8d 93       	st	X+, r24
    5320:	9c 93       	st	X, r25
    5322:	fe 01       	movw	r30, r28
    5324:	ef 53       	subi	r30, 0x3F	; 63
    5326:	fe 4f       	sbci	r31, 0xFE	; 254
    5328:	80 81       	ld	r24, Z
    532a:	91 81       	ldd	r25, Z+1	; 0x01
    532c:	01 97       	sbiw	r24, 0x01	; 1
    532e:	f1 f7       	brne	.-4      	; 0x532c <Forward+0x2f4c>
    5330:	fe 01       	movw	r30, r28
    5332:	ef 53       	subi	r30, 0x3F	; 63
    5334:	fe 4f       	sbci	r31, 0xFE	; 254
    5336:	91 83       	std	Z+1, r25	; 0x01
    5338:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = NaturalPos;
    533a:	8d e0       	ldi	r24, 0x0D	; 13
    533c:	80 93 74 00 	sts	0x0074, r24
    5340:	fe 01       	movw	r30, r28
    5342:	e3 54       	subi	r30, 0x43	; 67
    5344:	fe 4f       	sbci	r31, 0xFE	; 254
    5346:	80 e0       	ldi	r24, 0x00	; 0
    5348:	90 e0       	ldi	r25, 0x00	; 0
    534a:	ac e8       	ldi	r26, 0x8C	; 140
    534c:	b2 e4       	ldi	r27, 0x42	; 66
    534e:	80 83       	st	Z, r24
    5350:	91 83       	std	Z+1, r25	; 0x01
    5352:	a2 83       	std	Z+2, r26	; 0x02
    5354:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5356:	8e 01       	movw	r16, r28
    5358:	07 54       	subi	r16, 0x47	; 71
    535a:	1e 4f       	sbci	r17, 0xFE	; 254
    535c:	fe 01       	movw	r30, r28
    535e:	e3 54       	subi	r30, 0x43	; 67
    5360:	fe 4f       	sbci	r31, 0xFE	; 254
    5362:	60 81       	ld	r22, Z
    5364:	71 81       	ldd	r23, Z+1	; 0x01
    5366:	82 81       	ldd	r24, Z+2	; 0x02
    5368:	93 81       	ldd	r25, Z+3	; 0x03
    536a:	20 e0       	ldi	r18, 0x00	; 0
    536c:	30 e0       	ldi	r19, 0x00	; 0
    536e:	4a e7       	ldi	r20, 0x7A	; 122
    5370:	55 e4       	ldi	r21, 0x45	; 69
    5372:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5376:	dc 01       	movw	r26, r24
    5378:	cb 01       	movw	r24, r22
    537a:	f8 01       	movw	r30, r16
    537c:	80 83       	st	Z, r24
    537e:	91 83       	std	Z+1, r25	; 0x01
    5380:	a2 83       	std	Z+2, r26	; 0x02
    5382:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5384:	fe 01       	movw	r30, r28
    5386:	e7 54       	subi	r30, 0x47	; 71
    5388:	fe 4f       	sbci	r31, 0xFE	; 254
    538a:	60 81       	ld	r22, Z
    538c:	71 81       	ldd	r23, Z+1	; 0x01
    538e:	82 81       	ldd	r24, Z+2	; 0x02
    5390:	93 81       	ldd	r25, Z+3	; 0x03
    5392:	20 e0       	ldi	r18, 0x00	; 0
    5394:	30 e0       	ldi	r19, 0x00	; 0
    5396:	40 e8       	ldi	r20, 0x80	; 128
    5398:	5f e3       	ldi	r21, 0x3F	; 63
    539a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    539e:	88 23       	and	r24, r24
    53a0:	44 f4       	brge	.+16     	; 0x53b2 <Forward+0x2fd2>
		__ticks = 1;
    53a2:	fe 01       	movw	r30, r28
    53a4:	e9 54       	subi	r30, 0x49	; 73
    53a6:	fe 4f       	sbci	r31, 0xFE	; 254
    53a8:	81 e0       	ldi	r24, 0x01	; 1
    53aa:	90 e0       	ldi	r25, 0x00	; 0
    53ac:	91 83       	std	Z+1, r25	; 0x01
    53ae:	80 83       	st	Z, r24
    53b0:	64 c0       	rjmp	.+200    	; 0x547a <Forward+0x309a>
	else if (__tmp > 65535)
    53b2:	fe 01       	movw	r30, r28
    53b4:	e7 54       	subi	r30, 0x47	; 71
    53b6:	fe 4f       	sbci	r31, 0xFE	; 254
    53b8:	60 81       	ld	r22, Z
    53ba:	71 81       	ldd	r23, Z+1	; 0x01
    53bc:	82 81       	ldd	r24, Z+2	; 0x02
    53be:	93 81       	ldd	r25, Z+3	; 0x03
    53c0:	20 e0       	ldi	r18, 0x00	; 0
    53c2:	3f ef       	ldi	r19, 0xFF	; 255
    53c4:	4f e7       	ldi	r20, 0x7F	; 127
    53c6:	57 e4       	ldi	r21, 0x47	; 71
    53c8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    53cc:	18 16       	cp	r1, r24
    53ce:	0c f0       	brlt	.+2      	; 0x53d2 <Forward+0x2ff2>
    53d0:	43 c0       	rjmp	.+134    	; 0x5458 <Forward+0x3078>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53d2:	fe 01       	movw	r30, r28
    53d4:	e3 54       	subi	r30, 0x43	; 67
    53d6:	fe 4f       	sbci	r31, 0xFE	; 254
    53d8:	60 81       	ld	r22, Z
    53da:	71 81       	ldd	r23, Z+1	; 0x01
    53dc:	82 81       	ldd	r24, Z+2	; 0x02
    53de:	93 81       	ldd	r25, Z+3	; 0x03
    53e0:	20 e0       	ldi	r18, 0x00	; 0
    53e2:	30 e0       	ldi	r19, 0x00	; 0
    53e4:	40 e2       	ldi	r20, 0x20	; 32
    53e6:	51 e4       	ldi	r21, 0x41	; 65
    53e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    53ec:	dc 01       	movw	r26, r24
    53ee:	cb 01       	movw	r24, r22
    53f0:	8e 01       	movw	r16, r28
    53f2:	09 54       	subi	r16, 0x49	; 73
    53f4:	1e 4f       	sbci	r17, 0xFE	; 254
    53f6:	bc 01       	movw	r22, r24
    53f8:	cd 01       	movw	r24, r26
    53fa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    53fe:	dc 01       	movw	r26, r24
    5400:	cb 01       	movw	r24, r22
    5402:	f8 01       	movw	r30, r16
    5404:	91 83       	std	Z+1, r25	; 0x01
    5406:	80 83       	st	Z, r24
    5408:	1f c0       	rjmp	.+62     	; 0x5448 <Forward+0x3068>
    540a:	fe 01       	movw	r30, r28
    540c:	eb 54       	subi	r30, 0x4B	; 75
    540e:	fe 4f       	sbci	r31, 0xFE	; 254
    5410:	80 e9       	ldi	r24, 0x90	; 144
    5412:	91 e0       	ldi	r25, 0x01	; 1
    5414:	91 83       	std	Z+1, r25	; 0x01
    5416:	80 83       	st	Z, r24
    5418:	fe 01       	movw	r30, r28
    541a:	eb 54       	subi	r30, 0x4B	; 75
    541c:	fe 4f       	sbci	r31, 0xFE	; 254
    541e:	80 81       	ld	r24, Z
    5420:	91 81       	ldd	r25, Z+1	; 0x01
    5422:	01 97       	sbiw	r24, 0x01	; 1
    5424:	f1 f7       	brne	.-4      	; 0x5422 <Forward+0x3042>
    5426:	fe 01       	movw	r30, r28
    5428:	eb 54       	subi	r30, 0x4B	; 75
    542a:	fe 4f       	sbci	r31, 0xFE	; 254
    542c:	91 83       	std	Z+1, r25	; 0x01
    542e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5430:	de 01       	movw	r26, r28
    5432:	a9 54       	subi	r26, 0x49	; 73
    5434:	be 4f       	sbci	r27, 0xFE	; 254
    5436:	fe 01       	movw	r30, r28
    5438:	e9 54       	subi	r30, 0x49	; 73
    543a:	fe 4f       	sbci	r31, 0xFE	; 254
    543c:	80 81       	ld	r24, Z
    543e:	91 81       	ldd	r25, Z+1	; 0x01
    5440:	01 97       	sbiw	r24, 0x01	; 1
    5442:	11 96       	adiw	r26, 0x01	; 1
    5444:	9c 93       	st	X, r25
    5446:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5448:	fe 01       	movw	r30, r28
    544a:	e9 54       	subi	r30, 0x49	; 73
    544c:	fe 4f       	sbci	r31, 0xFE	; 254
    544e:	80 81       	ld	r24, Z
    5450:	91 81       	ldd	r25, Z+1	; 0x01
    5452:	00 97       	sbiw	r24, 0x00	; 0
    5454:	d1 f6       	brne	.-76     	; 0x540a <Forward+0x302a>
    5456:	27 c0       	rjmp	.+78     	; 0x54a6 <Forward+0x30c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5458:	8e 01       	movw	r16, r28
    545a:	09 54       	subi	r16, 0x49	; 73
    545c:	1e 4f       	sbci	r17, 0xFE	; 254
    545e:	fe 01       	movw	r30, r28
    5460:	e7 54       	subi	r30, 0x47	; 71
    5462:	fe 4f       	sbci	r31, 0xFE	; 254
    5464:	60 81       	ld	r22, Z
    5466:	71 81       	ldd	r23, Z+1	; 0x01
    5468:	82 81       	ldd	r24, Z+2	; 0x02
    546a:	93 81       	ldd	r25, Z+3	; 0x03
    546c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5470:	dc 01       	movw	r26, r24
    5472:	cb 01       	movw	r24, r22
    5474:	f8 01       	movw	r30, r16
    5476:	91 83       	std	Z+1, r25	; 0x01
    5478:	80 83       	st	Z, r24
    547a:	de 01       	movw	r26, r28
    547c:	ad 54       	subi	r26, 0x4D	; 77
    547e:	be 4f       	sbci	r27, 0xFE	; 254
    5480:	fe 01       	movw	r30, r28
    5482:	e9 54       	subi	r30, 0x49	; 73
    5484:	fe 4f       	sbci	r31, 0xFE	; 254
    5486:	80 81       	ld	r24, Z
    5488:	91 81       	ldd	r25, Z+1	; 0x01
    548a:	8d 93       	st	X+, r24
    548c:	9c 93       	st	X, r25
    548e:	fe 01       	movw	r30, r28
    5490:	ed 54       	subi	r30, 0x4D	; 77
    5492:	fe 4f       	sbci	r31, 0xFE	; 254
    5494:	80 81       	ld	r24, Z
    5496:	91 81       	ldd	r25, Z+1	; 0x01
    5498:	01 97       	sbiw	r24, 0x01	; 1
    549a:	f1 f7       	brne	.-4      	; 0x5498 <Forward+0x30b8>
    549c:	fe 01       	movw	r30, r28
    549e:	ed 54       	subi	r30, 0x4D	; 77
    54a0:	fe 4f       	sbci	r31, 0xFE	; 254
    54a2:	91 83       	std	Z+1, r25	; 0x01
    54a4:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POS7N;
    54a6:	8e e0       	ldi	r24, 0x0E	; 14
    54a8:	80 93 74 00 	sts	0x0074, r24
    54ac:	fe 01       	movw	r30, r28
    54ae:	e1 55       	subi	r30, 0x51	; 81
    54b0:	fe 4f       	sbci	r31, 0xFE	; 254
    54b2:	80 e0       	ldi	r24, 0x00	; 0
    54b4:	90 e0       	ldi	r25, 0x00	; 0
    54b6:	ac e8       	ldi	r26, 0x8C	; 140
    54b8:	b2 e4       	ldi	r27, 0x42	; 66
    54ba:	80 83       	st	Z, r24
    54bc:	91 83       	std	Z+1, r25	; 0x01
    54be:	a2 83       	std	Z+2, r26	; 0x02
    54c0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    54c2:	8e 01       	movw	r16, r28
    54c4:	05 55       	subi	r16, 0x55	; 85
    54c6:	1e 4f       	sbci	r17, 0xFE	; 254
    54c8:	fe 01       	movw	r30, r28
    54ca:	e1 55       	subi	r30, 0x51	; 81
    54cc:	fe 4f       	sbci	r31, 0xFE	; 254
    54ce:	60 81       	ld	r22, Z
    54d0:	71 81       	ldd	r23, Z+1	; 0x01
    54d2:	82 81       	ldd	r24, Z+2	; 0x02
    54d4:	93 81       	ldd	r25, Z+3	; 0x03
    54d6:	20 e0       	ldi	r18, 0x00	; 0
    54d8:	30 e0       	ldi	r19, 0x00	; 0
    54da:	4a e7       	ldi	r20, 0x7A	; 122
    54dc:	55 e4       	ldi	r21, 0x45	; 69
    54de:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    54e2:	dc 01       	movw	r26, r24
    54e4:	cb 01       	movw	r24, r22
    54e6:	f8 01       	movw	r30, r16
    54e8:	80 83       	st	Z, r24
    54ea:	91 83       	std	Z+1, r25	; 0x01
    54ec:	a2 83       	std	Z+2, r26	; 0x02
    54ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    54f0:	fe 01       	movw	r30, r28
    54f2:	e5 55       	subi	r30, 0x55	; 85
    54f4:	fe 4f       	sbci	r31, 0xFE	; 254
    54f6:	60 81       	ld	r22, Z
    54f8:	71 81       	ldd	r23, Z+1	; 0x01
    54fa:	82 81       	ldd	r24, Z+2	; 0x02
    54fc:	93 81       	ldd	r25, Z+3	; 0x03
    54fe:	20 e0       	ldi	r18, 0x00	; 0
    5500:	30 e0       	ldi	r19, 0x00	; 0
    5502:	40 e8       	ldi	r20, 0x80	; 128
    5504:	5f e3       	ldi	r21, 0x3F	; 63
    5506:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    550a:	88 23       	and	r24, r24
    550c:	44 f4       	brge	.+16     	; 0x551e <Forward+0x313e>
		__ticks = 1;
    550e:	fe 01       	movw	r30, r28
    5510:	e7 55       	subi	r30, 0x57	; 87
    5512:	fe 4f       	sbci	r31, 0xFE	; 254
    5514:	81 e0       	ldi	r24, 0x01	; 1
    5516:	90 e0       	ldi	r25, 0x00	; 0
    5518:	91 83       	std	Z+1, r25	; 0x01
    551a:	80 83       	st	Z, r24
    551c:	64 c0       	rjmp	.+200    	; 0x55e6 <Forward+0x3206>
	else if (__tmp > 65535)
    551e:	fe 01       	movw	r30, r28
    5520:	e5 55       	subi	r30, 0x55	; 85
    5522:	fe 4f       	sbci	r31, 0xFE	; 254
    5524:	60 81       	ld	r22, Z
    5526:	71 81       	ldd	r23, Z+1	; 0x01
    5528:	82 81       	ldd	r24, Z+2	; 0x02
    552a:	93 81       	ldd	r25, Z+3	; 0x03
    552c:	20 e0       	ldi	r18, 0x00	; 0
    552e:	3f ef       	ldi	r19, 0xFF	; 255
    5530:	4f e7       	ldi	r20, 0x7F	; 127
    5532:	57 e4       	ldi	r21, 0x47	; 71
    5534:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5538:	18 16       	cp	r1, r24
    553a:	0c f0       	brlt	.+2      	; 0x553e <Forward+0x315e>
    553c:	43 c0       	rjmp	.+134    	; 0x55c4 <Forward+0x31e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    553e:	fe 01       	movw	r30, r28
    5540:	e1 55       	subi	r30, 0x51	; 81
    5542:	fe 4f       	sbci	r31, 0xFE	; 254
    5544:	60 81       	ld	r22, Z
    5546:	71 81       	ldd	r23, Z+1	; 0x01
    5548:	82 81       	ldd	r24, Z+2	; 0x02
    554a:	93 81       	ldd	r25, Z+3	; 0x03
    554c:	20 e0       	ldi	r18, 0x00	; 0
    554e:	30 e0       	ldi	r19, 0x00	; 0
    5550:	40 e2       	ldi	r20, 0x20	; 32
    5552:	51 e4       	ldi	r21, 0x41	; 65
    5554:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5558:	dc 01       	movw	r26, r24
    555a:	cb 01       	movw	r24, r22
    555c:	8e 01       	movw	r16, r28
    555e:	07 55       	subi	r16, 0x57	; 87
    5560:	1e 4f       	sbci	r17, 0xFE	; 254
    5562:	bc 01       	movw	r22, r24
    5564:	cd 01       	movw	r24, r26
    5566:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    556a:	dc 01       	movw	r26, r24
    556c:	cb 01       	movw	r24, r22
    556e:	f8 01       	movw	r30, r16
    5570:	91 83       	std	Z+1, r25	; 0x01
    5572:	80 83       	st	Z, r24
    5574:	1f c0       	rjmp	.+62     	; 0x55b4 <Forward+0x31d4>
    5576:	fe 01       	movw	r30, r28
    5578:	e9 55       	subi	r30, 0x59	; 89
    557a:	fe 4f       	sbci	r31, 0xFE	; 254
    557c:	80 e9       	ldi	r24, 0x90	; 144
    557e:	91 e0       	ldi	r25, 0x01	; 1
    5580:	91 83       	std	Z+1, r25	; 0x01
    5582:	80 83       	st	Z, r24
    5584:	fe 01       	movw	r30, r28
    5586:	e9 55       	subi	r30, 0x59	; 89
    5588:	fe 4f       	sbci	r31, 0xFE	; 254
    558a:	80 81       	ld	r24, Z
    558c:	91 81       	ldd	r25, Z+1	; 0x01
    558e:	01 97       	sbiw	r24, 0x01	; 1
    5590:	f1 f7       	brne	.-4      	; 0x558e <Forward+0x31ae>
    5592:	fe 01       	movw	r30, r28
    5594:	e9 55       	subi	r30, 0x59	; 89
    5596:	fe 4f       	sbci	r31, 0xFE	; 254
    5598:	91 83       	std	Z+1, r25	; 0x01
    559a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    559c:	de 01       	movw	r26, r28
    559e:	a7 55       	subi	r26, 0x57	; 87
    55a0:	be 4f       	sbci	r27, 0xFE	; 254
    55a2:	fe 01       	movw	r30, r28
    55a4:	e7 55       	subi	r30, 0x57	; 87
    55a6:	fe 4f       	sbci	r31, 0xFE	; 254
    55a8:	80 81       	ld	r24, Z
    55aa:	91 81       	ldd	r25, Z+1	; 0x01
    55ac:	01 97       	sbiw	r24, 0x01	; 1
    55ae:	11 96       	adiw	r26, 0x01	; 1
    55b0:	9c 93       	st	X, r25
    55b2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55b4:	fe 01       	movw	r30, r28
    55b6:	e7 55       	subi	r30, 0x57	; 87
    55b8:	fe 4f       	sbci	r31, 0xFE	; 254
    55ba:	80 81       	ld	r24, Z
    55bc:	91 81       	ldd	r25, Z+1	; 0x01
    55be:	00 97       	sbiw	r24, 0x00	; 0
    55c0:	d1 f6       	brne	.-76     	; 0x5576 <Forward+0x3196>
    55c2:	27 c0       	rjmp	.+78     	; 0x5612 <Forward+0x3232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55c4:	8e 01       	movw	r16, r28
    55c6:	07 55       	subi	r16, 0x57	; 87
    55c8:	1e 4f       	sbci	r17, 0xFE	; 254
    55ca:	fe 01       	movw	r30, r28
    55cc:	e5 55       	subi	r30, 0x55	; 85
    55ce:	fe 4f       	sbci	r31, 0xFE	; 254
    55d0:	60 81       	ld	r22, Z
    55d2:	71 81       	ldd	r23, Z+1	; 0x01
    55d4:	82 81       	ldd	r24, Z+2	; 0x02
    55d6:	93 81       	ldd	r25, Z+3	; 0x03
    55d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    55dc:	dc 01       	movw	r26, r24
    55de:	cb 01       	movw	r24, r22
    55e0:	f8 01       	movw	r30, r16
    55e2:	91 83       	std	Z+1, r25	; 0x01
    55e4:	80 83       	st	Z, r24
    55e6:	de 01       	movw	r26, r28
    55e8:	ab 55       	subi	r26, 0x5B	; 91
    55ea:	be 4f       	sbci	r27, 0xFE	; 254
    55ec:	fe 01       	movw	r30, r28
    55ee:	e7 55       	subi	r30, 0x57	; 87
    55f0:	fe 4f       	sbci	r31, 0xFE	; 254
    55f2:	80 81       	ld	r24, Z
    55f4:	91 81       	ldd	r25, Z+1	; 0x01
    55f6:	8d 93       	st	X+, r24
    55f8:	9c 93       	st	X, r25
    55fa:	fe 01       	movw	r30, r28
    55fc:	eb 55       	subi	r30, 0x5B	; 91
    55fe:	fe 4f       	sbci	r31, 0xFE	; 254
    5600:	80 81       	ld	r24, Z
    5602:	91 81       	ldd	r25, Z+1	; 0x01
    5604:	01 97       	sbiw	r24, 0x01	; 1
    5606:	f1 f7       	brne	.-4      	; 0x5604 <Forward+0x3224>
    5608:	fe 01       	movw	r30, r28
    560a:	eb 55       	subi	r30, 0x5B	; 91
    560c:	fe 4f       	sbci	r31, 0xFE	; 254
    560e:	91 83       	std	Z+1, r25	; 0x01
    5610:	80 83       	st	Z, r24
	_delay_ms(70);
	angle12 = POS8N;
    5612:	8f e0       	ldi	r24, 0x0F	; 15
    5614:	80 93 74 00 	sts	0x0074, r24
	angle11 = POSN3;
    5618:	8a e0       	ldi	r24, 0x0A	; 10
    561a:	80 93 73 00 	sts	0x0073, r24
    561e:	fe 01       	movw	r30, r28
    5620:	ef 55       	subi	r30, 0x5F	; 95
    5622:	fe 4f       	sbci	r31, 0xFE	; 254
    5624:	80 e0       	ldi	r24, 0x00	; 0
    5626:	90 e0       	ldi	r25, 0x00	; 0
    5628:	ac e8       	ldi	r26, 0x8C	; 140
    562a:	b2 e4       	ldi	r27, 0x42	; 66
    562c:	80 83       	st	Z, r24
    562e:	91 83       	std	Z+1, r25	; 0x01
    5630:	a2 83       	std	Z+2, r26	; 0x02
    5632:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5634:	8e 01       	movw	r16, r28
    5636:	03 56       	subi	r16, 0x63	; 99
    5638:	1e 4f       	sbci	r17, 0xFE	; 254
    563a:	fe 01       	movw	r30, r28
    563c:	ef 55       	subi	r30, 0x5F	; 95
    563e:	fe 4f       	sbci	r31, 0xFE	; 254
    5640:	60 81       	ld	r22, Z
    5642:	71 81       	ldd	r23, Z+1	; 0x01
    5644:	82 81       	ldd	r24, Z+2	; 0x02
    5646:	93 81       	ldd	r25, Z+3	; 0x03
    5648:	20 e0       	ldi	r18, 0x00	; 0
    564a:	30 e0       	ldi	r19, 0x00	; 0
    564c:	4a e7       	ldi	r20, 0x7A	; 122
    564e:	55 e4       	ldi	r21, 0x45	; 69
    5650:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5654:	dc 01       	movw	r26, r24
    5656:	cb 01       	movw	r24, r22
    5658:	f8 01       	movw	r30, r16
    565a:	80 83       	st	Z, r24
    565c:	91 83       	std	Z+1, r25	; 0x01
    565e:	a2 83       	std	Z+2, r26	; 0x02
    5660:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5662:	fe 01       	movw	r30, r28
    5664:	e3 56       	subi	r30, 0x63	; 99
    5666:	fe 4f       	sbci	r31, 0xFE	; 254
    5668:	60 81       	ld	r22, Z
    566a:	71 81       	ldd	r23, Z+1	; 0x01
    566c:	82 81       	ldd	r24, Z+2	; 0x02
    566e:	93 81       	ldd	r25, Z+3	; 0x03
    5670:	20 e0       	ldi	r18, 0x00	; 0
    5672:	30 e0       	ldi	r19, 0x00	; 0
    5674:	40 e8       	ldi	r20, 0x80	; 128
    5676:	5f e3       	ldi	r21, 0x3F	; 63
    5678:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    567c:	88 23       	and	r24, r24
    567e:	44 f4       	brge	.+16     	; 0x5690 <Forward+0x32b0>
		__ticks = 1;
    5680:	fe 01       	movw	r30, r28
    5682:	e5 56       	subi	r30, 0x65	; 101
    5684:	fe 4f       	sbci	r31, 0xFE	; 254
    5686:	81 e0       	ldi	r24, 0x01	; 1
    5688:	90 e0       	ldi	r25, 0x00	; 0
    568a:	91 83       	std	Z+1, r25	; 0x01
    568c:	80 83       	st	Z, r24
    568e:	64 c0       	rjmp	.+200    	; 0x5758 <Forward+0x3378>
	else if (__tmp > 65535)
    5690:	fe 01       	movw	r30, r28
    5692:	e3 56       	subi	r30, 0x63	; 99
    5694:	fe 4f       	sbci	r31, 0xFE	; 254
    5696:	60 81       	ld	r22, Z
    5698:	71 81       	ldd	r23, Z+1	; 0x01
    569a:	82 81       	ldd	r24, Z+2	; 0x02
    569c:	93 81       	ldd	r25, Z+3	; 0x03
    569e:	20 e0       	ldi	r18, 0x00	; 0
    56a0:	3f ef       	ldi	r19, 0xFF	; 255
    56a2:	4f e7       	ldi	r20, 0x7F	; 127
    56a4:	57 e4       	ldi	r21, 0x47	; 71
    56a6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    56aa:	18 16       	cp	r1, r24
    56ac:	0c f0       	brlt	.+2      	; 0x56b0 <Forward+0x32d0>
    56ae:	43 c0       	rjmp	.+134    	; 0x5736 <Forward+0x3356>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    56b0:	fe 01       	movw	r30, r28
    56b2:	ef 55       	subi	r30, 0x5F	; 95
    56b4:	fe 4f       	sbci	r31, 0xFE	; 254
    56b6:	60 81       	ld	r22, Z
    56b8:	71 81       	ldd	r23, Z+1	; 0x01
    56ba:	82 81       	ldd	r24, Z+2	; 0x02
    56bc:	93 81       	ldd	r25, Z+3	; 0x03
    56be:	20 e0       	ldi	r18, 0x00	; 0
    56c0:	30 e0       	ldi	r19, 0x00	; 0
    56c2:	40 e2       	ldi	r20, 0x20	; 32
    56c4:	51 e4       	ldi	r21, 0x41	; 65
    56c6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    56ca:	dc 01       	movw	r26, r24
    56cc:	cb 01       	movw	r24, r22
    56ce:	8e 01       	movw	r16, r28
    56d0:	05 56       	subi	r16, 0x65	; 101
    56d2:	1e 4f       	sbci	r17, 0xFE	; 254
    56d4:	bc 01       	movw	r22, r24
    56d6:	cd 01       	movw	r24, r26
    56d8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    56dc:	dc 01       	movw	r26, r24
    56de:	cb 01       	movw	r24, r22
    56e0:	f8 01       	movw	r30, r16
    56e2:	91 83       	std	Z+1, r25	; 0x01
    56e4:	80 83       	st	Z, r24
    56e6:	1f c0       	rjmp	.+62     	; 0x5726 <Forward+0x3346>
    56e8:	fe 01       	movw	r30, r28
    56ea:	e7 56       	subi	r30, 0x67	; 103
    56ec:	fe 4f       	sbci	r31, 0xFE	; 254
    56ee:	80 e9       	ldi	r24, 0x90	; 144
    56f0:	91 e0       	ldi	r25, 0x01	; 1
    56f2:	91 83       	std	Z+1, r25	; 0x01
    56f4:	80 83       	st	Z, r24
    56f6:	fe 01       	movw	r30, r28
    56f8:	e7 56       	subi	r30, 0x67	; 103
    56fa:	fe 4f       	sbci	r31, 0xFE	; 254
    56fc:	80 81       	ld	r24, Z
    56fe:	91 81       	ldd	r25, Z+1	; 0x01
    5700:	01 97       	sbiw	r24, 0x01	; 1
    5702:	f1 f7       	brne	.-4      	; 0x5700 <Forward+0x3320>
    5704:	fe 01       	movw	r30, r28
    5706:	e7 56       	subi	r30, 0x67	; 103
    5708:	fe 4f       	sbci	r31, 0xFE	; 254
    570a:	91 83       	std	Z+1, r25	; 0x01
    570c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    570e:	de 01       	movw	r26, r28
    5710:	a5 56       	subi	r26, 0x65	; 101
    5712:	be 4f       	sbci	r27, 0xFE	; 254
    5714:	fe 01       	movw	r30, r28
    5716:	e5 56       	subi	r30, 0x65	; 101
    5718:	fe 4f       	sbci	r31, 0xFE	; 254
    571a:	80 81       	ld	r24, Z
    571c:	91 81       	ldd	r25, Z+1	; 0x01
    571e:	01 97       	sbiw	r24, 0x01	; 1
    5720:	11 96       	adiw	r26, 0x01	; 1
    5722:	9c 93       	st	X, r25
    5724:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5726:	fe 01       	movw	r30, r28
    5728:	e5 56       	subi	r30, 0x65	; 101
    572a:	fe 4f       	sbci	r31, 0xFE	; 254
    572c:	80 81       	ld	r24, Z
    572e:	91 81       	ldd	r25, Z+1	; 0x01
    5730:	00 97       	sbiw	r24, 0x00	; 0
    5732:	d1 f6       	brne	.-76     	; 0x56e8 <Forward+0x3308>
    5734:	27 c0       	rjmp	.+78     	; 0x5784 <Forward+0x33a4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5736:	8e 01       	movw	r16, r28
    5738:	05 56       	subi	r16, 0x65	; 101
    573a:	1e 4f       	sbci	r17, 0xFE	; 254
    573c:	fe 01       	movw	r30, r28
    573e:	e3 56       	subi	r30, 0x63	; 99
    5740:	fe 4f       	sbci	r31, 0xFE	; 254
    5742:	60 81       	ld	r22, Z
    5744:	71 81       	ldd	r23, Z+1	; 0x01
    5746:	82 81       	ldd	r24, Z+2	; 0x02
    5748:	93 81       	ldd	r25, Z+3	; 0x03
    574a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    574e:	dc 01       	movw	r26, r24
    5750:	cb 01       	movw	r24, r22
    5752:	f8 01       	movw	r30, r16
    5754:	91 83       	std	Z+1, r25	; 0x01
    5756:	80 83       	st	Z, r24
    5758:	de 01       	movw	r26, r28
    575a:	a9 56       	subi	r26, 0x69	; 105
    575c:	be 4f       	sbci	r27, 0xFE	; 254
    575e:	fe 01       	movw	r30, r28
    5760:	e5 56       	subi	r30, 0x65	; 101
    5762:	fe 4f       	sbci	r31, 0xFE	; 254
    5764:	80 81       	ld	r24, Z
    5766:	91 81       	ldd	r25, Z+1	; 0x01
    5768:	8d 93       	st	X+, r24
    576a:	9c 93       	st	X, r25
    576c:	fe 01       	movw	r30, r28
    576e:	e9 56       	subi	r30, 0x69	; 105
    5770:	fe 4f       	sbci	r31, 0xFE	; 254
    5772:	80 81       	ld	r24, Z
    5774:	91 81       	ldd	r25, Z+1	; 0x01
    5776:	01 97       	sbiw	r24, 0x01	; 1
    5778:	f1 f7       	brne	.-4      	; 0x5776 <Forward+0x3396>
    577a:	fe 01       	movw	r30, r28
    577c:	e9 56       	subi	r30, 0x69	; 105
    577e:	fe 4f       	sbci	r31, 0xFE	; 254
    5780:	91 83       	std	Z+1, r25	; 0x01
    5782:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = POSN4;
    5784:	8b e0       	ldi	r24, 0x0B	; 11
    5786:	80 93 73 00 	sts	0x0073, r24
    578a:	fe 01       	movw	r30, r28
    578c:	ed 56       	subi	r30, 0x6D	; 109
    578e:	fe 4f       	sbci	r31, 0xFE	; 254
    5790:	80 e0       	ldi	r24, 0x00	; 0
    5792:	90 e0       	ldi	r25, 0x00	; 0
    5794:	ac e8       	ldi	r26, 0x8C	; 140
    5796:	b2 e4       	ldi	r27, 0x42	; 66
    5798:	80 83       	st	Z, r24
    579a:	91 83       	std	Z+1, r25	; 0x01
    579c:	a2 83       	std	Z+2, r26	; 0x02
    579e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    57a0:	8e 01       	movw	r16, r28
    57a2:	01 57       	subi	r16, 0x71	; 113
    57a4:	1e 4f       	sbci	r17, 0xFE	; 254
    57a6:	fe 01       	movw	r30, r28
    57a8:	ed 56       	subi	r30, 0x6D	; 109
    57aa:	fe 4f       	sbci	r31, 0xFE	; 254
    57ac:	60 81       	ld	r22, Z
    57ae:	71 81       	ldd	r23, Z+1	; 0x01
    57b0:	82 81       	ldd	r24, Z+2	; 0x02
    57b2:	93 81       	ldd	r25, Z+3	; 0x03
    57b4:	20 e0       	ldi	r18, 0x00	; 0
    57b6:	30 e0       	ldi	r19, 0x00	; 0
    57b8:	4a e7       	ldi	r20, 0x7A	; 122
    57ba:	55 e4       	ldi	r21, 0x45	; 69
    57bc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    57c0:	dc 01       	movw	r26, r24
    57c2:	cb 01       	movw	r24, r22
    57c4:	f8 01       	movw	r30, r16
    57c6:	80 83       	st	Z, r24
    57c8:	91 83       	std	Z+1, r25	; 0x01
    57ca:	a2 83       	std	Z+2, r26	; 0x02
    57cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    57ce:	fe 01       	movw	r30, r28
    57d0:	e1 57       	subi	r30, 0x71	; 113
    57d2:	fe 4f       	sbci	r31, 0xFE	; 254
    57d4:	60 81       	ld	r22, Z
    57d6:	71 81       	ldd	r23, Z+1	; 0x01
    57d8:	82 81       	ldd	r24, Z+2	; 0x02
    57da:	93 81       	ldd	r25, Z+3	; 0x03
    57dc:	20 e0       	ldi	r18, 0x00	; 0
    57de:	30 e0       	ldi	r19, 0x00	; 0
    57e0:	40 e8       	ldi	r20, 0x80	; 128
    57e2:	5f e3       	ldi	r21, 0x3F	; 63
    57e4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    57e8:	88 23       	and	r24, r24
    57ea:	44 f4       	brge	.+16     	; 0x57fc <Forward+0x341c>
		__ticks = 1;
    57ec:	fe 01       	movw	r30, r28
    57ee:	e3 57       	subi	r30, 0x73	; 115
    57f0:	fe 4f       	sbci	r31, 0xFE	; 254
    57f2:	81 e0       	ldi	r24, 0x01	; 1
    57f4:	90 e0       	ldi	r25, 0x00	; 0
    57f6:	91 83       	std	Z+1, r25	; 0x01
    57f8:	80 83       	st	Z, r24
    57fa:	64 c0       	rjmp	.+200    	; 0x58c4 <Forward+0x34e4>
	else if (__tmp > 65535)
    57fc:	fe 01       	movw	r30, r28
    57fe:	e1 57       	subi	r30, 0x71	; 113
    5800:	fe 4f       	sbci	r31, 0xFE	; 254
    5802:	60 81       	ld	r22, Z
    5804:	71 81       	ldd	r23, Z+1	; 0x01
    5806:	82 81       	ldd	r24, Z+2	; 0x02
    5808:	93 81       	ldd	r25, Z+3	; 0x03
    580a:	20 e0       	ldi	r18, 0x00	; 0
    580c:	3f ef       	ldi	r19, 0xFF	; 255
    580e:	4f e7       	ldi	r20, 0x7F	; 127
    5810:	57 e4       	ldi	r21, 0x47	; 71
    5812:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5816:	18 16       	cp	r1, r24
    5818:	0c f0       	brlt	.+2      	; 0x581c <Forward+0x343c>
    581a:	43 c0       	rjmp	.+134    	; 0x58a2 <Forward+0x34c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    581c:	fe 01       	movw	r30, r28
    581e:	ed 56       	subi	r30, 0x6D	; 109
    5820:	fe 4f       	sbci	r31, 0xFE	; 254
    5822:	60 81       	ld	r22, Z
    5824:	71 81       	ldd	r23, Z+1	; 0x01
    5826:	82 81       	ldd	r24, Z+2	; 0x02
    5828:	93 81       	ldd	r25, Z+3	; 0x03
    582a:	20 e0       	ldi	r18, 0x00	; 0
    582c:	30 e0       	ldi	r19, 0x00	; 0
    582e:	40 e2       	ldi	r20, 0x20	; 32
    5830:	51 e4       	ldi	r21, 0x41	; 65
    5832:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5836:	dc 01       	movw	r26, r24
    5838:	cb 01       	movw	r24, r22
    583a:	8e 01       	movw	r16, r28
    583c:	03 57       	subi	r16, 0x73	; 115
    583e:	1e 4f       	sbci	r17, 0xFE	; 254
    5840:	bc 01       	movw	r22, r24
    5842:	cd 01       	movw	r24, r26
    5844:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5848:	dc 01       	movw	r26, r24
    584a:	cb 01       	movw	r24, r22
    584c:	f8 01       	movw	r30, r16
    584e:	91 83       	std	Z+1, r25	; 0x01
    5850:	80 83       	st	Z, r24
    5852:	1f c0       	rjmp	.+62     	; 0x5892 <Forward+0x34b2>
    5854:	fe 01       	movw	r30, r28
    5856:	e5 57       	subi	r30, 0x75	; 117
    5858:	fe 4f       	sbci	r31, 0xFE	; 254
    585a:	80 e9       	ldi	r24, 0x90	; 144
    585c:	91 e0       	ldi	r25, 0x01	; 1
    585e:	91 83       	std	Z+1, r25	; 0x01
    5860:	80 83       	st	Z, r24
    5862:	fe 01       	movw	r30, r28
    5864:	e5 57       	subi	r30, 0x75	; 117
    5866:	fe 4f       	sbci	r31, 0xFE	; 254
    5868:	80 81       	ld	r24, Z
    586a:	91 81       	ldd	r25, Z+1	; 0x01
    586c:	01 97       	sbiw	r24, 0x01	; 1
    586e:	f1 f7       	brne	.-4      	; 0x586c <Forward+0x348c>
    5870:	fe 01       	movw	r30, r28
    5872:	e5 57       	subi	r30, 0x75	; 117
    5874:	fe 4f       	sbci	r31, 0xFE	; 254
    5876:	91 83       	std	Z+1, r25	; 0x01
    5878:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    587a:	de 01       	movw	r26, r28
    587c:	a3 57       	subi	r26, 0x73	; 115
    587e:	be 4f       	sbci	r27, 0xFE	; 254
    5880:	fe 01       	movw	r30, r28
    5882:	e3 57       	subi	r30, 0x73	; 115
    5884:	fe 4f       	sbci	r31, 0xFE	; 254
    5886:	80 81       	ld	r24, Z
    5888:	91 81       	ldd	r25, Z+1	; 0x01
    588a:	01 97       	sbiw	r24, 0x01	; 1
    588c:	11 96       	adiw	r26, 0x01	; 1
    588e:	9c 93       	st	X, r25
    5890:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5892:	fe 01       	movw	r30, r28
    5894:	e3 57       	subi	r30, 0x73	; 115
    5896:	fe 4f       	sbci	r31, 0xFE	; 254
    5898:	80 81       	ld	r24, Z
    589a:	91 81       	ldd	r25, Z+1	; 0x01
    589c:	00 97       	sbiw	r24, 0x00	; 0
    589e:	d1 f6       	brne	.-76     	; 0x5854 <Forward+0x3474>
    58a0:	27 c0       	rjmp	.+78     	; 0x58f0 <Forward+0x3510>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    58a2:	8e 01       	movw	r16, r28
    58a4:	03 57       	subi	r16, 0x73	; 115
    58a6:	1e 4f       	sbci	r17, 0xFE	; 254
    58a8:	fe 01       	movw	r30, r28
    58aa:	e1 57       	subi	r30, 0x71	; 113
    58ac:	fe 4f       	sbci	r31, 0xFE	; 254
    58ae:	60 81       	ld	r22, Z
    58b0:	71 81       	ldd	r23, Z+1	; 0x01
    58b2:	82 81       	ldd	r24, Z+2	; 0x02
    58b4:	93 81       	ldd	r25, Z+3	; 0x03
    58b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    58ba:	dc 01       	movw	r26, r24
    58bc:	cb 01       	movw	r24, r22
    58be:	f8 01       	movw	r30, r16
    58c0:	91 83       	std	Z+1, r25	; 0x01
    58c2:	80 83       	st	Z, r24
    58c4:	de 01       	movw	r26, r28
    58c6:	a7 57       	subi	r26, 0x77	; 119
    58c8:	be 4f       	sbci	r27, 0xFE	; 254
    58ca:	fe 01       	movw	r30, r28
    58cc:	e3 57       	subi	r30, 0x73	; 115
    58ce:	fe 4f       	sbci	r31, 0xFE	; 254
    58d0:	80 81       	ld	r24, Z
    58d2:	91 81       	ldd	r25, Z+1	; 0x01
    58d4:	8d 93       	st	X+, r24
    58d6:	9c 93       	st	X, r25
    58d8:	fe 01       	movw	r30, r28
    58da:	e7 57       	subi	r30, 0x77	; 119
    58dc:	fe 4f       	sbci	r31, 0xFE	; 254
    58de:	80 81       	ld	r24, Z
    58e0:	91 81       	ldd	r25, Z+1	; 0x01
    58e2:	01 97       	sbiw	r24, 0x01	; 1
    58e4:	f1 f7       	brne	.-4      	; 0x58e2 <Forward+0x3502>
    58e6:	fe 01       	movw	r30, r28
    58e8:	e7 57       	subi	r30, 0x77	; 119
    58ea:	fe 4f       	sbci	r31, 0xFE	; 254
    58ec:	91 83       	std	Z+1, r25	; 0x01
    58ee:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = POSN5;
    58f0:	8c e0       	ldi	r24, 0x0C	; 12
    58f2:	80 93 73 00 	sts	0x0073, r24
    58f6:	fe 01       	movw	r30, r28
    58f8:	eb 57       	subi	r30, 0x7B	; 123
    58fa:	fe 4f       	sbci	r31, 0xFE	; 254
    58fc:	80 e0       	ldi	r24, 0x00	; 0
    58fe:	90 e0       	ldi	r25, 0x00	; 0
    5900:	ac e8       	ldi	r26, 0x8C	; 140
    5902:	b2 e4       	ldi	r27, 0x42	; 66
    5904:	80 83       	st	Z, r24
    5906:	91 83       	std	Z+1, r25	; 0x01
    5908:	a2 83       	std	Z+2, r26	; 0x02
    590a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    590c:	8e 01       	movw	r16, r28
    590e:	0f 57       	subi	r16, 0x7F	; 127
    5910:	1e 4f       	sbci	r17, 0xFE	; 254
    5912:	fe 01       	movw	r30, r28
    5914:	eb 57       	subi	r30, 0x7B	; 123
    5916:	fe 4f       	sbci	r31, 0xFE	; 254
    5918:	60 81       	ld	r22, Z
    591a:	71 81       	ldd	r23, Z+1	; 0x01
    591c:	82 81       	ldd	r24, Z+2	; 0x02
    591e:	93 81       	ldd	r25, Z+3	; 0x03
    5920:	20 e0       	ldi	r18, 0x00	; 0
    5922:	30 e0       	ldi	r19, 0x00	; 0
    5924:	4a e7       	ldi	r20, 0x7A	; 122
    5926:	55 e4       	ldi	r21, 0x45	; 69
    5928:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    592c:	dc 01       	movw	r26, r24
    592e:	cb 01       	movw	r24, r22
    5930:	f8 01       	movw	r30, r16
    5932:	80 83       	st	Z, r24
    5934:	91 83       	std	Z+1, r25	; 0x01
    5936:	a2 83       	std	Z+2, r26	; 0x02
    5938:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    593a:	fe 01       	movw	r30, r28
    593c:	ef 57       	subi	r30, 0x7F	; 127
    593e:	fe 4f       	sbci	r31, 0xFE	; 254
    5940:	60 81       	ld	r22, Z
    5942:	71 81       	ldd	r23, Z+1	; 0x01
    5944:	82 81       	ldd	r24, Z+2	; 0x02
    5946:	93 81       	ldd	r25, Z+3	; 0x03
    5948:	20 e0       	ldi	r18, 0x00	; 0
    594a:	30 e0       	ldi	r19, 0x00	; 0
    594c:	40 e8       	ldi	r20, 0x80	; 128
    594e:	5f e3       	ldi	r21, 0x3F	; 63
    5950:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5954:	88 23       	and	r24, r24
    5956:	44 f4       	brge	.+16     	; 0x5968 <Forward+0x3588>
		__ticks = 1;
    5958:	fe 01       	movw	r30, r28
    595a:	e1 58       	subi	r30, 0x81	; 129
    595c:	fe 4f       	sbci	r31, 0xFE	; 254
    595e:	81 e0       	ldi	r24, 0x01	; 1
    5960:	90 e0       	ldi	r25, 0x00	; 0
    5962:	91 83       	std	Z+1, r25	; 0x01
    5964:	80 83       	st	Z, r24
    5966:	64 c0       	rjmp	.+200    	; 0x5a30 <Forward+0x3650>
	else if (__tmp > 65535)
    5968:	fe 01       	movw	r30, r28
    596a:	ef 57       	subi	r30, 0x7F	; 127
    596c:	fe 4f       	sbci	r31, 0xFE	; 254
    596e:	60 81       	ld	r22, Z
    5970:	71 81       	ldd	r23, Z+1	; 0x01
    5972:	82 81       	ldd	r24, Z+2	; 0x02
    5974:	93 81       	ldd	r25, Z+3	; 0x03
    5976:	20 e0       	ldi	r18, 0x00	; 0
    5978:	3f ef       	ldi	r19, 0xFF	; 255
    597a:	4f e7       	ldi	r20, 0x7F	; 127
    597c:	57 e4       	ldi	r21, 0x47	; 71
    597e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5982:	18 16       	cp	r1, r24
    5984:	0c f0       	brlt	.+2      	; 0x5988 <Forward+0x35a8>
    5986:	43 c0       	rjmp	.+134    	; 0x5a0e <Forward+0x362e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5988:	fe 01       	movw	r30, r28
    598a:	eb 57       	subi	r30, 0x7B	; 123
    598c:	fe 4f       	sbci	r31, 0xFE	; 254
    598e:	60 81       	ld	r22, Z
    5990:	71 81       	ldd	r23, Z+1	; 0x01
    5992:	82 81       	ldd	r24, Z+2	; 0x02
    5994:	93 81       	ldd	r25, Z+3	; 0x03
    5996:	20 e0       	ldi	r18, 0x00	; 0
    5998:	30 e0       	ldi	r19, 0x00	; 0
    599a:	40 e2       	ldi	r20, 0x20	; 32
    599c:	51 e4       	ldi	r21, 0x41	; 65
    599e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    59a2:	dc 01       	movw	r26, r24
    59a4:	cb 01       	movw	r24, r22
    59a6:	8e 01       	movw	r16, r28
    59a8:	01 58       	subi	r16, 0x81	; 129
    59aa:	1e 4f       	sbci	r17, 0xFE	; 254
    59ac:	bc 01       	movw	r22, r24
    59ae:	cd 01       	movw	r24, r26
    59b0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    59b4:	dc 01       	movw	r26, r24
    59b6:	cb 01       	movw	r24, r22
    59b8:	f8 01       	movw	r30, r16
    59ba:	91 83       	std	Z+1, r25	; 0x01
    59bc:	80 83       	st	Z, r24
    59be:	1f c0       	rjmp	.+62     	; 0x59fe <Forward+0x361e>
    59c0:	fe 01       	movw	r30, r28
    59c2:	e3 58       	subi	r30, 0x83	; 131
    59c4:	fe 4f       	sbci	r31, 0xFE	; 254
    59c6:	80 e9       	ldi	r24, 0x90	; 144
    59c8:	91 e0       	ldi	r25, 0x01	; 1
    59ca:	91 83       	std	Z+1, r25	; 0x01
    59cc:	80 83       	st	Z, r24
    59ce:	fe 01       	movw	r30, r28
    59d0:	e3 58       	subi	r30, 0x83	; 131
    59d2:	fe 4f       	sbci	r31, 0xFE	; 254
    59d4:	80 81       	ld	r24, Z
    59d6:	91 81       	ldd	r25, Z+1	; 0x01
    59d8:	01 97       	sbiw	r24, 0x01	; 1
    59da:	f1 f7       	brne	.-4      	; 0x59d8 <Forward+0x35f8>
    59dc:	fe 01       	movw	r30, r28
    59de:	e3 58       	subi	r30, 0x83	; 131
    59e0:	fe 4f       	sbci	r31, 0xFE	; 254
    59e2:	91 83       	std	Z+1, r25	; 0x01
    59e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    59e6:	de 01       	movw	r26, r28
    59e8:	a1 58       	subi	r26, 0x81	; 129
    59ea:	be 4f       	sbci	r27, 0xFE	; 254
    59ec:	fe 01       	movw	r30, r28
    59ee:	e1 58       	subi	r30, 0x81	; 129
    59f0:	fe 4f       	sbci	r31, 0xFE	; 254
    59f2:	80 81       	ld	r24, Z
    59f4:	91 81       	ldd	r25, Z+1	; 0x01
    59f6:	01 97       	sbiw	r24, 0x01	; 1
    59f8:	11 96       	adiw	r26, 0x01	; 1
    59fa:	9c 93       	st	X, r25
    59fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    59fe:	fe 01       	movw	r30, r28
    5a00:	e1 58       	subi	r30, 0x81	; 129
    5a02:	fe 4f       	sbci	r31, 0xFE	; 254
    5a04:	80 81       	ld	r24, Z
    5a06:	91 81       	ldd	r25, Z+1	; 0x01
    5a08:	00 97       	sbiw	r24, 0x00	; 0
    5a0a:	d1 f6       	brne	.-76     	; 0x59c0 <Forward+0x35e0>
    5a0c:	27 c0       	rjmp	.+78     	; 0x5a5c <Forward+0x367c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5a0e:	8e 01       	movw	r16, r28
    5a10:	01 58       	subi	r16, 0x81	; 129
    5a12:	1e 4f       	sbci	r17, 0xFE	; 254
    5a14:	fe 01       	movw	r30, r28
    5a16:	ef 57       	subi	r30, 0x7F	; 127
    5a18:	fe 4f       	sbci	r31, 0xFE	; 254
    5a1a:	60 81       	ld	r22, Z
    5a1c:	71 81       	ldd	r23, Z+1	; 0x01
    5a1e:	82 81       	ldd	r24, Z+2	; 0x02
    5a20:	93 81       	ldd	r25, Z+3	; 0x03
    5a22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5a26:	dc 01       	movw	r26, r24
    5a28:	cb 01       	movw	r24, r22
    5a2a:	f8 01       	movw	r30, r16
    5a2c:	91 83       	std	Z+1, r25	; 0x01
    5a2e:	80 83       	st	Z, r24
    5a30:	de 01       	movw	r26, r28
    5a32:	a5 58       	subi	r26, 0x85	; 133
    5a34:	be 4f       	sbci	r27, 0xFE	; 254
    5a36:	fe 01       	movw	r30, r28
    5a38:	e1 58       	subi	r30, 0x81	; 129
    5a3a:	fe 4f       	sbci	r31, 0xFE	; 254
    5a3c:	80 81       	ld	r24, Z
    5a3e:	91 81       	ldd	r25, Z+1	; 0x01
    5a40:	8d 93       	st	X+, r24
    5a42:	9c 93       	st	X, r25
    5a44:	fe 01       	movw	r30, r28
    5a46:	e5 58       	subi	r30, 0x85	; 133
    5a48:	fe 4f       	sbci	r31, 0xFE	; 254
    5a4a:	80 81       	ld	r24, Z
    5a4c:	91 81       	ldd	r25, Z+1	; 0x01
    5a4e:	01 97       	sbiw	r24, 0x01	; 1
    5a50:	f1 f7       	brne	.-4      	; 0x5a4e <Forward+0x366e>
    5a52:	fe 01       	movw	r30, r28
    5a54:	e5 58       	subi	r30, 0x85	; 133
    5a56:	fe 4f       	sbci	r31, 0xFE	; 254
    5a58:	91 83       	std	Z+1, r25	; 0x01
    5a5a:	80 83       	st	Z, r24
	_delay_ms(70);
	angle11 = NaturalPos;
    5a5c:	8d e0       	ldi	r24, 0x0D	; 13
    5a5e:	80 93 73 00 	sts	0x0073, r24
    5a62:	fe 01       	movw	r30, r28
    5a64:	e9 58       	subi	r30, 0x89	; 137
    5a66:	fe 4f       	sbci	r31, 0xFE	; 254
    5a68:	80 e0       	ldi	r24, 0x00	; 0
    5a6a:	90 e0       	ldi	r25, 0x00	; 0
    5a6c:	aa ef       	ldi	r26, 0xFA	; 250
    5a6e:	b3 e4       	ldi	r27, 0x43	; 67
    5a70:	80 83       	st	Z, r24
    5a72:	91 83       	std	Z+1, r25	; 0x01
    5a74:	a2 83       	std	Z+2, r26	; 0x02
    5a76:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5a78:	8e 01       	movw	r16, r28
    5a7a:	0d 58       	subi	r16, 0x8D	; 141
    5a7c:	1e 4f       	sbci	r17, 0xFE	; 254
    5a7e:	fe 01       	movw	r30, r28
    5a80:	e9 58       	subi	r30, 0x89	; 137
    5a82:	fe 4f       	sbci	r31, 0xFE	; 254
    5a84:	60 81       	ld	r22, Z
    5a86:	71 81       	ldd	r23, Z+1	; 0x01
    5a88:	82 81       	ldd	r24, Z+2	; 0x02
    5a8a:	93 81       	ldd	r25, Z+3	; 0x03
    5a8c:	20 e0       	ldi	r18, 0x00	; 0
    5a8e:	30 e0       	ldi	r19, 0x00	; 0
    5a90:	4a e7       	ldi	r20, 0x7A	; 122
    5a92:	55 e4       	ldi	r21, 0x45	; 69
    5a94:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5a98:	dc 01       	movw	r26, r24
    5a9a:	cb 01       	movw	r24, r22
    5a9c:	f8 01       	movw	r30, r16
    5a9e:	80 83       	st	Z, r24
    5aa0:	91 83       	std	Z+1, r25	; 0x01
    5aa2:	a2 83       	std	Z+2, r26	; 0x02
    5aa4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5aa6:	fe 01       	movw	r30, r28
    5aa8:	ed 58       	subi	r30, 0x8D	; 141
    5aaa:	fe 4f       	sbci	r31, 0xFE	; 254
    5aac:	60 81       	ld	r22, Z
    5aae:	71 81       	ldd	r23, Z+1	; 0x01
    5ab0:	82 81       	ldd	r24, Z+2	; 0x02
    5ab2:	93 81       	ldd	r25, Z+3	; 0x03
    5ab4:	20 e0       	ldi	r18, 0x00	; 0
    5ab6:	30 e0       	ldi	r19, 0x00	; 0
    5ab8:	40 e8       	ldi	r20, 0x80	; 128
    5aba:	5f e3       	ldi	r21, 0x3F	; 63
    5abc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5ac0:	88 23       	and	r24, r24
    5ac2:	44 f4       	brge	.+16     	; 0x5ad4 <Forward+0x36f4>
		__ticks = 1;
    5ac4:	fe 01       	movw	r30, r28
    5ac6:	ef 58       	subi	r30, 0x8F	; 143
    5ac8:	fe 4f       	sbci	r31, 0xFE	; 254
    5aca:	81 e0       	ldi	r24, 0x01	; 1
    5acc:	90 e0       	ldi	r25, 0x00	; 0
    5ace:	91 83       	std	Z+1, r25	; 0x01
    5ad0:	80 83       	st	Z, r24
    5ad2:	64 c0       	rjmp	.+200    	; 0x5b9c <Forward+0x37bc>
	else if (__tmp > 65535)
    5ad4:	fe 01       	movw	r30, r28
    5ad6:	ed 58       	subi	r30, 0x8D	; 141
    5ad8:	fe 4f       	sbci	r31, 0xFE	; 254
    5ada:	60 81       	ld	r22, Z
    5adc:	71 81       	ldd	r23, Z+1	; 0x01
    5ade:	82 81       	ldd	r24, Z+2	; 0x02
    5ae0:	93 81       	ldd	r25, Z+3	; 0x03
    5ae2:	20 e0       	ldi	r18, 0x00	; 0
    5ae4:	3f ef       	ldi	r19, 0xFF	; 255
    5ae6:	4f e7       	ldi	r20, 0x7F	; 127
    5ae8:	57 e4       	ldi	r21, 0x47	; 71
    5aea:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5aee:	18 16       	cp	r1, r24
    5af0:	0c f0       	brlt	.+2      	; 0x5af4 <Forward+0x3714>
    5af2:	43 c0       	rjmp	.+134    	; 0x5b7a <Forward+0x379a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5af4:	fe 01       	movw	r30, r28
    5af6:	e9 58       	subi	r30, 0x89	; 137
    5af8:	fe 4f       	sbci	r31, 0xFE	; 254
    5afa:	60 81       	ld	r22, Z
    5afc:	71 81       	ldd	r23, Z+1	; 0x01
    5afe:	82 81       	ldd	r24, Z+2	; 0x02
    5b00:	93 81       	ldd	r25, Z+3	; 0x03
    5b02:	20 e0       	ldi	r18, 0x00	; 0
    5b04:	30 e0       	ldi	r19, 0x00	; 0
    5b06:	40 e2       	ldi	r20, 0x20	; 32
    5b08:	51 e4       	ldi	r21, 0x41	; 65
    5b0a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5b0e:	dc 01       	movw	r26, r24
    5b10:	cb 01       	movw	r24, r22
    5b12:	8e 01       	movw	r16, r28
    5b14:	0f 58       	subi	r16, 0x8F	; 143
    5b16:	1e 4f       	sbci	r17, 0xFE	; 254
    5b18:	bc 01       	movw	r22, r24
    5b1a:	cd 01       	movw	r24, r26
    5b1c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5b20:	dc 01       	movw	r26, r24
    5b22:	cb 01       	movw	r24, r22
    5b24:	f8 01       	movw	r30, r16
    5b26:	91 83       	std	Z+1, r25	; 0x01
    5b28:	80 83       	st	Z, r24
    5b2a:	1f c0       	rjmp	.+62     	; 0x5b6a <Forward+0x378a>
    5b2c:	fe 01       	movw	r30, r28
    5b2e:	e1 59       	subi	r30, 0x91	; 145
    5b30:	fe 4f       	sbci	r31, 0xFE	; 254
    5b32:	80 e9       	ldi	r24, 0x90	; 144
    5b34:	91 e0       	ldi	r25, 0x01	; 1
    5b36:	91 83       	std	Z+1, r25	; 0x01
    5b38:	80 83       	st	Z, r24
    5b3a:	fe 01       	movw	r30, r28
    5b3c:	e1 59       	subi	r30, 0x91	; 145
    5b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    5b40:	80 81       	ld	r24, Z
    5b42:	91 81       	ldd	r25, Z+1	; 0x01
    5b44:	01 97       	sbiw	r24, 0x01	; 1
    5b46:	f1 f7       	brne	.-4      	; 0x5b44 <Forward+0x3764>
    5b48:	fe 01       	movw	r30, r28
    5b4a:	e1 59       	subi	r30, 0x91	; 145
    5b4c:	fe 4f       	sbci	r31, 0xFE	; 254
    5b4e:	91 83       	std	Z+1, r25	; 0x01
    5b50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5b52:	de 01       	movw	r26, r28
    5b54:	af 58       	subi	r26, 0x8F	; 143
    5b56:	be 4f       	sbci	r27, 0xFE	; 254
    5b58:	fe 01       	movw	r30, r28
    5b5a:	ef 58       	subi	r30, 0x8F	; 143
    5b5c:	fe 4f       	sbci	r31, 0xFE	; 254
    5b5e:	80 81       	ld	r24, Z
    5b60:	91 81       	ldd	r25, Z+1	; 0x01
    5b62:	01 97       	sbiw	r24, 0x01	; 1
    5b64:	11 96       	adiw	r26, 0x01	; 1
    5b66:	9c 93       	st	X, r25
    5b68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5b6a:	fe 01       	movw	r30, r28
    5b6c:	ef 58       	subi	r30, 0x8F	; 143
    5b6e:	fe 4f       	sbci	r31, 0xFE	; 254
    5b70:	80 81       	ld	r24, Z
    5b72:	91 81       	ldd	r25, Z+1	; 0x01
    5b74:	00 97       	sbiw	r24, 0x00	; 0
    5b76:	d1 f6       	brne	.-76     	; 0x5b2c <Forward+0x374c>
    5b78:	27 c0       	rjmp	.+78     	; 0x5bc8 <Forward+0x37e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5b7a:	8e 01       	movw	r16, r28
    5b7c:	0f 58       	subi	r16, 0x8F	; 143
    5b7e:	1e 4f       	sbci	r17, 0xFE	; 254
    5b80:	fe 01       	movw	r30, r28
    5b82:	ed 58       	subi	r30, 0x8D	; 141
    5b84:	fe 4f       	sbci	r31, 0xFE	; 254
    5b86:	60 81       	ld	r22, Z
    5b88:	71 81       	ldd	r23, Z+1	; 0x01
    5b8a:	82 81       	ldd	r24, Z+2	; 0x02
    5b8c:	93 81       	ldd	r25, Z+3	; 0x03
    5b8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5b92:	dc 01       	movw	r26, r24
    5b94:	cb 01       	movw	r24, r22
    5b96:	f8 01       	movw	r30, r16
    5b98:	91 83       	std	Z+1, r25	; 0x01
    5b9a:	80 83       	st	Z, r24
    5b9c:	de 01       	movw	r26, r28
    5b9e:	a3 59       	subi	r26, 0x93	; 147
    5ba0:	be 4f       	sbci	r27, 0xFE	; 254
    5ba2:	fe 01       	movw	r30, r28
    5ba4:	ef 58       	subi	r30, 0x8F	; 143
    5ba6:	fe 4f       	sbci	r31, 0xFE	; 254
    5ba8:	80 81       	ld	r24, Z
    5baa:	91 81       	ldd	r25, Z+1	; 0x01
    5bac:	8d 93       	st	X+, r24
    5bae:	9c 93       	st	X, r25
    5bb0:	fe 01       	movw	r30, r28
    5bb2:	e3 59       	subi	r30, 0x93	; 147
    5bb4:	fe 4f       	sbci	r31, 0xFE	; 254
    5bb6:	80 81       	ld	r24, Z
    5bb8:	91 81       	ldd	r25, Z+1	; 0x01
    5bba:	01 97       	sbiw	r24, 0x01	; 1
    5bbc:	f1 f7       	brne	.-4      	; 0x5bba <Forward+0x37da>
    5bbe:	fe 01       	movw	r30, r28
    5bc0:	e3 59       	subi	r30, 0x93	; 147
    5bc2:	fe 4f       	sbci	r31, 0xFE	; 254
    5bc4:	91 83       	std	Z+1, r25	; 0x01
    5bc6:	80 83       	st	Z, r24
	_delay_ms(500);

	/*leg 2 and 3*/
	angle4 = NaturalPos;
    5bc8:	8d e0       	ldi	r24, 0x0D	; 13
    5bca:	80 93 6c 00 	sts	0x006C, r24
	angle7 = POS7N;
    5bce:	8e e0       	ldi	r24, 0x0E	; 14
    5bd0:	80 93 6f 00 	sts	0x006F, r24
    5bd4:	fe 01       	movw	r30, r28
    5bd6:	e7 59       	subi	r30, 0x97	; 151
    5bd8:	fe 4f       	sbci	r31, 0xFE	; 254
    5bda:	80 e0       	ldi	r24, 0x00	; 0
    5bdc:	90 e0       	ldi	r25, 0x00	; 0
    5bde:	aa ef       	ldi	r26, 0xFA	; 250
    5be0:	b3 e4       	ldi	r27, 0x43	; 67
    5be2:	80 83       	st	Z, r24
    5be4:	91 83       	std	Z+1, r25	; 0x01
    5be6:	a2 83       	std	Z+2, r26	; 0x02
    5be8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5bea:	8e 01       	movw	r16, r28
    5bec:	0b 59       	subi	r16, 0x9B	; 155
    5bee:	1e 4f       	sbci	r17, 0xFE	; 254
    5bf0:	fe 01       	movw	r30, r28
    5bf2:	e7 59       	subi	r30, 0x97	; 151
    5bf4:	fe 4f       	sbci	r31, 0xFE	; 254
    5bf6:	60 81       	ld	r22, Z
    5bf8:	71 81       	ldd	r23, Z+1	; 0x01
    5bfa:	82 81       	ldd	r24, Z+2	; 0x02
    5bfc:	93 81       	ldd	r25, Z+3	; 0x03
    5bfe:	20 e0       	ldi	r18, 0x00	; 0
    5c00:	30 e0       	ldi	r19, 0x00	; 0
    5c02:	4a e7       	ldi	r20, 0x7A	; 122
    5c04:	55 e4       	ldi	r21, 0x45	; 69
    5c06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5c0a:	dc 01       	movw	r26, r24
    5c0c:	cb 01       	movw	r24, r22
    5c0e:	f8 01       	movw	r30, r16
    5c10:	80 83       	st	Z, r24
    5c12:	91 83       	std	Z+1, r25	; 0x01
    5c14:	a2 83       	std	Z+2, r26	; 0x02
    5c16:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5c18:	fe 01       	movw	r30, r28
    5c1a:	eb 59       	subi	r30, 0x9B	; 155
    5c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    5c1e:	60 81       	ld	r22, Z
    5c20:	71 81       	ldd	r23, Z+1	; 0x01
    5c22:	82 81       	ldd	r24, Z+2	; 0x02
    5c24:	93 81       	ldd	r25, Z+3	; 0x03
    5c26:	20 e0       	ldi	r18, 0x00	; 0
    5c28:	30 e0       	ldi	r19, 0x00	; 0
    5c2a:	40 e8       	ldi	r20, 0x80	; 128
    5c2c:	5f e3       	ldi	r21, 0x3F	; 63
    5c2e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5c32:	88 23       	and	r24, r24
    5c34:	44 f4       	brge	.+16     	; 0x5c46 <Forward+0x3866>
		__ticks = 1;
    5c36:	fe 01       	movw	r30, r28
    5c38:	ed 59       	subi	r30, 0x9D	; 157
    5c3a:	fe 4f       	sbci	r31, 0xFE	; 254
    5c3c:	81 e0       	ldi	r24, 0x01	; 1
    5c3e:	90 e0       	ldi	r25, 0x00	; 0
    5c40:	91 83       	std	Z+1, r25	; 0x01
    5c42:	80 83       	st	Z, r24
    5c44:	64 c0       	rjmp	.+200    	; 0x5d0e <Forward+0x392e>
	else if (__tmp > 65535)
    5c46:	fe 01       	movw	r30, r28
    5c48:	eb 59       	subi	r30, 0x9B	; 155
    5c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    5c4c:	60 81       	ld	r22, Z
    5c4e:	71 81       	ldd	r23, Z+1	; 0x01
    5c50:	82 81       	ldd	r24, Z+2	; 0x02
    5c52:	93 81       	ldd	r25, Z+3	; 0x03
    5c54:	20 e0       	ldi	r18, 0x00	; 0
    5c56:	3f ef       	ldi	r19, 0xFF	; 255
    5c58:	4f e7       	ldi	r20, 0x7F	; 127
    5c5a:	57 e4       	ldi	r21, 0x47	; 71
    5c5c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5c60:	18 16       	cp	r1, r24
    5c62:	0c f0       	brlt	.+2      	; 0x5c66 <Forward+0x3886>
    5c64:	43 c0       	rjmp	.+134    	; 0x5cec <Forward+0x390c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5c66:	fe 01       	movw	r30, r28
    5c68:	e7 59       	subi	r30, 0x97	; 151
    5c6a:	fe 4f       	sbci	r31, 0xFE	; 254
    5c6c:	60 81       	ld	r22, Z
    5c6e:	71 81       	ldd	r23, Z+1	; 0x01
    5c70:	82 81       	ldd	r24, Z+2	; 0x02
    5c72:	93 81       	ldd	r25, Z+3	; 0x03
    5c74:	20 e0       	ldi	r18, 0x00	; 0
    5c76:	30 e0       	ldi	r19, 0x00	; 0
    5c78:	40 e2       	ldi	r20, 0x20	; 32
    5c7a:	51 e4       	ldi	r21, 0x41	; 65
    5c7c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5c80:	dc 01       	movw	r26, r24
    5c82:	cb 01       	movw	r24, r22
    5c84:	8e 01       	movw	r16, r28
    5c86:	0d 59       	subi	r16, 0x9D	; 157
    5c88:	1e 4f       	sbci	r17, 0xFE	; 254
    5c8a:	bc 01       	movw	r22, r24
    5c8c:	cd 01       	movw	r24, r26
    5c8e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5c92:	dc 01       	movw	r26, r24
    5c94:	cb 01       	movw	r24, r22
    5c96:	f8 01       	movw	r30, r16
    5c98:	91 83       	std	Z+1, r25	; 0x01
    5c9a:	80 83       	st	Z, r24
    5c9c:	1f c0       	rjmp	.+62     	; 0x5cdc <Forward+0x38fc>
    5c9e:	fe 01       	movw	r30, r28
    5ca0:	ef 59       	subi	r30, 0x9F	; 159
    5ca2:	fe 4f       	sbci	r31, 0xFE	; 254
    5ca4:	80 e9       	ldi	r24, 0x90	; 144
    5ca6:	91 e0       	ldi	r25, 0x01	; 1
    5ca8:	91 83       	std	Z+1, r25	; 0x01
    5caa:	80 83       	st	Z, r24
    5cac:	fe 01       	movw	r30, r28
    5cae:	ef 59       	subi	r30, 0x9F	; 159
    5cb0:	fe 4f       	sbci	r31, 0xFE	; 254
    5cb2:	80 81       	ld	r24, Z
    5cb4:	91 81       	ldd	r25, Z+1	; 0x01
    5cb6:	01 97       	sbiw	r24, 0x01	; 1
    5cb8:	f1 f7       	brne	.-4      	; 0x5cb6 <Forward+0x38d6>
    5cba:	fe 01       	movw	r30, r28
    5cbc:	ef 59       	subi	r30, 0x9F	; 159
    5cbe:	fe 4f       	sbci	r31, 0xFE	; 254
    5cc0:	91 83       	std	Z+1, r25	; 0x01
    5cc2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5cc4:	de 01       	movw	r26, r28
    5cc6:	ad 59       	subi	r26, 0x9D	; 157
    5cc8:	be 4f       	sbci	r27, 0xFE	; 254
    5cca:	fe 01       	movw	r30, r28
    5ccc:	ed 59       	subi	r30, 0x9D	; 157
    5cce:	fe 4f       	sbci	r31, 0xFE	; 254
    5cd0:	80 81       	ld	r24, Z
    5cd2:	91 81       	ldd	r25, Z+1	; 0x01
    5cd4:	01 97       	sbiw	r24, 0x01	; 1
    5cd6:	11 96       	adiw	r26, 0x01	; 1
    5cd8:	9c 93       	st	X, r25
    5cda:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5cdc:	fe 01       	movw	r30, r28
    5cde:	ed 59       	subi	r30, 0x9D	; 157
    5ce0:	fe 4f       	sbci	r31, 0xFE	; 254
    5ce2:	80 81       	ld	r24, Z
    5ce4:	91 81       	ldd	r25, Z+1	; 0x01
    5ce6:	00 97       	sbiw	r24, 0x00	; 0
    5ce8:	d1 f6       	brne	.-76     	; 0x5c9e <Forward+0x38be>
    5cea:	27 c0       	rjmp	.+78     	; 0x5d3a <Forward+0x395a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5cec:	8e 01       	movw	r16, r28
    5cee:	0d 59       	subi	r16, 0x9D	; 157
    5cf0:	1e 4f       	sbci	r17, 0xFE	; 254
    5cf2:	fe 01       	movw	r30, r28
    5cf4:	eb 59       	subi	r30, 0x9B	; 155
    5cf6:	fe 4f       	sbci	r31, 0xFE	; 254
    5cf8:	60 81       	ld	r22, Z
    5cfa:	71 81       	ldd	r23, Z+1	; 0x01
    5cfc:	82 81       	ldd	r24, Z+2	; 0x02
    5cfe:	93 81       	ldd	r25, Z+3	; 0x03
    5d00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5d04:	dc 01       	movw	r26, r24
    5d06:	cb 01       	movw	r24, r22
    5d08:	f8 01       	movw	r30, r16
    5d0a:	91 83       	std	Z+1, r25	; 0x01
    5d0c:	80 83       	st	Z, r24
    5d0e:	de 01       	movw	r26, r28
    5d10:	a1 5a       	subi	r26, 0xA1	; 161
    5d12:	be 4f       	sbci	r27, 0xFE	; 254
    5d14:	fe 01       	movw	r30, r28
    5d16:	ed 59       	subi	r30, 0x9D	; 157
    5d18:	fe 4f       	sbci	r31, 0xFE	; 254
    5d1a:	80 81       	ld	r24, Z
    5d1c:	91 81       	ldd	r25, Z+1	; 0x01
    5d1e:	8d 93       	st	X+, r24
    5d20:	9c 93       	st	X, r25
    5d22:	fe 01       	movw	r30, r28
    5d24:	e1 5a       	subi	r30, 0xA1	; 161
    5d26:	fe 4f       	sbci	r31, 0xFE	; 254
    5d28:	80 81       	ld	r24, Z
    5d2a:	91 81       	ldd	r25, Z+1	; 0x01
    5d2c:	01 97       	sbiw	r24, 0x01	; 1
    5d2e:	f1 f7       	brne	.-4      	; 0x5d2c <Forward+0x394c>
    5d30:	fe 01       	movw	r30, r28
    5d32:	e1 5a       	subi	r30, 0xA1	; 161
    5d34:	fe 4f       	sbci	r31, 0xFE	; 254
    5d36:	91 83       	std	Z+1, r25	; 0x01
    5d38:	80 83       	st	Z, r24
	_delay_ms(500);

//	/*STOP HERE*/
	/*leg 1*/
	angle1 = NaturalPos;
    5d3a:	8d e0       	ldi	r24, 0x0D	; 13
    5d3c:	80 93 69 00 	sts	0x0069, r24
	angle2 = NaturalPos;
    5d40:	8d e0       	ldi	r24, 0x0D	; 13
    5d42:	80 93 6a 00 	sts	0x006A, r24
	angle3 = POS8N;
    5d46:	8f e0       	ldi	r24, 0x0F	; 15
    5d48:	80 93 6b 00 	sts	0x006B, r24

	/*leg 2*/
	angle4 = NaturalPos;
    5d4c:	8d e0       	ldi	r24, 0x0D	; 13
    5d4e:	80 93 6c 00 	sts	0x006C, r24
	angle5 = NaturalPos;
    5d52:	8d e0       	ldi	r24, 0x0D	; 13
    5d54:	80 93 6d 00 	sts	0x006D, r24
	angle6 = POS8N;
    5d58:	8f e0       	ldi	r24, 0x0F	; 15
    5d5a:	80 93 6e 00 	sts	0x006E, r24

	/*leg 3*/
	angle7 = POS7N;
    5d5e:	8e e0       	ldi	r24, 0x0E	; 14
    5d60:	80 93 6f 00 	sts	0x006F, r24
	angle8 = NaturalPos;
    5d64:	8d e0       	ldi	r24, 0x0D	; 13
    5d66:	80 93 70 00 	sts	0x0070, r24
	angle9 = POS8N;
    5d6a:	8f e0       	ldi	r24, 0x0F	; 15
    5d6c:	80 93 71 00 	sts	0x0071, r24

	/*leg 4*/
	angle10 = POSN3;
    5d70:	8a e0       	ldi	r24, 0x0A	; 10
    5d72:	80 93 72 00 	sts	0x0072, r24
	angle11 = NaturalPos;
    5d76:	8d e0       	ldi	r24, 0x0D	; 13
    5d78:	80 93 73 00 	sts	0x0073, r24
	angle12 = POS8N;
    5d7c:	8f e0       	ldi	r24, 0x0F	; 15
    5d7e:	80 93 74 00 	sts	0x0074, r24

	/*Step 2*/
	/*leg 3*/
	angle8 = POSN5;
    5d82:	8c e0       	ldi	r24, 0x0C	; 12
    5d84:	80 93 70 00 	sts	0x0070, r24
    5d88:	fe 01       	movw	r30, r28
    5d8a:	e5 5a       	subi	r30, 0xA5	; 165
    5d8c:	fe 4f       	sbci	r31, 0xFE	; 254
    5d8e:	80 e0       	ldi	r24, 0x00	; 0
    5d90:	90 e0       	ldi	r25, 0x00	; 0
    5d92:	ac e8       	ldi	r26, 0x8C	; 140
    5d94:	b2 e4       	ldi	r27, 0x42	; 66
    5d96:	80 83       	st	Z, r24
    5d98:	91 83       	std	Z+1, r25	; 0x01
    5d9a:	a2 83       	std	Z+2, r26	; 0x02
    5d9c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5d9e:	8e 01       	movw	r16, r28
    5da0:	09 5a       	subi	r16, 0xA9	; 169
    5da2:	1e 4f       	sbci	r17, 0xFE	; 254
    5da4:	fe 01       	movw	r30, r28
    5da6:	e5 5a       	subi	r30, 0xA5	; 165
    5da8:	fe 4f       	sbci	r31, 0xFE	; 254
    5daa:	60 81       	ld	r22, Z
    5dac:	71 81       	ldd	r23, Z+1	; 0x01
    5dae:	82 81       	ldd	r24, Z+2	; 0x02
    5db0:	93 81       	ldd	r25, Z+3	; 0x03
    5db2:	20 e0       	ldi	r18, 0x00	; 0
    5db4:	30 e0       	ldi	r19, 0x00	; 0
    5db6:	4a e7       	ldi	r20, 0x7A	; 122
    5db8:	55 e4       	ldi	r21, 0x45	; 69
    5dba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5dbe:	dc 01       	movw	r26, r24
    5dc0:	cb 01       	movw	r24, r22
    5dc2:	f8 01       	movw	r30, r16
    5dc4:	80 83       	st	Z, r24
    5dc6:	91 83       	std	Z+1, r25	; 0x01
    5dc8:	a2 83       	std	Z+2, r26	; 0x02
    5dca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5dcc:	fe 01       	movw	r30, r28
    5dce:	e9 5a       	subi	r30, 0xA9	; 169
    5dd0:	fe 4f       	sbci	r31, 0xFE	; 254
    5dd2:	60 81       	ld	r22, Z
    5dd4:	71 81       	ldd	r23, Z+1	; 0x01
    5dd6:	82 81       	ldd	r24, Z+2	; 0x02
    5dd8:	93 81       	ldd	r25, Z+3	; 0x03
    5dda:	20 e0       	ldi	r18, 0x00	; 0
    5ddc:	30 e0       	ldi	r19, 0x00	; 0
    5dde:	40 e8       	ldi	r20, 0x80	; 128
    5de0:	5f e3       	ldi	r21, 0x3F	; 63
    5de2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5de6:	88 23       	and	r24, r24
    5de8:	44 f4       	brge	.+16     	; 0x5dfa <Forward+0x3a1a>
		__ticks = 1;
    5dea:	fe 01       	movw	r30, r28
    5dec:	eb 5a       	subi	r30, 0xAB	; 171
    5dee:	fe 4f       	sbci	r31, 0xFE	; 254
    5df0:	81 e0       	ldi	r24, 0x01	; 1
    5df2:	90 e0       	ldi	r25, 0x00	; 0
    5df4:	91 83       	std	Z+1, r25	; 0x01
    5df6:	80 83       	st	Z, r24
    5df8:	64 c0       	rjmp	.+200    	; 0x5ec2 <Forward+0x3ae2>
	else if (__tmp > 65535)
    5dfa:	fe 01       	movw	r30, r28
    5dfc:	e9 5a       	subi	r30, 0xA9	; 169
    5dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    5e00:	60 81       	ld	r22, Z
    5e02:	71 81       	ldd	r23, Z+1	; 0x01
    5e04:	82 81       	ldd	r24, Z+2	; 0x02
    5e06:	93 81       	ldd	r25, Z+3	; 0x03
    5e08:	20 e0       	ldi	r18, 0x00	; 0
    5e0a:	3f ef       	ldi	r19, 0xFF	; 255
    5e0c:	4f e7       	ldi	r20, 0x7F	; 127
    5e0e:	57 e4       	ldi	r21, 0x47	; 71
    5e10:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5e14:	18 16       	cp	r1, r24
    5e16:	0c f0       	brlt	.+2      	; 0x5e1a <Forward+0x3a3a>
    5e18:	43 c0       	rjmp	.+134    	; 0x5ea0 <Forward+0x3ac0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5e1a:	fe 01       	movw	r30, r28
    5e1c:	e5 5a       	subi	r30, 0xA5	; 165
    5e1e:	fe 4f       	sbci	r31, 0xFE	; 254
    5e20:	60 81       	ld	r22, Z
    5e22:	71 81       	ldd	r23, Z+1	; 0x01
    5e24:	82 81       	ldd	r24, Z+2	; 0x02
    5e26:	93 81       	ldd	r25, Z+3	; 0x03
    5e28:	20 e0       	ldi	r18, 0x00	; 0
    5e2a:	30 e0       	ldi	r19, 0x00	; 0
    5e2c:	40 e2       	ldi	r20, 0x20	; 32
    5e2e:	51 e4       	ldi	r21, 0x41	; 65
    5e30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5e34:	dc 01       	movw	r26, r24
    5e36:	cb 01       	movw	r24, r22
    5e38:	8e 01       	movw	r16, r28
    5e3a:	0b 5a       	subi	r16, 0xAB	; 171
    5e3c:	1e 4f       	sbci	r17, 0xFE	; 254
    5e3e:	bc 01       	movw	r22, r24
    5e40:	cd 01       	movw	r24, r26
    5e42:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5e46:	dc 01       	movw	r26, r24
    5e48:	cb 01       	movw	r24, r22
    5e4a:	f8 01       	movw	r30, r16
    5e4c:	91 83       	std	Z+1, r25	; 0x01
    5e4e:	80 83       	st	Z, r24
    5e50:	1f c0       	rjmp	.+62     	; 0x5e90 <Forward+0x3ab0>
    5e52:	fe 01       	movw	r30, r28
    5e54:	ed 5a       	subi	r30, 0xAD	; 173
    5e56:	fe 4f       	sbci	r31, 0xFE	; 254
    5e58:	80 e9       	ldi	r24, 0x90	; 144
    5e5a:	91 e0       	ldi	r25, 0x01	; 1
    5e5c:	91 83       	std	Z+1, r25	; 0x01
    5e5e:	80 83       	st	Z, r24
    5e60:	fe 01       	movw	r30, r28
    5e62:	ed 5a       	subi	r30, 0xAD	; 173
    5e64:	fe 4f       	sbci	r31, 0xFE	; 254
    5e66:	80 81       	ld	r24, Z
    5e68:	91 81       	ldd	r25, Z+1	; 0x01
    5e6a:	01 97       	sbiw	r24, 0x01	; 1
    5e6c:	f1 f7       	brne	.-4      	; 0x5e6a <Forward+0x3a8a>
    5e6e:	fe 01       	movw	r30, r28
    5e70:	ed 5a       	subi	r30, 0xAD	; 173
    5e72:	fe 4f       	sbci	r31, 0xFE	; 254
    5e74:	91 83       	std	Z+1, r25	; 0x01
    5e76:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5e78:	de 01       	movw	r26, r28
    5e7a:	ab 5a       	subi	r26, 0xAB	; 171
    5e7c:	be 4f       	sbci	r27, 0xFE	; 254
    5e7e:	fe 01       	movw	r30, r28
    5e80:	eb 5a       	subi	r30, 0xAB	; 171
    5e82:	fe 4f       	sbci	r31, 0xFE	; 254
    5e84:	80 81       	ld	r24, Z
    5e86:	91 81       	ldd	r25, Z+1	; 0x01
    5e88:	01 97       	sbiw	r24, 0x01	; 1
    5e8a:	11 96       	adiw	r26, 0x01	; 1
    5e8c:	9c 93       	st	X, r25
    5e8e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5e90:	fe 01       	movw	r30, r28
    5e92:	eb 5a       	subi	r30, 0xAB	; 171
    5e94:	fe 4f       	sbci	r31, 0xFE	; 254
    5e96:	80 81       	ld	r24, Z
    5e98:	91 81       	ldd	r25, Z+1	; 0x01
    5e9a:	00 97       	sbiw	r24, 0x00	; 0
    5e9c:	d1 f6       	brne	.-76     	; 0x5e52 <Forward+0x3a72>
    5e9e:	27 c0       	rjmp	.+78     	; 0x5eee <Forward+0x3b0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5ea0:	8e 01       	movw	r16, r28
    5ea2:	0b 5a       	subi	r16, 0xAB	; 171
    5ea4:	1e 4f       	sbci	r17, 0xFE	; 254
    5ea6:	fe 01       	movw	r30, r28
    5ea8:	e9 5a       	subi	r30, 0xA9	; 169
    5eaa:	fe 4f       	sbci	r31, 0xFE	; 254
    5eac:	60 81       	ld	r22, Z
    5eae:	71 81       	ldd	r23, Z+1	; 0x01
    5eb0:	82 81       	ldd	r24, Z+2	; 0x02
    5eb2:	93 81       	ldd	r25, Z+3	; 0x03
    5eb4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5eb8:	dc 01       	movw	r26, r24
    5eba:	cb 01       	movw	r24, r22
    5ebc:	f8 01       	movw	r30, r16
    5ebe:	91 83       	std	Z+1, r25	; 0x01
    5ec0:	80 83       	st	Z, r24
    5ec2:	de 01       	movw	r26, r28
    5ec4:	af 5a       	subi	r26, 0xAF	; 175
    5ec6:	be 4f       	sbci	r27, 0xFE	; 254
    5ec8:	fe 01       	movw	r30, r28
    5eca:	eb 5a       	subi	r30, 0xAB	; 171
    5ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    5ece:	80 81       	ld	r24, Z
    5ed0:	91 81       	ldd	r25, Z+1	; 0x01
    5ed2:	8d 93       	st	X+, r24
    5ed4:	9c 93       	st	X, r25
    5ed6:	fe 01       	movw	r30, r28
    5ed8:	ef 5a       	subi	r30, 0xAF	; 175
    5eda:	fe 4f       	sbci	r31, 0xFE	; 254
    5edc:	80 81       	ld	r24, Z
    5ede:	91 81       	ldd	r25, Z+1	; 0x01
    5ee0:	01 97       	sbiw	r24, 0x01	; 1
    5ee2:	f1 f7       	brne	.-4      	; 0x5ee0 <Forward+0x3b00>
    5ee4:	fe 01       	movw	r30, r28
    5ee6:	ef 5a       	subi	r30, 0xAF	; 175
    5ee8:	fe 4f       	sbci	r31, 0xFE	; 254
    5eea:	91 83       	std	Z+1, r25	; 0x01
    5eec:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = POSN4;
    5eee:	8b e0       	ldi	r24, 0x0B	; 11
    5ef0:	80 93 70 00 	sts	0x0070, r24
    5ef4:	fe 01       	movw	r30, r28
    5ef6:	e3 5b       	subi	r30, 0xB3	; 179
    5ef8:	fe 4f       	sbci	r31, 0xFE	; 254
    5efa:	80 e0       	ldi	r24, 0x00	; 0
    5efc:	90 e0       	ldi	r25, 0x00	; 0
    5efe:	ac e8       	ldi	r26, 0x8C	; 140
    5f00:	b2 e4       	ldi	r27, 0x42	; 66
    5f02:	80 83       	st	Z, r24
    5f04:	91 83       	std	Z+1, r25	; 0x01
    5f06:	a2 83       	std	Z+2, r26	; 0x02
    5f08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5f0a:	8e 01       	movw	r16, r28
    5f0c:	07 5b       	subi	r16, 0xB7	; 183
    5f0e:	1e 4f       	sbci	r17, 0xFE	; 254
    5f10:	fe 01       	movw	r30, r28
    5f12:	e3 5b       	subi	r30, 0xB3	; 179
    5f14:	fe 4f       	sbci	r31, 0xFE	; 254
    5f16:	60 81       	ld	r22, Z
    5f18:	71 81       	ldd	r23, Z+1	; 0x01
    5f1a:	82 81       	ldd	r24, Z+2	; 0x02
    5f1c:	93 81       	ldd	r25, Z+3	; 0x03
    5f1e:	20 e0       	ldi	r18, 0x00	; 0
    5f20:	30 e0       	ldi	r19, 0x00	; 0
    5f22:	4a e7       	ldi	r20, 0x7A	; 122
    5f24:	55 e4       	ldi	r21, 0x45	; 69
    5f26:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5f2a:	dc 01       	movw	r26, r24
    5f2c:	cb 01       	movw	r24, r22
    5f2e:	f8 01       	movw	r30, r16
    5f30:	80 83       	st	Z, r24
    5f32:	91 83       	std	Z+1, r25	; 0x01
    5f34:	a2 83       	std	Z+2, r26	; 0x02
    5f36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5f38:	fe 01       	movw	r30, r28
    5f3a:	e7 5b       	subi	r30, 0xB7	; 183
    5f3c:	fe 4f       	sbci	r31, 0xFE	; 254
    5f3e:	60 81       	ld	r22, Z
    5f40:	71 81       	ldd	r23, Z+1	; 0x01
    5f42:	82 81       	ldd	r24, Z+2	; 0x02
    5f44:	93 81       	ldd	r25, Z+3	; 0x03
    5f46:	20 e0       	ldi	r18, 0x00	; 0
    5f48:	30 e0       	ldi	r19, 0x00	; 0
    5f4a:	40 e8       	ldi	r20, 0x80	; 128
    5f4c:	5f e3       	ldi	r21, 0x3F	; 63
    5f4e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    5f52:	88 23       	and	r24, r24
    5f54:	44 f4       	brge	.+16     	; 0x5f66 <Forward+0x3b86>
		__ticks = 1;
    5f56:	fe 01       	movw	r30, r28
    5f58:	e9 5b       	subi	r30, 0xB9	; 185
    5f5a:	fe 4f       	sbci	r31, 0xFE	; 254
    5f5c:	81 e0       	ldi	r24, 0x01	; 1
    5f5e:	90 e0       	ldi	r25, 0x00	; 0
    5f60:	91 83       	std	Z+1, r25	; 0x01
    5f62:	80 83       	st	Z, r24
    5f64:	64 c0       	rjmp	.+200    	; 0x602e <Forward+0x3c4e>
	else if (__tmp > 65535)
    5f66:	fe 01       	movw	r30, r28
    5f68:	e7 5b       	subi	r30, 0xB7	; 183
    5f6a:	fe 4f       	sbci	r31, 0xFE	; 254
    5f6c:	60 81       	ld	r22, Z
    5f6e:	71 81       	ldd	r23, Z+1	; 0x01
    5f70:	82 81       	ldd	r24, Z+2	; 0x02
    5f72:	93 81       	ldd	r25, Z+3	; 0x03
    5f74:	20 e0       	ldi	r18, 0x00	; 0
    5f76:	3f ef       	ldi	r19, 0xFF	; 255
    5f78:	4f e7       	ldi	r20, 0x7F	; 127
    5f7a:	57 e4       	ldi	r21, 0x47	; 71
    5f7c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    5f80:	18 16       	cp	r1, r24
    5f82:	0c f0       	brlt	.+2      	; 0x5f86 <Forward+0x3ba6>
    5f84:	43 c0       	rjmp	.+134    	; 0x600c <Forward+0x3c2c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5f86:	fe 01       	movw	r30, r28
    5f88:	e3 5b       	subi	r30, 0xB3	; 179
    5f8a:	fe 4f       	sbci	r31, 0xFE	; 254
    5f8c:	60 81       	ld	r22, Z
    5f8e:	71 81       	ldd	r23, Z+1	; 0x01
    5f90:	82 81       	ldd	r24, Z+2	; 0x02
    5f92:	93 81       	ldd	r25, Z+3	; 0x03
    5f94:	20 e0       	ldi	r18, 0x00	; 0
    5f96:	30 e0       	ldi	r19, 0x00	; 0
    5f98:	40 e2       	ldi	r20, 0x20	; 32
    5f9a:	51 e4       	ldi	r21, 0x41	; 65
    5f9c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    5fa0:	dc 01       	movw	r26, r24
    5fa2:	cb 01       	movw	r24, r22
    5fa4:	8e 01       	movw	r16, r28
    5fa6:	09 5b       	subi	r16, 0xB9	; 185
    5fa8:	1e 4f       	sbci	r17, 0xFE	; 254
    5faa:	bc 01       	movw	r22, r24
    5fac:	cd 01       	movw	r24, r26
    5fae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    5fb2:	dc 01       	movw	r26, r24
    5fb4:	cb 01       	movw	r24, r22
    5fb6:	f8 01       	movw	r30, r16
    5fb8:	91 83       	std	Z+1, r25	; 0x01
    5fba:	80 83       	st	Z, r24
    5fbc:	1f c0       	rjmp	.+62     	; 0x5ffc <Forward+0x3c1c>
    5fbe:	fe 01       	movw	r30, r28
    5fc0:	eb 5b       	subi	r30, 0xBB	; 187
    5fc2:	fe 4f       	sbci	r31, 0xFE	; 254
    5fc4:	80 e9       	ldi	r24, 0x90	; 144
    5fc6:	91 e0       	ldi	r25, 0x01	; 1
    5fc8:	91 83       	std	Z+1, r25	; 0x01
    5fca:	80 83       	st	Z, r24
    5fcc:	fe 01       	movw	r30, r28
    5fce:	eb 5b       	subi	r30, 0xBB	; 187
    5fd0:	fe 4f       	sbci	r31, 0xFE	; 254
    5fd2:	80 81       	ld	r24, Z
    5fd4:	91 81       	ldd	r25, Z+1	; 0x01
    5fd6:	01 97       	sbiw	r24, 0x01	; 1
    5fd8:	f1 f7       	brne	.-4      	; 0x5fd6 <Forward+0x3bf6>
    5fda:	fe 01       	movw	r30, r28
    5fdc:	eb 5b       	subi	r30, 0xBB	; 187
    5fde:	fe 4f       	sbci	r31, 0xFE	; 254
    5fe0:	91 83       	std	Z+1, r25	; 0x01
    5fe2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5fe4:	de 01       	movw	r26, r28
    5fe6:	a9 5b       	subi	r26, 0xB9	; 185
    5fe8:	be 4f       	sbci	r27, 0xFE	; 254
    5fea:	fe 01       	movw	r30, r28
    5fec:	e9 5b       	subi	r30, 0xB9	; 185
    5fee:	fe 4f       	sbci	r31, 0xFE	; 254
    5ff0:	80 81       	ld	r24, Z
    5ff2:	91 81       	ldd	r25, Z+1	; 0x01
    5ff4:	01 97       	sbiw	r24, 0x01	; 1
    5ff6:	11 96       	adiw	r26, 0x01	; 1
    5ff8:	9c 93       	st	X, r25
    5ffa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5ffc:	fe 01       	movw	r30, r28
    5ffe:	e9 5b       	subi	r30, 0xB9	; 185
    6000:	fe 4f       	sbci	r31, 0xFE	; 254
    6002:	80 81       	ld	r24, Z
    6004:	91 81       	ldd	r25, Z+1	; 0x01
    6006:	00 97       	sbiw	r24, 0x00	; 0
    6008:	d1 f6       	brne	.-76     	; 0x5fbe <Forward+0x3bde>
    600a:	27 c0       	rjmp	.+78     	; 0x605a <Forward+0x3c7a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    600c:	8e 01       	movw	r16, r28
    600e:	09 5b       	subi	r16, 0xB9	; 185
    6010:	1e 4f       	sbci	r17, 0xFE	; 254
    6012:	fe 01       	movw	r30, r28
    6014:	e7 5b       	subi	r30, 0xB7	; 183
    6016:	fe 4f       	sbci	r31, 0xFE	; 254
    6018:	60 81       	ld	r22, Z
    601a:	71 81       	ldd	r23, Z+1	; 0x01
    601c:	82 81       	ldd	r24, Z+2	; 0x02
    601e:	93 81       	ldd	r25, Z+3	; 0x03
    6020:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6024:	dc 01       	movw	r26, r24
    6026:	cb 01       	movw	r24, r22
    6028:	f8 01       	movw	r30, r16
    602a:	91 83       	std	Z+1, r25	; 0x01
    602c:	80 83       	st	Z, r24
    602e:	de 01       	movw	r26, r28
    6030:	ad 5b       	subi	r26, 0xBD	; 189
    6032:	be 4f       	sbci	r27, 0xFE	; 254
    6034:	fe 01       	movw	r30, r28
    6036:	e9 5b       	subi	r30, 0xB9	; 185
    6038:	fe 4f       	sbci	r31, 0xFE	; 254
    603a:	80 81       	ld	r24, Z
    603c:	91 81       	ldd	r25, Z+1	; 0x01
    603e:	8d 93       	st	X+, r24
    6040:	9c 93       	st	X, r25
    6042:	fe 01       	movw	r30, r28
    6044:	ed 5b       	subi	r30, 0xBD	; 189
    6046:	fe 4f       	sbci	r31, 0xFE	; 254
    6048:	80 81       	ld	r24, Z
    604a:	91 81       	ldd	r25, Z+1	; 0x01
    604c:	01 97       	sbiw	r24, 0x01	; 1
    604e:	f1 f7       	brne	.-4      	; 0x604c <Forward+0x3c6c>
    6050:	fe 01       	movw	r30, r28
    6052:	ed 5b       	subi	r30, 0xBD	; 189
    6054:	fe 4f       	sbci	r31, 0xFE	; 254
    6056:	91 83       	std	Z+1, r25	; 0x01
    6058:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = POSN3;
    605a:	8a e0       	ldi	r24, 0x0A	; 10
    605c:	80 93 70 00 	sts	0x0070, r24
    6060:	fe 01       	movw	r30, r28
    6062:	e1 5c       	subi	r30, 0xC1	; 193
    6064:	fe 4f       	sbci	r31, 0xFE	; 254
    6066:	80 e0       	ldi	r24, 0x00	; 0
    6068:	90 e0       	ldi	r25, 0x00	; 0
    606a:	ac e8       	ldi	r26, 0x8C	; 140
    606c:	b2 e4       	ldi	r27, 0x42	; 66
    606e:	80 83       	st	Z, r24
    6070:	91 83       	std	Z+1, r25	; 0x01
    6072:	a2 83       	std	Z+2, r26	; 0x02
    6074:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6076:	8e 01       	movw	r16, r28
    6078:	05 5c       	subi	r16, 0xC5	; 197
    607a:	1e 4f       	sbci	r17, 0xFE	; 254
    607c:	fe 01       	movw	r30, r28
    607e:	e1 5c       	subi	r30, 0xC1	; 193
    6080:	fe 4f       	sbci	r31, 0xFE	; 254
    6082:	60 81       	ld	r22, Z
    6084:	71 81       	ldd	r23, Z+1	; 0x01
    6086:	82 81       	ldd	r24, Z+2	; 0x02
    6088:	93 81       	ldd	r25, Z+3	; 0x03
    608a:	20 e0       	ldi	r18, 0x00	; 0
    608c:	30 e0       	ldi	r19, 0x00	; 0
    608e:	4a e7       	ldi	r20, 0x7A	; 122
    6090:	55 e4       	ldi	r21, 0x45	; 69
    6092:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6096:	dc 01       	movw	r26, r24
    6098:	cb 01       	movw	r24, r22
    609a:	f8 01       	movw	r30, r16
    609c:	80 83       	st	Z, r24
    609e:	91 83       	std	Z+1, r25	; 0x01
    60a0:	a2 83       	std	Z+2, r26	; 0x02
    60a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    60a4:	fe 01       	movw	r30, r28
    60a6:	e5 5c       	subi	r30, 0xC5	; 197
    60a8:	fe 4f       	sbci	r31, 0xFE	; 254
    60aa:	60 81       	ld	r22, Z
    60ac:	71 81       	ldd	r23, Z+1	; 0x01
    60ae:	82 81       	ldd	r24, Z+2	; 0x02
    60b0:	93 81       	ldd	r25, Z+3	; 0x03
    60b2:	20 e0       	ldi	r18, 0x00	; 0
    60b4:	30 e0       	ldi	r19, 0x00	; 0
    60b6:	40 e8       	ldi	r20, 0x80	; 128
    60b8:	5f e3       	ldi	r21, 0x3F	; 63
    60ba:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    60be:	88 23       	and	r24, r24
    60c0:	44 f4       	brge	.+16     	; 0x60d2 <Forward+0x3cf2>
		__ticks = 1;
    60c2:	fe 01       	movw	r30, r28
    60c4:	e7 5c       	subi	r30, 0xC7	; 199
    60c6:	fe 4f       	sbci	r31, 0xFE	; 254
    60c8:	81 e0       	ldi	r24, 0x01	; 1
    60ca:	90 e0       	ldi	r25, 0x00	; 0
    60cc:	91 83       	std	Z+1, r25	; 0x01
    60ce:	80 83       	st	Z, r24
    60d0:	64 c0       	rjmp	.+200    	; 0x619a <Forward+0x3dba>
	else if (__tmp > 65535)
    60d2:	fe 01       	movw	r30, r28
    60d4:	e5 5c       	subi	r30, 0xC5	; 197
    60d6:	fe 4f       	sbci	r31, 0xFE	; 254
    60d8:	60 81       	ld	r22, Z
    60da:	71 81       	ldd	r23, Z+1	; 0x01
    60dc:	82 81       	ldd	r24, Z+2	; 0x02
    60de:	93 81       	ldd	r25, Z+3	; 0x03
    60e0:	20 e0       	ldi	r18, 0x00	; 0
    60e2:	3f ef       	ldi	r19, 0xFF	; 255
    60e4:	4f e7       	ldi	r20, 0x7F	; 127
    60e6:	57 e4       	ldi	r21, 0x47	; 71
    60e8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    60ec:	18 16       	cp	r1, r24
    60ee:	0c f0       	brlt	.+2      	; 0x60f2 <Forward+0x3d12>
    60f0:	43 c0       	rjmp	.+134    	; 0x6178 <Forward+0x3d98>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    60f2:	fe 01       	movw	r30, r28
    60f4:	e1 5c       	subi	r30, 0xC1	; 193
    60f6:	fe 4f       	sbci	r31, 0xFE	; 254
    60f8:	60 81       	ld	r22, Z
    60fa:	71 81       	ldd	r23, Z+1	; 0x01
    60fc:	82 81       	ldd	r24, Z+2	; 0x02
    60fe:	93 81       	ldd	r25, Z+3	; 0x03
    6100:	20 e0       	ldi	r18, 0x00	; 0
    6102:	30 e0       	ldi	r19, 0x00	; 0
    6104:	40 e2       	ldi	r20, 0x20	; 32
    6106:	51 e4       	ldi	r21, 0x41	; 65
    6108:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    610c:	dc 01       	movw	r26, r24
    610e:	cb 01       	movw	r24, r22
    6110:	8e 01       	movw	r16, r28
    6112:	07 5c       	subi	r16, 0xC7	; 199
    6114:	1e 4f       	sbci	r17, 0xFE	; 254
    6116:	bc 01       	movw	r22, r24
    6118:	cd 01       	movw	r24, r26
    611a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    611e:	dc 01       	movw	r26, r24
    6120:	cb 01       	movw	r24, r22
    6122:	f8 01       	movw	r30, r16
    6124:	91 83       	std	Z+1, r25	; 0x01
    6126:	80 83       	st	Z, r24
    6128:	1f c0       	rjmp	.+62     	; 0x6168 <Forward+0x3d88>
    612a:	fe 01       	movw	r30, r28
    612c:	e9 5c       	subi	r30, 0xC9	; 201
    612e:	fe 4f       	sbci	r31, 0xFE	; 254
    6130:	80 e9       	ldi	r24, 0x90	; 144
    6132:	91 e0       	ldi	r25, 0x01	; 1
    6134:	91 83       	std	Z+1, r25	; 0x01
    6136:	80 83       	st	Z, r24
    6138:	fe 01       	movw	r30, r28
    613a:	e9 5c       	subi	r30, 0xC9	; 201
    613c:	fe 4f       	sbci	r31, 0xFE	; 254
    613e:	80 81       	ld	r24, Z
    6140:	91 81       	ldd	r25, Z+1	; 0x01
    6142:	01 97       	sbiw	r24, 0x01	; 1
    6144:	f1 f7       	brne	.-4      	; 0x6142 <Forward+0x3d62>
    6146:	fe 01       	movw	r30, r28
    6148:	e9 5c       	subi	r30, 0xC9	; 201
    614a:	fe 4f       	sbci	r31, 0xFE	; 254
    614c:	91 83       	std	Z+1, r25	; 0x01
    614e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6150:	de 01       	movw	r26, r28
    6152:	a7 5c       	subi	r26, 0xC7	; 199
    6154:	be 4f       	sbci	r27, 0xFE	; 254
    6156:	fe 01       	movw	r30, r28
    6158:	e7 5c       	subi	r30, 0xC7	; 199
    615a:	fe 4f       	sbci	r31, 0xFE	; 254
    615c:	80 81       	ld	r24, Z
    615e:	91 81       	ldd	r25, Z+1	; 0x01
    6160:	01 97       	sbiw	r24, 0x01	; 1
    6162:	11 96       	adiw	r26, 0x01	; 1
    6164:	9c 93       	st	X, r25
    6166:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6168:	fe 01       	movw	r30, r28
    616a:	e7 5c       	subi	r30, 0xC7	; 199
    616c:	fe 4f       	sbci	r31, 0xFE	; 254
    616e:	80 81       	ld	r24, Z
    6170:	91 81       	ldd	r25, Z+1	; 0x01
    6172:	00 97       	sbiw	r24, 0x00	; 0
    6174:	d1 f6       	brne	.-76     	; 0x612a <Forward+0x3d4a>
    6176:	27 c0       	rjmp	.+78     	; 0x61c6 <Forward+0x3de6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6178:	8e 01       	movw	r16, r28
    617a:	07 5c       	subi	r16, 0xC7	; 199
    617c:	1e 4f       	sbci	r17, 0xFE	; 254
    617e:	fe 01       	movw	r30, r28
    6180:	e5 5c       	subi	r30, 0xC5	; 197
    6182:	fe 4f       	sbci	r31, 0xFE	; 254
    6184:	60 81       	ld	r22, Z
    6186:	71 81       	ldd	r23, Z+1	; 0x01
    6188:	82 81       	ldd	r24, Z+2	; 0x02
    618a:	93 81       	ldd	r25, Z+3	; 0x03
    618c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6190:	dc 01       	movw	r26, r24
    6192:	cb 01       	movw	r24, r22
    6194:	f8 01       	movw	r30, r16
    6196:	91 83       	std	Z+1, r25	; 0x01
    6198:	80 83       	st	Z, r24
    619a:	de 01       	movw	r26, r28
    619c:	ab 5c       	subi	r26, 0xCB	; 203
    619e:	be 4f       	sbci	r27, 0xFE	; 254
    61a0:	fe 01       	movw	r30, r28
    61a2:	e7 5c       	subi	r30, 0xC7	; 199
    61a4:	fe 4f       	sbci	r31, 0xFE	; 254
    61a6:	80 81       	ld	r24, Z
    61a8:	91 81       	ldd	r25, Z+1	; 0x01
    61aa:	8d 93       	st	X+, r24
    61ac:	9c 93       	st	X, r25
    61ae:	fe 01       	movw	r30, r28
    61b0:	eb 5c       	subi	r30, 0xCB	; 203
    61b2:	fe 4f       	sbci	r31, 0xFE	; 254
    61b4:	80 81       	ld	r24, Z
    61b6:	91 81       	ldd	r25, Z+1	; 0x01
    61b8:	01 97       	sbiw	r24, 0x01	; 1
    61ba:	f1 f7       	brne	.-4      	; 0x61b8 <Forward+0x3dd8>
    61bc:	fe 01       	movw	r30, r28
    61be:	eb 5c       	subi	r30, 0xCB	; 203
    61c0:	fe 4f       	sbci	r31, 0xFE	; 254
    61c2:	91 83       	std	Z+1, r25	; 0x01
    61c4:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = POSN2;
    61c6:	89 e0       	ldi	r24, 0x09	; 9
    61c8:	80 93 70 00 	sts	0x0070, r24
	angle9 = POS7N;
    61cc:	8e e0       	ldi	r24, 0x0E	; 14
    61ce:	80 93 71 00 	sts	0x0071, r24
    61d2:	fe 01       	movw	r30, r28
    61d4:	ef 5c       	subi	r30, 0xCF	; 207
    61d6:	fe 4f       	sbci	r31, 0xFE	; 254
    61d8:	80 e0       	ldi	r24, 0x00	; 0
    61da:	90 e0       	ldi	r25, 0x00	; 0
    61dc:	ac e8       	ldi	r26, 0x8C	; 140
    61de:	b2 e4       	ldi	r27, 0x42	; 66
    61e0:	80 83       	st	Z, r24
    61e2:	91 83       	std	Z+1, r25	; 0x01
    61e4:	a2 83       	std	Z+2, r26	; 0x02
    61e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    61e8:	8e 01       	movw	r16, r28
    61ea:	03 5d       	subi	r16, 0xD3	; 211
    61ec:	1e 4f       	sbci	r17, 0xFE	; 254
    61ee:	fe 01       	movw	r30, r28
    61f0:	ef 5c       	subi	r30, 0xCF	; 207
    61f2:	fe 4f       	sbci	r31, 0xFE	; 254
    61f4:	60 81       	ld	r22, Z
    61f6:	71 81       	ldd	r23, Z+1	; 0x01
    61f8:	82 81       	ldd	r24, Z+2	; 0x02
    61fa:	93 81       	ldd	r25, Z+3	; 0x03
    61fc:	20 e0       	ldi	r18, 0x00	; 0
    61fe:	30 e0       	ldi	r19, 0x00	; 0
    6200:	4a e7       	ldi	r20, 0x7A	; 122
    6202:	55 e4       	ldi	r21, 0x45	; 69
    6204:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6208:	dc 01       	movw	r26, r24
    620a:	cb 01       	movw	r24, r22
    620c:	f8 01       	movw	r30, r16
    620e:	80 83       	st	Z, r24
    6210:	91 83       	std	Z+1, r25	; 0x01
    6212:	a2 83       	std	Z+2, r26	; 0x02
    6214:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6216:	fe 01       	movw	r30, r28
    6218:	e3 5d       	subi	r30, 0xD3	; 211
    621a:	fe 4f       	sbci	r31, 0xFE	; 254
    621c:	60 81       	ld	r22, Z
    621e:	71 81       	ldd	r23, Z+1	; 0x01
    6220:	82 81       	ldd	r24, Z+2	; 0x02
    6222:	93 81       	ldd	r25, Z+3	; 0x03
    6224:	20 e0       	ldi	r18, 0x00	; 0
    6226:	30 e0       	ldi	r19, 0x00	; 0
    6228:	40 e8       	ldi	r20, 0x80	; 128
    622a:	5f e3       	ldi	r21, 0x3F	; 63
    622c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6230:	88 23       	and	r24, r24
    6232:	44 f4       	brge	.+16     	; 0x6244 <Forward+0x3e64>
		__ticks = 1;
    6234:	fe 01       	movw	r30, r28
    6236:	e5 5d       	subi	r30, 0xD5	; 213
    6238:	fe 4f       	sbci	r31, 0xFE	; 254
    623a:	81 e0       	ldi	r24, 0x01	; 1
    623c:	90 e0       	ldi	r25, 0x00	; 0
    623e:	91 83       	std	Z+1, r25	; 0x01
    6240:	80 83       	st	Z, r24
    6242:	64 c0       	rjmp	.+200    	; 0x630c <Forward+0x3f2c>
	else if (__tmp > 65535)
    6244:	fe 01       	movw	r30, r28
    6246:	e3 5d       	subi	r30, 0xD3	; 211
    6248:	fe 4f       	sbci	r31, 0xFE	; 254
    624a:	60 81       	ld	r22, Z
    624c:	71 81       	ldd	r23, Z+1	; 0x01
    624e:	82 81       	ldd	r24, Z+2	; 0x02
    6250:	93 81       	ldd	r25, Z+3	; 0x03
    6252:	20 e0       	ldi	r18, 0x00	; 0
    6254:	3f ef       	ldi	r19, 0xFF	; 255
    6256:	4f e7       	ldi	r20, 0x7F	; 127
    6258:	57 e4       	ldi	r21, 0x47	; 71
    625a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    625e:	18 16       	cp	r1, r24
    6260:	0c f0       	brlt	.+2      	; 0x6264 <Forward+0x3e84>
    6262:	43 c0       	rjmp	.+134    	; 0x62ea <Forward+0x3f0a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6264:	fe 01       	movw	r30, r28
    6266:	ef 5c       	subi	r30, 0xCF	; 207
    6268:	fe 4f       	sbci	r31, 0xFE	; 254
    626a:	60 81       	ld	r22, Z
    626c:	71 81       	ldd	r23, Z+1	; 0x01
    626e:	82 81       	ldd	r24, Z+2	; 0x02
    6270:	93 81       	ldd	r25, Z+3	; 0x03
    6272:	20 e0       	ldi	r18, 0x00	; 0
    6274:	30 e0       	ldi	r19, 0x00	; 0
    6276:	40 e2       	ldi	r20, 0x20	; 32
    6278:	51 e4       	ldi	r21, 0x41	; 65
    627a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    627e:	dc 01       	movw	r26, r24
    6280:	cb 01       	movw	r24, r22
    6282:	8e 01       	movw	r16, r28
    6284:	05 5d       	subi	r16, 0xD5	; 213
    6286:	1e 4f       	sbci	r17, 0xFE	; 254
    6288:	bc 01       	movw	r22, r24
    628a:	cd 01       	movw	r24, r26
    628c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6290:	dc 01       	movw	r26, r24
    6292:	cb 01       	movw	r24, r22
    6294:	f8 01       	movw	r30, r16
    6296:	91 83       	std	Z+1, r25	; 0x01
    6298:	80 83       	st	Z, r24
    629a:	1f c0       	rjmp	.+62     	; 0x62da <Forward+0x3efa>
    629c:	fe 01       	movw	r30, r28
    629e:	e7 5d       	subi	r30, 0xD7	; 215
    62a0:	fe 4f       	sbci	r31, 0xFE	; 254
    62a2:	80 e9       	ldi	r24, 0x90	; 144
    62a4:	91 e0       	ldi	r25, 0x01	; 1
    62a6:	91 83       	std	Z+1, r25	; 0x01
    62a8:	80 83       	st	Z, r24
    62aa:	fe 01       	movw	r30, r28
    62ac:	e7 5d       	subi	r30, 0xD7	; 215
    62ae:	fe 4f       	sbci	r31, 0xFE	; 254
    62b0:	80 81       	ld	r24, Z
    62b2:	91 81       	ldd	r25, Z+1	; 0x01
    62b4:	01 97       	sbiw	r24, 0x01	; 1
    62b6:	f1 f7       	brne	.-4      	; 0x62b4 <Forward+0x3ed4>
    62b8:	fe 01       	movw	r30, r28
    62ba:	e7 5d       	subi	r30, 0xD7	; 215
    62bc:	fe 4f       	sbci	r31, 0xFE	; 254
    62be:	91 83       	std	Z+1, r25	; 0x01
    62c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    62c2:	de 01       	movw	r26, r28
    62c4:	a5 5d       	subi	r26, 0xD5	; 213
    62c6:	be 4f       	sbci	r27, 0xFE	; 254
    62c8:	fe 01       	movw	r30, r28
    62ca:	e5 5d       	subi	r30, 0xD5	; 213
    62cc:	fe 4f       	sbci	r31, 0xFE	; 254
    62ce:	80 81       	ld	r24, Z
    62d0:	91 81       	ldd	r25, Z+1	; 0x01
    62d2:	01 97       	sbiw	r24, 0x01	; 1
    62d4:	11 96       	adiw	r26, 0x01	; 1
    62d6:	9c 93       	st	X, r25
    62d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    62da:	fe 01       	movw	r30, r28
    62dc:	e5 5d       	subi	r30, 0xD5	; 213
    62de:	fe 4f       	sbci	r31, 0xFE	; 254
    62e0:	80 81       	ld	r24, Z
    62e2:	91 81       	ldd	r25, Z+1	; 0x01
    62e4:	00 97       	sbiw	r24, 0x00	; 0
    62e6:	d1 f6       	brne	.-76     	; 0x629c <Forward+0x3ebc>
    62e8:	27 c0       	rjmp	.+78     	; 0x6338 <Forward+0x3f58>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    62ea:	8e 01       	movw	r16, r28
    62ec:	05 5d       	subi	r16, 0xD5	; 213
    62ee:	1e 4f       	sbci	r17, 0xFE	; 254
    62f0:	fe 01       	movw	r30, r28
    62f2:	e3 5d       	subi	r30, 0xD3	; 211
    62f4:	fe 4f       	sbci	r31, 0xFE	; 254
    62f6:	60 81       	ld	r22, Z
    62f8:	71 81       	ldd	r23, Z+1	; 0x01
    62fa:	82 81       	ldd	r24, Z+2	; 0x02
    62fc:	93 81       	ldd	r25, Z+3	; 0x03
    62fe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6302:	dc 01       	movw	r26, r24
    6304:	cb 01       	movw	r24, r22
    6306:	f8 01       	movw	r30, r16
    6308:	91 83       	std	Z+1, r25	; 0x01
    630a:	80 83       	st	Z, r24
    630c:	de 01       	movw	r26, r28
    630e:	a9 5d       	subi	r26, 0xD9	; 217
    6310:	be 4f       	sbci	r27, 0xFE	; 254
    6312:	fe 01       	movw	r30, r28
    6314:	e5 5d       	subi	r30, 0xD5	; 213
    6316:	fe 4f       	sbci	r31, 0xFE	; 254
    6318:	80 81       	ld	r24, Z
    631a:	91 81       	ldd	r25, Z+1	; 0x01
    631c:	8d 93       	st	X+, r24
    631e:	9c 93       	st	X, r25
    6320:	fe 01       	movw	r30, r28
    6322:	e9 5d       	subi	r30, 0xD9	; 217
    6324:	fe 4f       	sbci	r31, 0xFE	; 254
    6326:	80 81       	ld	r24, Z
    6328:	91 81       	ldd	r25, Z+1	; 0x01
    632a:	01 97       	sbiw	r24, 0x01	; 1
    632c:	f1 f7       	brne	.-4      	; 0x632a <Forward+0x3f4a>
    632e:	fe 01       	movw	r30, r28
    6330:	e9 5d       	subi	r30, 0xD9	; 217
    6332:	fe 4f       	sbci	r31, 0xFE	; 254
    6334:	91 83       	std	Z+1, r25	; 0x01
    6336:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = NaturalPos;
    6338:	8d e0       	ldi	r24, 0x0D	; 13
    633a:	80 93 71 00 	sts	0x0071, r24
    633e:	fe 01       	movw	r30, r28
    6340:	ed 5d       	subi	r30, 0xDD	; 221
    6342:	fe 4f       	sbci	r31, 0xFE	; 254
    6344:	80 e0       	ldi	r24, 0x00	; 0
    6346:	90 e0       	ldi	r25, 0x00	; 0
    6348:	ac e8       	ldi	r26, 0x8C	; 140
    634a:	b2 e4       	ldi	r27, 0x42	; 66
    634c:	80 83       	st	Z, r24
    634e:	91 83       	std	Z+1, r25	; 0x01
    6350:	a2 83       	std	Z+2, r26	; 0x02
    6352:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6354:	8e 01       	movw	r16, r28
    6356:	01 5e       	subi	r16, 0xE1	; 225
    6358:	1e 4f       	sbci	r17, 0xFE	; 254
    635a:	fe 01       	movw	r30, r28
    635c:	ed 5d       	subi	r30, 0xDD	; 221
    635e:	fe 4f       	sbci	r31, 0xFE	; 254
    6360:	60 81       	ld	r22, Z
    6362:	71 81       	ldd	r23, Z+1	; 0x01
    6364:	82 81       	ldd	r24, Z+2	; 0x02
    6366:	93 81       	ldd	r25, Z+3	; 0x03
    6368:	20 e0       	ldi	r18, 0x00	; 0
    636a:	30 e0       	ldi	r19, 0x00	; 0
    636c:	4a e7       	ldi	r20, 0x7A	; 122
    636e:	55 e4       	ldi	r21, 0x45	; 69
    6370:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6374:	dc 01       	movw	r26, r24
    6376:	cb 01       	movw	r24, r22
    6378:	f8 01       	movw	r30, r16
    637a:	80 83       	st	Z, r24
    637c:	91 83       	std	Z+1, r25	; 0x01
    637e:	a2 83       	std	Z+2, r26	; 0x02
    6380:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6382:	fe 01       	movw	r30, r28
    6384:	e1 5e       	subi	r30, 0xE1	; 225
    6386:	fe 4f       	sbci	r31, 0xFE	; 254
    6388:	60 81       	ld	r22, Z
    638a:	71 81       	ldd	r23, Z+1	; 0x01
    638c:	82 81       	ldd	r24, Z+2	; 0x02
    638e:	93 81       	ldd	r25, Z+3	; 0x03
    6390:	20 e0       	ldi	r18, 0x00	; 0
    6392:	30 e0       	ldi	r19, 0x00	; 0
    6394:	40 e8       	ldi	r20, 0x80	; 128
    6396:	5f e3       	ldi	r21, 0x3F	; 63
    6398:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    639c:	88 23       	and	r24, r24
    639e:	44 f4       	brge	.+16     	; 0x63b0 <Forward+0x3fd0>
		__ticks = 1;
    63a0:	fe 01       	movw	r30, r28
    63a2:	e3 5e       	subi	r30, 0xE3	; 227
    63a4:	fe 4f       	sbci	r31, 0xFE	; 254
    63a6:	81 e0       	ldi	r24, 0x01	; 1
    63a8:	90 e0       	ldi	r25, 0x00	; 0
    63aa:	91 83       	std	Z+1, r25	; 0x01
    63ac:	80 83       	st	Z, r24
    63ae:	64 c0       	rjmp	.+200    	; 0x6478 <Forward+0x4098>
	else if (__tmp > 65535)
    63b0:	fe 01       	movw	r30, r28
    63b2:	e1 5e       	subi	r30, 0xE1	; 225
    63b4:	fe 4f       	sbci	r31, 0xFE	; 254
    63b6:	60 81       	ld	r22, Z
    63b8:	71 81       	ldd	r23, Z+1	; 0x01
    63ba:	82 81       	ldd	r24, Z+2	; 0x02
    63bc:	93 81       	ldd	r25, Z+3	; 0x03
    63be:	20 e0       	ldi	r18, 0x00	; 0
    63c0:	3f ef       	ldi	r19, 0xFF	; 255
    63c2:	4f e7       	ldi	r20, 0x7F	; 127
    63c4:	57 e4       	ldi	r21, 0x47	; 71
    63c6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    63ca:	18 16       	cp	r1, r24
    63cc:	0c f0       	brlt	.+2      	; 0x63d0 <Forward+0x3ff0>
    63ce:	43 c0       	rjmp	.+134    	; 0x6456 <Forward+0x4076>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    63d0:	fe 01       	movw	r30, r28
    63d2:	ed 5d       	subi	r30, 0xDD	; 221
    63d4:	fe 4f       	sbci	r31, 0xFE	; 254
    63d6:	60 81       	ld	r22, Z
    63d8:	71 81       	ldd	r23, Z+1	; 0x01
    63da:	82 81       	ldd	r24, Z+2	; 0x02
    63dc:	93 81       	ldd	r25, Z+3	; 0x03
    63de:	20 e0       	ldi	r18, 0x00	; 0
    63e0:	30 e0       	ldi	r19, 0x00	; 0
    63e2:	40 e2       	ldi	r20, 0x20	; 32
    63e4:	51 e4       	ldi	r21, 0x41	; 65
    63e6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    63ea:	dc 01       	movw	r26, r24
    63ec:	cb 01       	movw	r24, r22
    63ee:	8e 01       	movw	r16, r28
    63f0:	03 5e       	subi	r16, 0xE3	; 227
    63f2:	1e 4f       	sbci	r17, 0xFE	; 254
    63f4:	bc 01       	movw	r22, r24
    63f6:	cd 01       	movw	r24, r26
    63f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    63fc:	dc 01       	movw	r26, r24
    63fe:	cb 01       	movw	r24, r22
    6400:	f8 01       	movw	r30, r16
    6402:	91 83       	std	Z+1, r25	; 0x01
    6404:	80 83       	st	Z, r24
    6406:	1f c0       	rjmp	.+62     	; 0x6446 <Forward+0x4066>
    6408:	fe 01       	movw	r30, r28
    640a:	e5 5e       	subi	r30, 0xE5	; 229
    640c:	fe 4f       	sbci	r31, 0xFE	; 254
    640e:	80 e9       	ldi	r24, 0x90	; 144
    6410:	91 e0       	ldi	r25, 0x01	; 1
    6412:	91 83       	std	Z+1, r25	; 0x01
    6414:	80 83       	st	Z, r24
    6416:	fe 01       	movw	r30, r28
    6418:	e5 5e       	subi	r30, 0xE5	; 229
    641a:	fe 4f       	sbci	r31, 0xFE	; 254
    641c:	80 81       	ld	r24, Z
    641e:	91 81       	ldd	r25, Z+1	; 0x01
    6420:	01 97       	sbiw	r24, 0x01	; 1
    6422:	f1 f7       	brne	.-4      	; 0x6420 <Forward+0x4040>
    6424:	fe 01       	movw	r30, r28
    6426:	e5 5e       	subi	r30, 0xE5	; 229
    6428:	fe 4f       	sbci	r31, 0xFE	; 254
    642a:	91 83       	std	Z+1, r25	; 0x01
    642c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    642e:	de 01       	movw	r26, r28
    6430:	a3 5e       	subi	r26, 0xE3	; 227
    6432:	be 4f       	sbci	r27, 0xFE	; 254
    6434:	fe 01       	movw	r30, r28
    6436:	e3 5e       	subi	r30, 0xE3	; 227
    6438:	fe 4f       	sbci	r31, 0xFE	; 254
    643a:	80 81       	ld	r24, Z
    643c:	91 81       	ldd	r25, Z+1	; 0x01
    643e:	01 97       	sbiw	r24, 0x01	; 1
    6440:	11 96       	adiw	r26, 0x01	; 1
    6442:	9c 93       	st	X, r25
    6444:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6446:	fe 01       	movw	r30, r28
    6448:	e3 5e       	subi	r30, 0xE3	; 227
    644a:	fe 4f       	sbci	r31, 0xFE	; 254
    644c:	80 81       	ld	r24, Z
    644e:	91 81       	ldd	r25, Z+1	; 0x01
    6450:	00 97       	sbiw	r24, 0x00	; 0
    6452:	d1 f6       	brne	.-76     	; 0x6408 <Forward+0x4028>
    6454:	27 c0       	rjmp	.+78     	; 0x64a4 <Forward+0x40c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6456:	8e 01       	movw	r16, r28
    6458:	03 5e       	subi	r16, 0xE3	; 227
    645a:	1e 4f       	sbci	r17, 0xFE	; 254
    645c:	fe 01       	movw	r30, r28
    645e:	e1 5e       	subi	r30, 0xE1	; 225
    6460:	fe 4f       	sbci	r31, 0xFE	; 254
    6462:	60 81       	ld	r22, Z
    6464:	71 81       	ldd	r23, Z+1	; 0x01
    6466:	82 81       	ldd	r24, Z+2	; 0x02
    6468:	93 81       	ldd	r25, Z+3	; 0x03
    646a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    646e:	dc 01       	movw	r26, r24
    6470:	cb 01       	movw	r24, r22
    6472:	f8 01       	movw	r30, r16
    6474:	91 83       	std	Z+1, r25	; 0x01
    6476:	80 83       	st	Z, r24
    6478:	de 01       	movw	r26, r28
    647a:	a7 5e       	subi	r26, 0xE7	; 231
    647c:	be 4f       	sbci	r27, 0xFE	; 254
    647e:	fe 01       	movw	r30, r28
    6480:	e3 5e       	subi	r30, 0xE3	; 227
    6482:	fe 4f       	sbci	r31, 0xFE	; 254
    6484:	80 81       	ld	r24, Z
    6486:	91 81       	ldd	r25, Z+1	; 0x01
    6488:	8d 93       	st	X+, r24
    648a:	9c 93       	st	X, r25
    648c:	fe 01       	movw	r30, r28
    648e:	e7 5e       	subi	r30, 0xE7	; 231
    6490:	fe 4f       	sbci	r31, 0xFE	; 254
    6492:	80 81       	ld	r24, Z
    6494:	91 81       	ldd	r25, Z+1	; 0x01
    6496:	01 97       	sbiw	r24, 0x01	; 1
    6498:	f1 f7       	brne	.-4      	; 0x6496 <Forward+0x40b6>
    649a:	fe 01       	movw	r30, r28
    649c:	e7 5e       	subi	r30, 0xE7	; 231
    649e:	fe 4f       	sbci	r31, 0xFE	; 254
    64a0:	91 83       	std	Z+1, r25	; 0x01
    64a2:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POSN5;
    64a4:	8c e0       	ldi	r24, 0x0C	; 12
    64a6:	80 93 71 00 	sts	0x0071, r24
    64aa:	fe 01       	movw	r30, r28
    64ac:	eb 5e       	subi	r30, 0xEB	; 235
    64ae:	fe 4f       	sbci	r31, 0xFE	; 254
    64b0:	80 e0       	ldi	r24, 0x00	; 0
    64b2:	90 e0       	ldi	r25, 0x00	; 0
    64b4:	ac e8       	ldi	r26, 0x8C	; 140
    64b6:	b2 e4       	ldi	r27, 0x42	; 66
    64b8:	80 83       	st	Z, r24
    64ba:	91 83       	std	Z+1, r25	; 0x01
    64bc:	a2 83       	std	Z+2, r26	; 0x02
    64be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    64c0:	8e 01       	movw	r16, r28
    64c2:	0f 5e       	subi	r16, 0xEF	; 239
    64c4:	1e 4f       	sbci	r17, 0xFE	; 254
    64c6:	fe 01       	movw	r30, r28
    64c8:	eb 5e       	subi	r30, 0xEB	; 235
    64ca:	fe 4f       	sbci	r31, 0xFE	; 254
    64cc:	60 81       	ld	r22, Z
    64ce:	71 81       	ldd	r23, Z+1	; 0x01
    64d0:	82 81       	ldd	r24, Z+2	; 0x02
    64d2:	93 81       	ldd	r25, Z+3	; 0x03
    64d4:	20 e0       	ldi	r18, 0x00	; 0
    64d6:	30 e0       	ldi	r19, 0x00	; 0
    64d8:	4a e7       	ldi	r20, 0x7A	; 122
    64da:	55 e4       	ldi	r21, 0x45	; 69
    64dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    64e0:	dc 01       	movw	r26, r24
    64e2:	cb 01       	movw	r24, r22
    64e4:	f8 01       	movw	r30, r16
    64e6:	80 83       	st	Z, r24
    64e8:	91 83       	std	Z+1, r25	; 0x01
    64ea:	a2 83       	std	Z+2, r26	; 0x02
    64ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    64ee:	fe 01       	movw	r30, r28
    64f0:	ef 5e       	subi	r30, 0xEF	; 239
    64f2:	fe 4f       	sbci	r31, 0xFE	; 254
    64f4:	60 81       	ld	r22, Z
    64f6:	71 81       	ldd	r23, Z+1	; 0x01
    64f8:	82 81       	ldd	r24, Z+2	; 0x02
    64fa:	93 81       	ldd	r25, Z+3	; 0x03
    64fc:	20 e0       	ldi	r18, 0x00	; 0
    64fe:	30 e0       	ldi	r19, 0x00	; 0
    6500:	40 e8       	ldi	r20, 0x80	; 128
    6502:	5f e3       	ldi	r21, 0x3F	; 63
    6504:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6508:	88 23       	and	r24, r24
    650a:	44 f4       	brge	.+16     	; 0x651c <Forward+0x413c>
		__ticks = 1;
    650c:	fe 01       	movw	r30, r28
    650e:	e1 5f       	subi	r30, 0xF1	; 241
    6510:	fe 4f       	sbci	r31, 0xFE	; 254
    6512:	81 e0       	ldi	r24, 0x01	; 1
    6514:	90 e0       	ldi	r25, 0x00	; 0
    6516:	91 83       	std	Z+1, r25	; 0x01
    6518:	80 83       	st	Z, r24
    651a:	64 c0       	rjmp	.+200    	; 0x65e4 <Forward+0x4204>
	else if (__tmp > 65535)
    651c:	fe 01       	movw	r30, r28
    651e:	ef 5e       	subi	r30, 0xEF	; 239
    6520:	fe 4f       	sbci	r31, 0xFE	; 254
    6522:	60 81       	ld	r22, Z
    6524:	71 81       	ldd	r23, Z+1	; 0x01
    6526:	82 81       	ldd	r24, Z+2	; 0x02
    6528:	93 81       	ldd	r25, Z+3	; 0x03
    652a:	20 e0       	ldi	r18, 0x00	; 0
    652c:	3f ef       	ldi	r19, 0xFF	; 255
    652e:	4f e7       	ldi	r20, 0x7F	; 127
    6530:	57 e4       	ldi	r21, 0x47	; 71
    6532:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    6536:	18 16       	cp	r1, r24
    6538:	0c f0       	brlt	.+2      	; 0x653c <Forward+0x415c>
    653a:	43 c0       	rjmp	.+134    	; 0x65c2 <Forward+0x41e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    653c:	fe 01       	movw	r30, r28
    653e:	eb 5e       	subi	r30, 0xEB	; 235
    6540:	fe 4f       	sbci	r31, 0xFE	; 254
    6542:	60 81       	ld	r22, Z
    6544:	71 81       	ldd	r23, Z+1	; 0x01
    6546:	82 81       	ldd	r24, Z+2	; 0x02
    6548:	93 81       	ldd	r25, Z+3	; 0x03
    654a:	20 e0       	ldi	r18, 0x00	; 0
    654c:	30 e0       	ldi	r19, 0x00	; 0
    654e:	40 e2       	ldi	r20, 0x20	; 32
    6550:	51 e4       	ldi	r21, 0x41	; 65
    6552:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6556:	dc 01       	movw	r26, r24
    6558:	cb 01       	movw	r24, r22
    655a:	8e 01       	movw	r16, r28
    655c:	01 5f       	subi	r16, 0xF1	; 241
    655e:	1e 4f       	sbci	r17, 0xFE	; 254
    6560:	bc 01       	movw	r22, r24
    6562:	cd 01       	movw	r24, r26
    6564:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6568:	dc 01       	movw	r26, r24
    656a:	cb 01       	movw	r24, r22
    656c:	f8 01       	movw	r30, r16
    656e:	91 83       	std	Z+1, r25	; 0x01
    6570:	80 83       	st	Z, r24
    6572:	1f c0       	rjmp	.+62     	; 0x65b2 <Forward+0x41d2>
    6574:	fe 01       	movw	r30, r28
    6576:	e3 5f       	subi	r30, 0xF3	; 243
    6578:	fe 4f       	sbci	r31, 0xFE	; 254
    657a:	80 e9       	ldi	r24, 0x90	; 144
    657c:	91 e0       	ldi	r25, 0x01	; 1
    657e:	91 83       	std	Z+1, r25	; 0x01
    6580:	80 83       	st	Z, r24
    6582:	fe 01       	movw	r30, r28
    6584:	e3 5f       	subi	r30, 0xF3	; 243
    6586:	fe 4f       	sbci	r31, 0xFE	; 254
    6588:	80 81       	ld	r24, Z
    658a:	91 81       	ldd	r25, Z+1	; 0x01
    658c:	01 97       	sbiw	r24, 0x01	; 1
    658e:	f1 f7       	brne	.-4      	; 0x658c <Forward+0x41ac>
    6590:	fe 01       	movw	r30, r28
    6592:	e3 5f       	subi	r30, 0xF3	; 243
    6594:	fe 4f       	sbci	r31, 0xFE	; 254
    6596:	91 83       	std	Z+1, r25	; 0x01
    6598:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    659a:	de 01       	movw	r26, r28
    659c:	a1 5f       	subi	r26, 0xF1	; 241
    659e:	be 4f       	sbci	r27, 0xFE	; 254
    65a0:	fe 01       	movw	r30, r28
    65a2:	e1 5f       	subi	r30, 0xF1	; 241
    65a4:	fe 4f       	sbci	r31, 0xFE	; 254
    65a6:	80 81       	ld	r24, Z
    65a8:	91 81       	ldd	r25, Z+1	; 0x01
    65aa:	01 97       	sbiw	r24, 0x01	; 1
    65ac:	11 96       	adiw	r26, 0x01	; 1
    65ae:	9c 93       	st	X, r25
    65b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    65b2:	fe 01       	movw	r30, r28
    65b4:	e1 5f       	subi	r30, 0xF1	; 241
    65b6:	fe 4f       	sbci	r31, 0xFE	; 254
    65b8:	80 81       	ld	r24, Z
    65ba:	91 81       	ldd	r25, Z+1	; 0x01
    65bc:	00 97       	sbiw	r24, 0x00	; 0
    65be:	d1 f6       	brne	.-76     	; 0x6574 <Forward+0x4194>
    65c0:	27 c0       	rjmp	.+78     	; 0x6610 <Forward+0x4230>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    65c2:	8e 01       	movw	r16, r28
    65c4:	01 5f       	subi	r16, 0xF1	; 241
    65c6:	1e 4f       	sbci	r17, 0xFE	; 254
    65c8:	fe 01       	movw	r30, r28
    65ca:	ef 5e       	subi	r30, 0xEF	; 239
    65cc:	fe 4f       	sbci	r31, 0xFE	; 254
    65ce:	60 81       	ld	r22, Z
    65d0:	71 81       	ldd	r23, Z+1	; 0x01
    65d2:	82 81       	ldd	r24, Z+2	; 0x02
    65d4:	93 81       	ldd	r25, Z+3	; 0x03
    65d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    65da:	dc 01       	movw	r26, r24
    65dc:	cb 01       	movw	r24, r22
    65de:	f8 01       	movw	r30, r16
    65e0:	91 83       	std	Z+1, r25	; 0x01
    65e2:	80 83       	st	Z, r24
    65e4:	de 01       	movw	r26, r28
    65e6:	a5 5f       	subi	r26, 0xF5	; 245
    65e8:	be 4f       	sbci	r27, 0xFE	; 254
    65ea:	fe 01       	movw	r30, r28
    65ec:	e1 5f       	subi	r30, 0xF1	; 241
    65ee:	fe 4f       	sbci	r31, 0xFE	; 254
    65f0:	80 81       	ld	r24, Z
    65f2:	91 81       	ldd	r25, Z+1	; 0x01
    65f4:	8d 93       	st	X+, r24
    65f6:	9c 93       	st	X, r25
    65f8:	fe 01       	movw	r30, r28
    65fa:	e5 5f       	subi	r30, 0xF5	; 245
    65fc:	fe 4f       	sbci	r31, 0xFE	; 254
    65fe:	80 81       	ld	r24, Z
    6600:	91 81       	ldd	r25, Z+1	; 0x01
    6602:	01 97       	sbiw	r24, 0x01	; 1
    6604:	f1 f7       	brne	.-4      	; 0x6602 <Forward+0x4222>
    6606:	fe 01       	movw	r30, r28
    6608:	e5 5f       	subi	r30, 0xF5	; 245
    660a:	fe 4f       	sbci	r31, 0xFE	; 254
    660c:	91 83       	std	Z+1, r25	; 0x01
    660e:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POSN4;
    6610:	8b e0       	ldi	r24, 0x0B	; 11
    6612:	80 93 71 00 	sts	0x0071, r24
    6616:	fe 01       	movw	r30, r28
    6618:	e9 5f       	subi	r30, 0xF9	; 249
    661a:	fe 4f       	sbci	r31, 0xFE	; 254
    661c:	80 e0       	ldi	r24, 0x00	; 0
    661e:	90 e0       	ldi	r25, 0x00	; 0
    6620:	ac e8       	ldi	r26, 0x8C	; 140
    6622:	b2 e4       	ldi	r27, 0x42	; 66
    6624:	80 83       	st	Z, r24
    6626:	91 83       	std	Z+1, r25	; 0x01
    6628:	a2 83       	std	Z+2, r26	; 0x02
    662a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    662c:	8e 01       	movw	r16, r28
    662e:	0d 5f       	subi	r16, 0xFD	; 253
    6630:	1e 4f       	sbci	r17, 0xFE	; 254
    6632:	fe 01       	movw	r30, r28
    6634:	e9 5f       	subi	r30, 0xF9	; 249
    6636:	fe 4f       	sbci	r31, 0xFE	; 254
    6638:	60 81       	ld	r22, Z
    663a:	71 81       	ldd	r23, Z+1	; 0x01
    663c:	82 81       	ldd	r24, Z+2	; 0x02
    663e:	93 81       	ldd	r25, Z+3	; 0x03
    6640:	20 e0       	ldi	r18, 0x00	; 0
    6642:	30 e0       	ldi	r19, 0x00	; 0
    6644:	4a e7       	ldi	r20, 0x7A	; 122
    6646:	55 e4       	ldi	r21, 0x45	; 69
    6648:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    664c:	dc 01       	movw	r26, r24
    664e:	cb 01       	movw	r24, r22
    6650:	f8 01       	movw	r30, r16
    6652:	80 83       	st	Z, r24
    6654:	91 83       	std	Z+1, r25	; 0x01
    6656:	a2 83       	std	Z+2, r26	; 0x02
    6658:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    665a:	fe 01       	movw	r30, r28
    665c:	ed 5f       	subi	r30, 0xFD	; 253
    665e:	fe 4f       	sbci	r31, 0xFE	; 254
    6660:	60 81       	ld	r22, Z
    6662:	71 81       	ldd	r23, Z+1	; 0x01
    6664:	82 81       	ldd	r24, Z+2	; 0x02
    6666:	93 81       	ldd	r25, Z+3	; 0x03
    6668:	20 e0       	ldi	r18, 0x00	; 0
    666a:	30 e0       	ldi	r19, 0x00	; 0
    666c:	40 e8       	ldi	r20, 0x80	; 128
    666e:	5f e3       	ldi	r21, 0x3F	; 63
    6670:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6674:	88 23       	and	r24, r24
    6676:	44 f4       	brge	.+16     	; 0x6688 <Forward+0x42a8>
		__ticks = 1;
    6678:	fe 01       	movw	r30, r28
    667a:	ef 5f       	subi	r30, 0xFF	; 255
    667c:	fe 4f       	sbci	r31, 0xFE	; 254
    667e:	81 e0       	ldi	r24, 0x01	; 1
    6680:	90 e0       	ldi	r25, 0x00	; 0
    6682:	91 83       	std	Z+1, r25	; 0x01
    6684:	80 83       	st	Z, r24
    6686:	64 c0       	rjmp	.+200    	; 0x6750 <Forward+0x4370>
	else if (__tmp > 65535)
    6688:	fe 01       	movw	r30, r28
    668a:	ed 5f       	subi	r30, 0xFD	; 253
    668c:	fe 4f       	sbci	r31, 0xFE	; 254
    668e:	60 81       	ld	r22, Z
    6690:	71 81       	ldd	r23, Z+1	; 0x01
    6692:	82 81       	ldd	r24, Z+2	; 0x02
    6694:	93 81       	ldd	r25, Z+3	; 0x03
    6696:	20 e0       	ldi	r18, 0x00	; 0
    6698:	3f ef       	ldi	r19, 0xFF	; 255
    669a:	4f e7       	ldi	r20, 0x7F	; 127
    669c:	57 e4       	ldi	r21, 0x47	; 71
    669e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    66a2:	18 16       	cp	r1, r24
    66a4:	0c f0       	brlt	.+2      	; 0x66a8 <Forward+0x42c8>
    66a6:	43 c0       	rjmp	.+134    	; 0x672e <Forward+0x434e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    66a8:	fe 01       	movw	r30, r28
    66aa:	e9 5f       	subi	r30, 0xF9	; 249
    66ac:	fe 4f       	sbci	r31, 0xFE	; 254
    66ae:	60 81       	ld	r22, Z
    66b0:	71 81       	ldd	r23, Z+1	; 0x01
    66b2:	82 81       	ldd	r24, Z+2	; 0x02
    66b4:	93 81       	ldd	r25, Z+3	; 0x03
    66b6:	20 e0       	ldi	r18, 0x00	; 0
    66b8:	30 e0       	ldi	r19, 0x00	; 0
    66ba:	40 e2       	ldi	r20, 0x20	; 32
    66bc:	51 e4       	ldi	r21, 0x41	; 65
    66be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    66c2:	dc 01       	movw	r26, r24
    66c4:	cb 01       	movw	r24, r22
    66c6:	8e 01       	movw	r16, r28
    66c8:	0f 5f       	subi	r16, 0xFF	; 255
    66ca:	1e 4f       	sbci	r17, 0xFE	; 254
    66cc:	bc 01       	movw	r22, r24
    66ce:	cd 01       	movw	r24, r26
    66d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    66d4:	dc 01       	movw	r26, r24
    66d6:	cb 01       	movw	r24, r22
    66d8:	f8 01       	movw	r30, r16
    66da:	91 83       	std	Z+1, r25	; 0x01
    66dc:	80 83       	st	Z, r24
    66de:	1f c0       	rjmp	.+62     	; 0x671e <Forward+0x433e>
    66e0:	fe 01       	movw	r30, r28
    66e2:	e1 50       	subi	r30, 0x01	; 1
    66e4:	ff 4f       	sbci	r31, 0xFF	; 255
    66e6:	80 e9       	ldi	r24, 0x90	; 144
    66e8:	91 e0       	ldi	r25, 0x01	; 1
    66ea:	91 83       	std	Z+1, r25	; 0x01
    66ec:	80 83       	st	Z, r24
    66ee:	fe 01       	movw	r30, r28
    66f0:	e1 50       	subi	r30, 0x01	; 1
    66f2:	ff 4f       	sbci	r31, 0xFF	; 255
    66f4:	80 81       	ld	r24, Z
    66f6:	91 81       	ldd	r25, Z+1	; 0x01
    66f8:	01 97       	sbiw	r24, 0x01	; 1
    66fa:	f1 f7       	brne	.-4      	; 0x66f8 <Forward+0x4318>
    66fc:	fe 01       	movw	r30, r28
    66fe:	e1 50       	subi	r30, 0x01	; 1
    6700:	ff 4f       	sbci	r31, 0xFF	; 255
    6702:	91 83       	std	Z+1, r25	; 0x01
    6704:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6706:	de 01       	movw	r26, r28
    6708:	af 5f       	subi	r26, 0xFF	; 255
    670a:	be 4f       	sbci	r27, 0xFE	; 254
    670c:	fe 01       	movw	r30, r28
    670e:	ef 5f       	subi	r30, 0xFF	; 255
    6710:	fe 4f       	sbci	r31, 0xFE	; 254
    6712:	80 81       	ld	r24, Z
    6714:	91 81       	ldd	r25, Z+1	; 0x01
    6716:	01 97       	sbiw	r24, 0x01	; 1
    6718:	11 96       	adiw	r26, 0x01	; 1
    671a:	9c 93       	st	X, r25
    671c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    671e:	fe 01       	movw	r30, r28
    6720:	ef 5f       	subi	r30, 0xFF	; 255
    6722:	fe 4f       	sbci	r31, 0xFE	; 254
    6724:	80 81       	ld	r24, Z
    6726:	91 81       	ldd	r25, Z+1	; 0x01
    6728:	00 97       	sbiw	r24, 0x00	; 0
    672a:	d1 f6       	brne	.-76     	; 0x66e0 <Forward+0x4300>
    672c:	27 c0       	rjmp	.+78     	; 0x677c <Forward+0x439c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    672e:	8e 01       	movw	r16, r28
    6730:	0f 5f       	subi	r16, 0xFF	; 255
    6732:	1e 4f       	sbci	r17, 0xFE	; 254
    6734:	fe 01       	movw	r30, r28
    6736:	ed 5f       	subi	r30, 0xFD	; 253
    6738:	fe 4f       	sbci	r31, 0xFE	; 254
    673a:	60 81       	ld	r22, Z
    673c:	71 81       	ldd	r23, Z+1	; 0x01
    673e:	82 81       	ldd	r24, Z+2	; 0x02
    6740:	93 81       	ldd	r25, Z+3	; 0x03
    6742:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6746:	dc 01       	movw	r26, r24
    6748:	cb 01       	movw	r24, r22
    674a:	f8 01       	movw	r30, r16
    674c:	91 83       	std	Z+1, r25	; 0x01
    674e:	80 83       	st	Z, r24
    6750:	de 01       	movw	r26, r28
    6752:	a3 50       	subi	r26, 0x03	; 3
    6754:	bf 4f       	sbci	r27, 0xFF	; 255
    6756:	fe 01       	movw	r30, r28
    6758:	ef 5f       	subi	r30, 0xFF	; 255
    675a:	fe 4f       	sbci	r31, 0xFE	; 254
    675c:	80 81       	ld	r24, Z
    675e:	91 81       	ldd	r25, Z+1	; 0x01
    6760:	8d 93       	st	X+, r24
    6762:	9c 93       	st	X, r25
    6764:	fe 01       	movw	r30, r28
    6766:	e3 50       	subi	r30, 0x03	; 3
    6768:	ff 4f       	sbci	r31, 0xFF	; 255
    676a:	80 81       	ld	r24, Z
    676c:	91 81       	ldd	r25, Z+1	; 0x01
    676e:	01 97       	sbiw	r24, 0x01	; 1
    6770:	f1 f7       	brne	.-4      	; 0x676e <Forward+0x438e>
    6772:	fe 01       	movw	r30, r28
    6774:	e3 50       	subi	r30, 0x03	; 3
    6776:	ff 4f       	sbci	r31, 0xFF	; 255
    6778:	91 83       	std	Z+1, r25	; 0x01
    677a:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POSN3;
    677c:	8a e0       	ldi	r24, 0x0A	; 10
    677e:	80 93 71 00 	sts	0x0071, r24
    6782:	fe 01       	movw	r30, r28
    6784:	e7 50       	subi	r30, 0x07	; 7
    6786:	ff 4f       	sbci	r31, 0xFF	; 255
    6788:	80 e0       	ldi	r24, 0x00	; 0
    678a:	90 e0       	ldi	r25, 0x00	; 0
    678c:	aa ef       	ldi	r26, 0xFA	; 250
    678e:	b3 e4       	ldi	r27, 0x43	; 67
    6790:	80 83       	st	Z, r24
    6792:	91 83       	std	Z+1, r25	; 0x01
    6794:	a2 83       	std	Z+2, r26	; 0x02
    6796:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6798:	8e 01       	movw	r16, r28
    679a:	0b 50       	subi	r16, 0x0B	; 11
    679c:	1f 4f       	sbci	r17, 0xFF	; 255
    679e:	fe 01       	movw	r30, r28
    67a0:	e7 50       	subi	r30, 0x07	; 7
    67a2:	ff 4f       	sbci	r31, 0xFF	; 255
    67a4:	60 81       	ld	r22, Z
    67a6:	71 81       	ldd	r23, Z+1	; 0x01
    67a8:	82 81       	ldd	r24, Z+2	; 0x02
    67aa:	93 81       	ldd	r25, Z+3	; 0x03
    67ac:	20 e0       	ldi	r18, 0x00	; 0
    67ae:	30 e0       	ldi	r19, 0x00	; 0
    67b0:	4a e7       	ldi	r20, 0x7A	; 122
    67b2:	55 e4       	ldi	r21, 0x45	; 69
    67b4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    67b8:	dc 01       	movw	r26, r24
    67ba:	cb 01       	movw	r24, r22
    67bc:	f8 01       	movw	r30, r16
    67be:	80 83       	st	Z, r24
    67c0:	91 83       	std	Z+1, r25	; 0x01
    67c2:	a2 83       	std	Z+2, r26	; 0x02
    67c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    67c6:	fe 01       	movw	r30, r28
    67c8:	eb 50       	subi	r30, 0x0B	; 11
    67ca:	ff 4f       	sbci	r31, 0xFF	; 255
    67cc:	60 81       	ld	r22, Z
    67ce:	71 81       	ldd	r23, Z+1	; 0x01
    67d0:	82 81       	ldd	r24, Z+2	; 0x02
    67d2:	93 81       	ldd	r25, Z+3	; 0x03
    67d4:	20 e0       	ldi	r18, 0x00	; 0
    67d6:	30 e0       	ldi	r19, 0x00	; 0
    67d8:	40 e8       	ldi	r20, 0x80	; 128
    67da:	5f e3       	ldi	r21, 0x3F	; 63
    67dc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    67e0:	88 23       	and	r24, r24
    67e2:	44 f4       	brge	.+16     	; 0x67f4 <Forward+0x4414>
		__ticks = 1;
    67e4:	fe 01       	movw	r30, r28
    67e6:	ed 50       	subi	r30, 0x0D	; 13
    67e8:	ff 4f       	sbci	r31, 0xFF	; 255
    67ea:	81 e0       	ldi	r24, 0x01	; 1
    67ec:	90 e0       	ldi	r25, 0x00	; 0
    67ee:	91 83       	std	Z+1, r25	; 0x01
    67f0:	80 83       	st	Z, r24
    67f2:	64 c0       	rjmp	.+200    	; 0x68bc <Forward+0x44dc>
	else if (__tmp > 65535)
    67f4:	fe 01       	movw	r30, r28
    67f6:	eb 50       	subi	r30, 0x0B	; 11
    67f8:	ff 4f       	sbci	r31, 0xFF	; 255
    67fa:	60 81       	ld	r22, Z
    67fc:	71 81       	ldd	r23, Z+1	; 0x01
    67fe:	82 81       	ldd	r24, Z+2	; 0x02
    6800:	93 81       	ldd	r25, Z+3	; 0x03
    6802:	20 e0       	ldi	r18, 0x00	; 0
    6804:	3f ef       	ldi	r19, 0xFF	; 255
    6806:	4f e7       	ldi	r20, 0x7F	; 127
    6808:	57 e4       	ldi	r21, 0x47	; 71
    680a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    680e:	18 16       	cp	r1, r24
    6810:	0c f0       	brlt	.+2      	; 0x6814 <Forward+0x4434>
    6812:	43 c0       	rjmp	.+134    	; 0x689a <Forward+0x44ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6814:	fe 01       	movw	r30, r28
    6816:	e7 50       	subi	r30, 0x07	; 7
    6818:	ff 4f       	sbci	r31, 0xFF	; 255
    681a:	60 81       	ld	r22, Z
    681c:	71 81       	ldd	r23, Z+1	; 0x01
    681e:	82 81       	ldd	r24, Z+2	; 0x02
    6820:	93 81       	ldd	r25, Z+3	; 0x03
    6822:	20 e0       	ldi	r18, 0x00	; 0
    6824:	30 e0       	ldi	r19, 0x00	; 0
    6826:	40 e2       	ldi	r20, 0x20	; 32
    6828:	51 e4       	ldi	r21, 0x41	; 65
    682a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    682e:	dc 01       	movw	r26, r24
    6830:	cb 01       	movw	r24, r22
    6832:	8e 01       	movw	r16, r28
    6834:	0d 50       	subi	r16, 0x0D	; 13
    6836:	1f 4f       	sbci	r17, 0xFF	; 255
    6838:	bc 01       	movw	r22, r24
    683a:	cd 01       	movw	r24, r26
    683c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6840:	dc 01       	movw	r26, r24
    6842:	cb 01       	movw	r24, r22
    6844:	f8 01       	movw	r30, r16
    6846:	91 83       	std	Z+1, r25	; 0x01
    6848:	80 83       	st	Z, r24
    684a:	1f c0       	rjmp	.+62     	; 0x688a <Forward+0x44aa>
    684c:	fe 01       	movw	r30, r28
    684e:	ef 50       	subi	r30, 0x0F	; 15
    6850:	ff 4f       	sbci	r31, 0xFF	; 255
    6852:	80 e9       	ldi	r24, 0x90	; 144
    6854:	91 e0       	ldi	r25, 0x01	; 1
    6856:	91 83       	std	Z+1, r25	; 0x01
    6858:	80 83       	st	Z, r24
    685a:	fe 01       	movw	r30, r28
    685c:	ef 50       	subi	r30, 0x0F	; 15
    685e:	ff 4f       	sbci	r31, 0xFF	; 255
    6860:	80 81       	ld	r24, Z
    6862:	91 81       	ldd	r25, Z+1	; 0x01
    6864:	01 97       	sbiw	r24, 0x01	; 1
    6866:	f1 f7       	brne	.-4      	; 0x6864 <Forward+0x4484>
    6868:	fe 01       	movw	r30, r28
    686a:	ef 50       	subi	r30, 0x0F	; 15
    686c:	ff 4f       	sbci	r31, 0xFF	; 255
    686e:	91 83       	std	Z+1, r25	; 0x01
    6870:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6872:	de 01       	movw	r26, r28
    6874:	ad 50       	subi	r26, 0x0D	; 13
    6876:	bf 4f       	sbci	r27, 0xFF	; 255
    6878:	fe 01       	movw	r30, r28
    687a:	ed 50       	subi	r30, 0x0D	; 13
    687c:	ff 4f       	sbci	r31, 0xFF	; 255
    687e:	80 81       	ld	r24, Z
    6880:	91 81       	ldd	r25, Z+1	; 0x01
    6882:	01 97       	sbiw	r24, 0x01	; 1
    6884:	11 96       	adiw	r26, 0x01	; 1
    6886:	9c 93       	st	X, r25
    6888:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    688a:	fe 01       	movw	r30, r28
    688c:	ed 50       	subi	r30, 0x0D	; 13
    688e:	ff 4f       	sbci	r31, 0xFF	; 255
    6890:	80 81       	ld	r24, Z
    6892:	91 81       	ldd	r25, Z+1	; 0x01
    6894:	00 97       	sbiw	r24, 0x00	; 0
    6896:	d1 f6       	brne	.-76     	; 0x684c <Forward+0x446c>
    6898:	27 c0       	rjmp	.+78     	; 0x68e8 <Forward+0x4508>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    689a:	8e 01       	movw	r16, r28
    689c:	0d 50       	subi	r16, 0x0D	; 13
    689e:	1f 4f       	sbci	r17, 0xFF	; 255
    68a0:	fe 01       	movw	r30, r28
    68a2:	eb 50       	subi	r30, 0x0B	; 11
    68a4:	ff 4f       	sbci	r31, 0xFF	; 255
    68a6:	60 81       	ld	r22, Z
    68a8:	71 81       	ldd	r23, Z+1	; 0x01
    68aa:	82 81       	ldd	r24, Z+2	; 0x02
    68ac:	93 81       	ldd	r25, Z+3	; 0x03
    68ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    68b2:	dc 01       	movw	r26, r24
    68b4:	cb 01       	movw	r24, r22
    68b6:	f8 01       	movw	r30, r16
    68b8:	91 83       	std	Z+1, r25	; 0x01
    68ba:	80 83       	st	Z, r24
    68bc:	de 01       	movw	r26, r28
    68be:	a1 51       	subi	r26, 0x11	; 17
    68c0:	bf 4f       	sbci	r27, 0xFF	; 255
    68c2:	fe 01       	movw	r30, r28
    68c4:	ed 50       	subi	r30, 0x0D	; 13
    68c6:	ff 4f       	sbci	r31, 0xFF	; 255
    68c8:	80 81       	ld	r24, Z
    68ca:	91 81       	ldd	r25, Z+1	; 0x01
    68cc:	8d 93       	st	X+, r24
    68ce:	9c 93       	st	X, r25
    68d0:	fe 01       	movw	r30, r28
    68d2:	e1 51       	subi	r30, 0x11	; 17
    68d4:	ff 4f       	sbci	r31, 0xFF	; 255
    68d6:	80 81       	ld	r24, Z
    68d8:	91 81       	ldd	r25, Z+1	; 0x01
    68da:	01 97       	sbiw	r24, 0x01	; 1
    68dc:	f1 f7       	brne	.-4      	; 0x68da <Forward+0x44fa>
    68de:	fe 01       	movw	r30, r28
    68e0:	e1 51       	subi	r30, 0x11	; 17
    68e2:	ff 4f       	sbci	r31, 0xFF	; 255
    68e4:	91 83       	std	Z+1, r25	; 0x01
    68e6:	80 83       	st	Z, r24
	_delay_ms(500);

	angle7 = NaturalPos;
    68e8:	8d e0       	ldi	r24, 0x0D	; 13
    68ea:	80 93 6f 00 	sts	0x006F, r24
    68ee:	fe 01       	movw	r30, r28
    68f0:	e5 51       	subi	r30, 0x15	; 21
    68f2:	ff 4f       	sbci	r31, 0xFF	; 255
    68f4:	80 e0       	ldi	r24, 0x00	; 0
    68f6:	90 e0       	ldi	r25, 0x00	; 0
    68f8:	aa ef       	ldi	r26, 0xFA	; 250
    68fa:	b3 e4       	ldi	r27, 0x43	; 67
    68fc:	80 83       	st	Z, r24
    68fe:	91 83       	std	Z+1, r25	; 0x01
    6900:	a2 83       	std	Z+2, r26	; 0x02
    6902:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6904:	8e 01       	movw	r16, r28
    6906:	09 51       	subi	r16, 0x19	; 25
    6908:	1f 4f       	sbci	r17, 0xFF	; 255
    690a:	fe 01       	movw	r30, r28
    690c:	e5 51       	subi	r30, 0x15	; 21
    690e:	ff 4f       	sbci	r31, 0xFF	; 255
    6910:	60 81       	ld	r22, Z
    6912:	71 81       	ldd	r23, Z+1	; 0x01
    6914:	82 81       	ldd	r24, Z+2	; 0x02
    6916:	93 81       	ldd	r25, Z+3	; 0x03
    6918:	20 e0       	ldi	r18, 0x00	; 0
    691a:	30 e0       	ldi	r19, 0x00	; 0
    691c:	4a e7       	ldi	r20, 0x7A	; 122
    691e:	55 e4       	ldi	r21, 0x45	; 69
    6920:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6924:	dc 01       	movw	r26, r24
    6926:	cb 01       	movw	r24, r22
    6928:	f8 01       	movw	r30, r16
    692a:	80 83       	st	Z, r24
    692c:	91 83       	std	Z+1, r25	; 0x01
    692e:	a2 83       	std	Z+2, r26	; 0x02
    6930:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6932:	fe 01       	movw	r30, r28
    6934:	e9 51       	subi	r30, 0x19	; 25
    6936:	ff 4f       	sbci	r31, 0xFF	; 255
    6938:	60 81       	ld	r22, Z
    693a:	71 81       	ldd	r23, Z+1	; 0x01
    693c:	82 81       	ldd	r24, Z+2	; 0x02
    693e:	93 81       	ldd	r25, Z+3	; 0x03
    6940:	20 e0       	ldi	r18, 0x00	; 0
    6942:	30 e0       	ldi	r19, 0x00	; 0
    6944:	40 e8       	ldi	r20, 0x80	; 128
    6946:	5f e3       	ldi	r21, 0x3F	; 63
    6948:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    694c:	88 23       	and	r24, r24
    694e:	44 f4       	brge	.+16     	; 0x6960 <Forward+0x4580>
		__ticks = 1;
    6950:	fe 01       	movw	r30, r28
    6952:	eb 51       	subi	r30, 0x1B	; 27
    6954:	ff 4f       	sbci	r31, 0xFF	; 255
    6956:	81 e0       	ldi	r24, 0x01	; 1
    6958:	90 e0       	ldi	r25, 0x00	; 0
    695a:	91 83       	std	Z+1, r25	; 0x01
    695c:	80 83       	st	Z, r24
    695e:	64 c0       	rjmp	.+200    	; 0x6a28 <Forward+0x4648>
	else if (__tmp > 65535)
    6960:	fe 01       	movw	r30, r28
    6962:	e9 51       	subi	r30, 0x19	; 25
    6964:	ff 4f       	sbci	r31, 0xFF	; 255
    6966:	60 81       	ld	r22, Z
    6968:	71 81       	ldd	r23, Z+1	; 0x01
    696a:	82 81       	ldd	r24, Z+2	; 0x02
    696c:	93 81       	ldd	r25, Z+3	; 0x03
    696e:	20 e0       	ldi	r18, 0x00	; 0
    6970:	3f ef       	ldi	r19, 0xFF	; 255
    6972:	4f e7       	ldi	r20, 0x7F	; 127
    6974:	57 e4       	ldi	r21, 0x47	; 71
    6976:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    697a:	18 16       	cp	r1, r24
    697c:	0c f0       	brlt	.+2      	; 0x6980 <Forward+0x45a0>
    697e:	43 c0       	rjmp	.+134    	; 0x6a06 <Forward+0x4626>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6980:	fe 01       	movw	r30, r28
    6982:	e5 51       	subi	r30, 0x15	; 21
    6984:	ff 4f       	sbci	r31, 0xFF	; 255
    6986:	60 81       	ld	r22, Z
    6988:	71 81       	ldd	r23, Z+1	; 0x01
    698a:	82 81       	ldd	r24, Z+2	; 0x02
    698c:	93 81       	ldd	r25, Z+3	; 0x03
    698e:	20 e0       	ldi	r18, 0x00	; 0
    6990:	30 e0       	ldi	r19, 0x00	; 0
    6992:	40 e2       	ldi	r20, 0x20	; 32
    6994:	51 e4       	ldi	r21, 0x41	; 65
    6996:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    699a:	dc 01       	movw	r26, r24
    699c:	cb 01       	movw	r24, r22
    699e:	8e 01       	movw	r16, r28
    69a0:	0b 51       	subi	r16, 0x1B	; 27
    69a2:	1f 4f       	sbci	r17, 0xFF	; 255
    69a4:	bc 01       	movw	r22, r24
    69a6:	cd 01       	movw	r24, r26
    69a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    69ac:	dc 01       	movw	r26, r24
    69ae:	cb 01       	movw	r24, r22
    69b0:	f8 01       	movw	r30, r16
    69b2:	91 83       	std	Z+1, r25	; 0x01
    69b4:	80 83       	st	Z, r24
    69b6:	1f c0       	rjmp	.+62     	; 0x69f6 <Forward+0x4616>
    69b8:	fe 01       	movw	r30, r28
    69ba:	ed 51       	subi	r30, 0x1D	; 29
    69bc:	ff 4f       	sbci	r31, 0xFF	; 255
    69be:	80 e9       	ldi	r24, 0x90	; 144
    69c0:	91 e0       	ldi	r25, 0x01	; 1
    69c2:	91 83       	std	Z+1, r25	; 0x01
    69c4:	80 83       	st	Z, r24
    69c6:	fe 01       	movw	r30, r28
    69c8:	ed 51       	subi	r30, 0x1D	; 29
    69ca:	ff 4f       	sbci	r31, 0xFF	; 255
    69cc:	80 81       	ld	r24, Z
    69ce:	91 81       	ldd	r25, Z+1	; 0x01
    69d0:	01 97       	sbiw	r24, 0x01	; 1
    69d2:	f1 f7       	brne	.-4      	; 0x69d0 <Forward+0x45f0>
    69d4:	fe 01       	movw	r30, r28
    69d6:	ed 51       	subi	r30, 0x1D	; 29
    69d8:	ff 4f       	sbci	r31, 0xFF	; 255
    69da:	91 83       	std	Z+1, r25	; 0x01
    69dc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    69de:	de 01       	movw	r26, r28
    69e0:	ab 51       	subi	r26, 0x1B	; 27
    69e2:	bf 4f       	sbci	r27, 0xFF	; 255
    69e4:	fe 01       	movw	r30, r28
    69e6:	eb 51       	subi	r30, 0x1B	; 27
    69e8:	ff 4f       	sbci	r31, 0xFF	; 255
    69ea:	80 81       	ld	r24, Z
    69ec:	91 81       	ldd	r25, Z+1	; 0x01
    69ee:	01 97       	sbiw	r24, 0x01	; 1
    69f0:	11 96       	adiw	r26, 0x01	; 1
    69f2:	9c 93       	st	X, r25
    69f4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    69f6:	fe 01       	movw	r30, r28
    69f8:	eb 51       	subi	r30, 0x1B	; 27
    69fa:	ff 4f       	sbci	r31, 0xFF	; 255
    69fc:	80 81       	ld	r24, Z
    69fe:	91 81       	ldd	r25, Z+1	; 0x01
    6a00:	00 97       	sbiw	r24, 0x00	; 0
    6a02:	d1 f6       	brne	.-76     	; 0x69b8 <Forward+0x45d8>
    6a04:	27 c0       	rjmp	.+78     	; 0x6a54 <Forward+0x4674>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6a06:	8e 01       	movw	r16, r28
    6a08:	0b 51       	subi	r16, 0x1B	; 27
    6a0a:	1f 4f       	sbci	r17, 0xFF	; 255
    6a0c:	fe 01       	movw	r30, r28
    6a0e:	e9 51       	subi	r30, 0x19	; 25
    6a10:	ff 4f       	sbci	r31, 0xFF	; 255
    6a12:	60 81       	ld	r22, Z
    6a14:	71 81       	ldd	r23, Z+1	; 0x01
    6a16:	82 81       	ldd	r24, Z+2	; 0x02
    6a18:	93 81       	ldd	r25, Z+3	; 0x03
    6a1a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6a1e:	dc 01       	movw	r26, r24
    6a20:	cb 01       	movw	r24, r22
    6a22:	f8 01       	movw	r30, r16
    6a24:	91 83       	std	Z+1, r25	; 0x01
    6a26:	80 83       	st	Z, r24
    6a28:	de 01       	movw	r26, r28
    6a2a:	af 51       	subi	r26, 0x1F	; 31
    6a2c:	bf 4f       	sbci	r27, 0xFF	; 255
    6a2e:	fe 01       	movw	r30, r28
    6a30:	eb 51       	subi	r30, 0x1B	; 27
    6a32:	ff 4f       	sbci	r31, 0xFF	; 255
    6a34:	80 81       	ld	r24, Z
    6a36:	91 81       	ldd	r25, Z+1	; 0x01
    6a38:	8d 93       	st	X+, r24
    6a3a:	9c 93       	st	X, r25
    6a3c:	fe 01       	movw	r30, r28
    6a3e:	ef 51       	subi	r30, 0x1F	; 31
    6a40:	ff 4f       	sbci	r31, 0xFF	; 255
    6a42:	80 81       	ld	r24, Z
    6a44:	91 81       	ldd	r25, Z+1	; 0x01
    6a46:	01 97       	sbiw	r24, 0x01	; 1
    6a48:	f1 f7       	brne	.-4      	; 0x6a46 <Forward+0x4666>
    6a4a:	fe 01       	movw	r30, r28
    6a4c:	ef 51       	subi	r30, 0x1F	; 31
    6a4e:	ff 4f       	sbci	r31, 0xFF	; 255
    6a50:	91 83       	std	Z+1, r25	; 0x01
    6a52:	80 83       	st	Z, r24
	_delay_ms(500);
	angle9 = POSN4;
    6a54:	8b e0       	ldi	r24, 0x0B	; 11
    6a56:	80 93 71 00 	sts	0x0071, r24
    6a5a:	fe 01       	movw	r30, r28
    6a5c:	e3 52       	subi	r30, 0x23	; 35
    6a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    6a60:	80 e0       	ldi	r24, 0x00	; 0
    6a62:	90 e0       	ldi	r25, 0x00	; 0
    6a64:	ac e8       	ldi	r26, 0x8C	; 140
    6a66:	b2 e4       	ldi	r27, 0x42	; 66
    6a68:	80 83       	st	Z, r24
    6a6a:	91 83       	std	Z+1, r25	; 0x01
    6a6c:	a2 83       	std	Z+2, r26	; 0x02
    6a6e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6a70:	8e 01       	movw	r16, r28
    6a72:	07 52       	subi	r16, 0x27	; 39
    6a74:	1f 4f       	sbci	r17, 0xFF	; 255
    6a76:	fe 01       	movw	r30, r28
    6a78:	e3 52       	subi	r30, 0x23	; 35
    6a7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6a7c:	60 81       	ld	r22, Z
    6a7e:	71 81       	ldd	r23, Z+1	; 0x01
    6a80:	82 81       	ldd	r24, Z+2	; 0x02
    6a82:	93 81       	ldd	r25, Z+3	; 0x03
    6a84:	20 e0       	ldi	r18, 0x00	; 0
    6a86:	30 e0       	ldi	r19, 0x00	; 0
    6a88:	4a e7       	ldi	r20, 0x7A	; 122
    6a8a:	55 e4       	ldi	r21, 0x45	; 69
    6a8c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6a90:	dc 01       	movw	r26, r24
    6a92:	cb 01       	movw	r24, r22
    6a94:	f8 01       	movw	r30, r16
    6a96:	80 83       	st	Z, r24
    6a98:	91 83       	std	Z+1, r25	; 0x01
    6a9a:	a2 83       	std	Z+2, r26	; 0x02
    6a9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6a9e:	fe 01       	movw	r30, r28
    6aa0:	e7 52       	subi	r30, 0x27	; 39
    6aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    6aa4:	60 81       	ld	r22, Z
    6aa6:	71 81       	ldd	r23, Z+1	; 0x01
    6aa8:	82 81       	ldd	r24, Z+2	; 0x02
    6aaa:	93 81       	ldd	r25, Z+3	; 0x03
    6aac:	20 e0       	ldi	r18, 0x00	; 0
    6aae:	30 e0       	ldi	r19, 0x00	; 0
    6ab0:	40 e8       	ldi	r20, 0x80	; 128
    6ab2:	5f e3       	ldi	r21, 0x3F	; 63
    6ab4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6ab8:	88 23       	and	r24, r24
    6aba:	44 f4       	brge	.+16     	; 0x6acc <Forward+0x46ec>
		__ticks = 1;
    6abc:	fe 01       	movw	r30, r28
    6abe:	e9 52       	subi	r30, 0x29	; 41
    6ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ac2:	81 e0       	ldi	r24, 0x01	; 1
    6ac4:	90 e0       	ldi	r25, 0x00	; 0
    6ac6:	91 83       	std	Z+1, r25	; 0x01
    6ac8:	80 83       	st	Z, r24
    6aca:	64 c0       	rjmp	.+200    	; 0x6b94 <Forward+0x47b4>
	else if (__tmp > 65535)
    6acc:	fe 01       	movw	r30, r28
    6ace:	e7 52       	subi	r30, 0x27	; 39
    6ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ad2:	60 81       	ld	r22, Z
    6ad4:	71 81       	ldd	r23, Z+1	; 0x01
    6ad6:	82 81       	ldd	r24, Z+2	; 0x02
    6ad8:	93 81       	ldd	r25, Z+3	; 0x03
    6ada:	20 e0       	ldi	r18, 0x00	; 0
    6adc:	3f ef       	ldi	r19, 0xFF	; 255
    6ade:	4f e7       	ldi	r20, 0x7F	; 127
    6ae0:	57 e4       	ldi	r21, 0x47	; 71
    6ae2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    6ae6:	18 16       	cp	r1, r24
    6ae8:	0c f0       	brlt	.+2      	; 0x6aec <Forward+0x470c>
    6aea:	43 c0       	rjmp	.+134    	; 0x6b72 <Forward+0x4792>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6aec:	fe 01       	movw	r30, r28
    6aee:	e3 52       	subi	r30, 0x23	; 35
    6af0:	ff 4f       	sbci	r31, 0xFF	; 255
    6af2:	60 81       	ld	r22, Z
    6af4:	71 81       	ldd	r23, Z+1	; 0x01
    6af6:	82 81       	ldd	r24, Z+2	; 0x02
    6af8:	93 81       	ldd	r25, Z+3	; 0x03
    6afa:	20 e0       	ldi	r18, 0x00	; 0
    6afc:	30 e0       	ldi	r19, 0x00	; 0
    6afe:	40 e2       	ldi	r20, 0x20	; 32
    6b00:	51 e4       	ldi	r21, 0x41	; 65
    6b02:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6b06:	dc 01       	movw	r26, r24
    6b08:	cb 01       	movw	r24, r22
    6b0a:	8e 01       	movw	r16, r28
    6b0c:	09 52       	subi	r16, 0x29	; 41
    6b0e:	1f 4f       	sbci	r17, 0xFF	; 255
    6b10:	bc 01       	movw	r22, r24
    6b12:	cd 01       	movw	r24, r26
    6b14:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6b18:	dc 01       	movw	r26, r24
    6b1a:	cb 01       	movw	r24, r22
    6b1c:	f8 01       	movw	r30, r16
    6b1e:	91 83       	std	Z+1, r25	; 0x01
    6b20:	80 83       	st	Z, r24
    6b22:	1f c0       	rjmp	.+62     	; 0x6b62 <Forward+0x4782>
    6b24:	fe 01       	movw	r30, r28
    6b26:	eb 52       	subi	r30, 0x2B	; 43
    6b28:	ff 4f       	sbci	r31, 0xFF	; 255
    6b2a:	80 e9       	ldi	r24, 0x90	; 144
    6b2c:	91 e0       	ldi	r25, 0x01	; 1
    6b2e:	91 83       	std	Z+1, r25	; 0x01
    6b30:	80 83       	st	Z, r24
    6b32:	fe 01       	movw	r30, r28
    6b34:	eb 52       	subi	r30, 0x2B	; 43
    6b36:	ff 4f       	sbci	r31, 0xFF	; 255
    6b38:	80 81       	ld	r24, Z
    6b3a:	91 81       	ldd	r25, Z+1	; 0x01
    6b3c:	01 97       	sbiw	r24, 0x01	; 1
    6b3e:	f1 f7       	brne	.-4      	; 0x6b3c <Forward+0x475c>
    6b40:	fe 01       	movw	r30, r28
    6b42:	eb 52       	subi	r30, 0x2B	; 43
    6b44:	ff 4f       	sbci	r31, 0xFF	; 255
    6b46:	91 83       	std	Z+1, r25	; 0x01
    6b48:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6b4a:	de 01       	movw	r26, r28
    6b4c:	a9 52       	subi	r26, 0x29	; 41
    6b4e:	bf 4f       	sbci	r27, 0xFF	; 255
    6b50:	fe 01       	movw	r30, r28
    6b52:	e9 52       	subi	r30, 0x29	; 41
    6b54:	ff 4f       	sbci	r31, 0xFF	; 255
    6b56:	80 81       	ld	r24, Z
    6b58:	91 81       	ldd	r25, Z+1	; 0x01
    6b5a:	01 97       	sbiw	r24, 0x01	; 1
    6b5c:	11 96       	adiw	r26, 0x01	; 1
    6b5e:	9c 93       	st	X, r25
    6b60:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6b62:	fe 01       	movw	r30, r28
    6b64:	e9 52       	subi	r30, 0x29	; 41
    6b66:	ff 4f       	sbci	r31, 0xFF	; 255
    6b68:	80 81       	ld	r24, Z
    6b6a:	91 81       	ldd	r25, Z+1	; 0x01
    6b6c:	00 97       	sbiw	r24, 0x00	; 0
    6b6e:	d1 f6       	brne	.-76     	; 0x6b24 <Forward+0x4744>
    6b70:	27 c0       	rjmp	.+78     	; 0x6bc0 <Forward+0x47e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6b72:	8e 01       	movw	r16, r28
    6b74:	09 52       	subi	r16, 0x29	; 41
    6b76:	1f 4f       	sbci	r17, 0xFF	; 255
    6b78:	fe 01       	movw	r30, r28
    6b7a:	e7 52       	subi	r30, 0x27	; 39
    6b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    6b7e:	60 81       	ld	r22, Z
    6b80:	71 81       	ldd	r23, Z+1	; 0x01
    6b82:	82 81       	ldd	r24, Z+2	; 0x02
    6b84:	93 81       	ldd	r25, Z+3	; 0x03
    6b86:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6b8a:	dc 01       	movw	r26, r24
    6b8c:	cb 01       	movw	r24, r22
    6b8e:	f8 01       	movw	r30, r16
    6b90:	91 83       	std	Z+1, r25	; 0x01
    6b92:	80 83       	st	Z, r24
    6b94:	de 01       	movw	r26, r28
    6b96:	ad 52       	subi	r26, 0x2D	; 45
    6b98:	bf 4f       	sbci	r27, 0xFF	; 255
    6b9a:	fe 01       	movw	r30, r28
    6b9c:	e9 52       	subi	r30, 0x29	; 41
    6b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    6ba0:	80 81       	ld	r24, Z
    6ba2:	91 81       	ldd	r25, Z+1	; 0x01
    6ba4:	8d 93       	st	X+, r24
    6ba6:	9c 93       	st	X, r25
    6ba8:	fe 01       	movw	r30, r28
    6baa:	ed 52       	subi	r30, 0x2D	; 45
    6bac:	ff 4f       	sbci	r31, 0xFF	; 255
    6bae:	80 81       	ld	r24, Z
    6bb0:	91 81       	ldd	r25, Z+1	; 0x01
    6bb2:	01 97       	sbiw	r24, 0x01	; 1
    6bb4:	f1 f7       	brne	.-4      	; 0x6bb2 <Forward+0x47d2>
    6bb6:	fe 01       	movw	r30, r28
    6bb8:	ed 52       	subi	r30, 0x2D	; 45
    6bba:	ff 4f       	sbci	r31, 0xFF	; 255
    6bbc:	91 83       	std	Z+1, r25	; 0x01
    6bbe:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POSN5;
    6bc0:	8c e0       	ldi	r24, 0x0C	; 12
    6bc2:	80 93 71 00 	sts	0x0071, r24
    6bc6:	fe 01       	movw	r30, r28
    6bc8:	e1 53       	subi	r30, 0x31	; 49
    6bca:	ff 4f       	sbci	r31, 0xFF	; 255
    6bcc:	80 e0       	ldi	r24, 0x00	; 0
    6bce:	90 e0       	ldi	r25, 0x00	; 0
    6bd0:	ac e8       	ldi	r26, 0x8C	; 140
    6bd2:	b2 e4       	ldi	r27, 0x42	; 66
    6bd4:	80 83       	st	Z, r24
    6bd6:	91 83       	std	Z+1, r25	; 0x01
    6bd8:	a2 83       	std	Z+2, r26	; 0x02
    6bda:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6bdc:	8e 01       	movw	r16, r28
    6bde:	05 53       	subi	r16, 0x35	; 53
    6be0:	1f 4f       	sbci	r17, 0xFF	; 255
    6be2:	fe 01       	movw	r30, r28
    6be4:	e1 53       	subi	r30, 0x31	; 49
    6be6:	ff 4f       	sbci	r31, 0xFF	; 255
    6be8:	60 81       	ld	r22, Z
    6bea:	71 81       	ldd	r23, Z+1	; 0x01
    6bec:	82 81       	ldd	r24, Z+2	; 0x02
    6bee:	93 81       	ldd	r25, Z+3	; 0x03
    6bf0:	20 e0       	ldi	r18, 0x00	; 0
    6bf2:	30 e0       	ldi	r19, 0x00	; 0
    6bf4:	4a e7       	ldi	r20, 0x7A	; 122
    6bf6:	55 e4       	ldi	r21, 0x45	; 69
    6bf8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6bfc:	dc 01       	movw	r26, r24
    6bfe:	cb 01       	movw	r24, r22
    6c00:	f8 01       	movw	r30, r16
    6c02:	80 83       	st	Z, r24
    6c04:	91 83       	std	Z+1, r25	; 0x01
    6c06:	a2 83       	std	Z+2, r26	; 0x02
    6c08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6c0a:	fe 01       	movw	r30, r28
    6c0c:	e5 53       	subi	r30, 0x35	; 53
    6c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c10:	60 81       	ld	r22, Z
    6c12:	71 81       	ldd	r23, Z+1	; 0x01
    6c14:	82 81       	ldd	r24, Z+2	; 0x02
    6c16:	93 81       	ldd	r25, Z+3	; 0x03
    6c18:	20 e0       	ldi	r18, 0x00	; 0
    6c1a:	30 e0       	ldi	r19, 0x00	; 0
    6c1c:	40 e8       	ldi	r20, 0x80	; 128
    6c1e:	5f e3       	ldi	r21, 0x3F	; 63
    6c20:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6c24:	88 23       	and	r24, r24
    6c26:	44 f4       	brge	.+16     	; 0x6c38 <Forward+0x4858>
		__ticks = 1;
    6c28:	fe 01       	movw	r30, r28
    6c2a:	e7 53       	subi	r30, 0x37	; 55
    6c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    6c2e:	81 e0       	ldi	r24, 0x01	; 1
    6c30:	90 e0       	ldi	r25, 0x00	; 0
    6c32:	91 83       	std	Z+1, r25	; 0x01
    6c34:	80 83       	st	Z, r24
    6c36:	64 c0       	rjmp	.+200    	; 0x6d00 <Forward+0x4920>
	else if (__tmp > 65535)
    6c38:	fe 01       	movw	r30, r28
    6c3a:	e5 53       	subi	r30, 0x35	; 53
    6c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    6c3e:	60 81       	ld	r22, Z
    6c40:	71 81       	ldd	r23, Z+1	; 0x01
    6c42:	82 81       	ldd	r24, Z+2	; 0x02
    6c44:	93 81       	ldd	r25, Z+3	; 0x03
    6c46:	20 e0       	ldi	r18, 0x00	; 0
    6c48:	3f ef       	ldi	r19, 0xFF	; 255
    6c4a:	4f e7       	ldi	r20, 0x7F	; 127
    6c4c:	57 e4       	ldi	r21, 0x47	; 71
    6c4e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    6c52:	18 16       	cp	r1, r24
    6c54:	0c f0       	brlt	.+2      	; 0x6c58 <Forward+0x4878>
    6c56:	43 c0       	rjmp	.+134    	; 0x6cde <Forward+0x48fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6c58:	fe 01       	movw	r30, r28
    6c5a:	e1 53       	subi	r30, 0x31	; 49
    6c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    6c5e:	60 81       	ld	r22, Z
    6c60:	71 81       	ldd	r23, Z+1	; 0x01
    6c62:	82 81       	ldd	r24, Z+2	; 0x02
    6c64:	93 81       	ldd	r25, Z+3	; 0x03
    6c66:	20 e0       	ldi	r18, 0x00	; 0
    6c68:	30 e0       	ldi	r19, 0x00	; 0
    6c6a:	40 e2       	ldi	r20, 0x20	; 32
    6c6c:	51 e4       	ldi	r21, 0x41	; 65
    6c6e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6c72:	dc 01       	movw	r26, r24
    6c74:	cb 01       	movw	r24, r22
    6c76:	8e 01       	movw	r16, r28
    6c78:	07 53       	subi	r16, 0x37	; 55
    6c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    6c7c:	bc 01       	movw	r22, r24
    6c7e:	cd 01       	movw	r24, r26
    6c80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6c84:	dc 01       	movw	r26, r24
    6c86:	cb 01       	movw	r24, r22
    6c88:	f8 01       	movw	r30, r16
    6c8a:	91 83       	std	Z+1, r25	; 0x01
    6c8c:	80 83       	st	Z, r24
    6c8e:	1f c0       	rjmp	.+62     	; 0x6cce <Forward+0x48ee>
    6c90:	fe 01       	movw	r30, r28
    6c92:	e9 53       	subi	r30, 0x39	; 57
    6c94:	ff 4f       	sbci	r31, 0xFF	; 255
    6c96:	80 e9       	ldi	r24, 0x90	; 144
    6c98:	91 e0       	ldi	r25, 0x01	; 1
    6c9a:	91 83       	std	Z+1, r25	; 0x01
    6c9c:	80 83       	st	Z, r24
    6c9e:	fe 01       	movw	r30, r28
    6ca0:	e9 53       	subi	r30, 0x39	; 57
    6ca2:	ff 4f       	sbci	r31, 0xFF	; 255
    6ca4:	80 81       	ld	r24, Z
    6ca6:	91 81       	ldd	r25, Z+1	; 0x01
    6ca8:	01 97       	sbiw	r24, 0x01	; 1
    6caa:	f1 f7       	brne	.-4      	; 0x6ca8 <Forward+0x48c8>
    6cac:	fe 01       	movw	r30, r28
    6cae:	e9 53       	subi	r30, 0x39	; 57
    6cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    6cb2:	91 83       	std	Z+1, r25	; 0x01
    6cb4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6cb6:	de 01       	movw	r26, r28
    6cb8:	a7 53       	subi	r26, 0x37	; 55
    6cba:	bf 4f       	sbci	r27, 0xFF	; 255
    6cbc:	fe 01       	movw	r30, r28
    6cbe:	e7 53       	subi	r30, 0x37	; 55
    6cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    6cc2:	80 81       	ld	r24, Z
    6cc4:	91 81       	ldd	r25, Z+1	; 0x01
    6cc6:	01 97       	sbiw	r24, 0x01	; 1
    6cc8:	11 96       	adiw	r26, 0x01	; 1
    6cca:	9c 93       	st	X, r25
    6ccc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6cce:	fe 01       	movw	r30, r28
    6cd0:	e7 53       	subi	r30, 0x37	; 55
    6cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    6cd4:	80 81       	ld	r24, Z
    6cd6:	91 81       	ldd	r25, Z+1	; 0x01
    6cd8:	00 97       	sbiw	r24, 0x00	; 0
    6cda:	d1 f6       	brne	.-76     	; 0x6c90 <Forward+0x48b0>
    6cdc:	27 c0       	rjmp	.+78     	; 0x6d2c <Forward+0x494c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6cde:	8e 01       	movw	r16, r28
    6ce0:	07 53       	subi	r16, 0x37	; 55
    6ce2:	1f 4f       	sbci	r17, 0xFF	; 255
    6ce4:	fe 01       	movw	r30, r28
    6ce6:	e5 53       	subi	r30, 0x35	; 53
    6ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    6cea:	60 81       	ld	r22, Z
    6cec:	71 81       	ldd	r23, Z+1	; 0x01
    6cee:	82 81       	ldd	r24, Z+2	; 0x02
    6cf0:	93 81       	ldd	r25, Z+3	; 0x03
    6cf2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6cf6:	dc 01       	movw	r26, r24
    6cf8:	cb 01       	movw	r24, r22
    6cfa:	f8 01       	movw	r30, r16
    6cfc:	91 83       	std	Z+1, r25	; 0x01
    6cfe:	80 83       	st	Z, r24
    6d00:	de 01       	movw	r26, r28
    6d02:	ab 53       	subi	r26, 0x3B	; 59
    6d04:	bf 4f       	sbci	r27, 0xFF	; 255
    6d06:	fe 01       	movw	r30, r28
    6d08:	e7 53       	subi	r30, 0x37	; 55
    6d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d0c:	80 81       	ld	r24, Z
    6d0e:	91 81       	ldd	r25, Z+1	; 0x01
    6d10:	8d 93       	st	X+, r24
    6d12:	9c 93       	st	X, r25
    6d14:	fe 01       	movw	r30, r28
    6d16:	eb 53       	subi	r30, 0x3B	; 59
    6d18:	ff 4f       	sbci	r31, 0xFF	; 255
    6d1a:	80 81       	ld	r24, Z
    6d1c:	91 81       	ldd	r25, Z+1	; 0x01
    6d1e:	01 97       	sbiw	r24, 0x01	; 1
    6d20:	f1 f7       	brne	.-4      	; 0x6d1e <Forward+0x493e>
    6d22:	fe 01       	movw	r30, r28
    6d24:	eb 53       	subi	r30, 0x3B	; 59
    6d26:	ff 4f       	sbci	r31, 0xFF	; 255
    6d28:	91 83       	std	Z+1, r25	; 0x01
    6d2a:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = NaturalPos;
    6d2c:	8d e0       	ldi	r24, 0x0D	; 13
    6d2e:	80 93 71 00 	sts	0x0071, r24
    6d32:	fe 01       	movw	r30, r28
    6d34:	ef 53       	subi	r30, 0x3F	; 63
    6d36:	ff 4f       	sbci	r31, 0xFF	; 255
    6d38:	80 e0       	ldi	r24, 0x00	; 0
    6d3a:	90 e0       	ldi	r25, 0x00	; 0
    6d3c:	ac e8       	ldi	r26, 0x8C	; 140
    6d3e:	b2 e4       	ldi	r27, 0x42	; 66
    6d40:	80 83       	st	Z, r24
    6d42:	91 83       	std	Z+1, r25	; 0x01
    6d44:	a2 83       	std	Z+2, r26	; 0x02
    6d46:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6d48:	8e 01       	movw	r16, r28
    6d4a:	03 54       	subi	r16, 0x43	; 67
    6d4c:	1f 4f       	sbci	r17, 0xFF	; 255
    6d4e:	fe 01       	movw	r30, r28
    6d50:	ef 53       	subi	r30, 0x3F	; 63
    6d52:	ff 4f       	sbci	r31, 0xFF	; 255
    6d54:	60 81       	ld	r22, Z
    6d56:	71 81       	ldd	r23, Z+1	; 0x01
    6d58:	82 81       	ldd	r24, Z+2	; 0x02
    6d5a:	93 81       	ldd	r25, Z+3	; 0x03
    6d5c:	20 e0       	ldi	r18, 0x00	; 0
    6d5e:	30 e0       	ldi	r19, 0x00	; 0
    6d60:	4a e7       	ldi	r20, 0x7A	; 122
    6d62:	55 e4       	ldi	r21, 0x45	; 69
    6d64:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6d68:	dc 01       	movw	r26, r24
    6d6a:	cb 01       	movw	r24, r22
    6d6c:	f8 01       	movw	r30, r16
    6d6e:	80 83       	st	Z, r24
    6d70:	91 83       	std	Z+1, r25	; 0x01
    6d72:	a2 83       	std	Z+2, r26	; 0x02
    6d74:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6d76:	fe 01       	movw	r30, r28
    6d78:	e3 54       	subi	r30, 0x43	; 67
    6d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6d7c:	60 81       	ld	r22, Z
    6d7e:	71 81       	ldd	r23, Z+1	; 0x01
    6d80:	82 81       	ldd	r24, Z+2	; 0x02
    6d82:	93 81       	ldd	r25, Z+3	; 0x03
    6d84:	20 e0       	ldi	r18, 0x00	; 0
    6d86:	30 e0       	ldi	r19, 0x00	; 0
    6d88:	40 e8       	ldi	r20, 0x80	; 128
    6d8a:	5f e3       	ldi	r21, 0x3F	; 63
    6d8c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6d90:	88 23       	and	r24, r24
    6d92:	44 f4       	brge	.+16     	; 0x6da4 <Forward+0x49c4>
		__ticks = 1;
    6d94:	fe 01       	movw	r30, r28
    6d96:	e5 54       	subi	r30, 0x45	; 69
    6d98:	ff 4f       	sbci	r31, 0xFF	; 255
    6d9a:	81 e0       	ldi	r24, 0x01	; 1
    6d9c:	90 e0       	ldi	r25, 0x00	; 0
    6d9e:	91 83       	std	Z+1, r25	; 0x01
    6da0:	80 83       	st	Z, r24
    6da2:	64 c0       	rjmp	.+200    	; 0x6e6c <Forward+0x4a8c>
	else if (__tmp > 65535)
    6da4:	fe 01       	movw	r30, r28
    6da6:	e3 54       	subi	r30, 0x43	; 67
    6da8:	ff 4f       	sbci	r31, 0xFF	; 255
    6daa:	60 81       	ld	r22, Z
    6dac:	71 81       	ldd	r23, Z+1	; 0x01
    6dae:	82 81       	ldd	r24, Z+2	; 0x02
    6db0:	93 81       	ldd	r25, Z+3	; 0x03
    6db2:	20 e0       	ldi	r18, 0x00	; 0
    6db4:	3f ef       	ldi	r19, 0xFF	; 255
    6db6:	4f e7       	ldi	r20, 0x7F	; 127
    6db8:	57 e4       	ldi	r21, 0x47	; 71
    6dba:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    6dbe:	18 16       	cp	r1, r24
    6dc0:	0c f0       	brlt	.+2      	; 0x6dc4 <Forward+0x49e4>
    6dc2:	43 c0       	rjmp	.+134    	; 0x6e4a <Forward+0x4a6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6dc4:	fe 01       	movw	r30, r28
    6dc6:	ef 53       	subi	r30, 0x3F	; 63
    6dc8:	ff 4f       	sbci	r31, 0xFF	; 255
    6dca:	60 81       	ld	r22, Z
    6dcc:	71 81       	ldd	r23, Z+1	; 0x01
    6dce:	82 81       	ldd	r24, Z+2	; 0x02
    6dd0:	93 81       	ldd	r25, Z+3	; 0x03
    6dd2:	20 e0       	ldi	r18, 0x00	; 0
    6dd4:	30 e0       	ldi	r19, 0x00	; 0
    6dd6:	40 e2       	ldi	r20, 0x20	; 32
    6dd8:	51 e4       	ldi	r21, 0x41	; 65
    6dda:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6dde:	dc 01       	movw	r26, r24
    6de0:	cb 01       	movw	r24, r22
    6de2:	8e 01       	movw	r16, r28
    6de4:	05 54       	subi	r16, 0x45	; 69
    6de6:	1f 4f       	sbci	r17, 0xFF	; 255
    6de8:	bc 01       	movw	r22, r24
    6dea:	cd 01       	movw	r24, r26
    6dec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6df0:	dc 01       	movw	r26, r24
    6df2:	cb 01       	movw	r24, r22
    6df4:	f8 01       	movw	r30, r16
    6df6:	91 83       	std	Z+1, r25	; 0x01
    6df8:	80 83       	st	Z, r24
    6dfa:	1f c0       	rjmp	.+62     	; 0x6e3a <Forward+0x4a5a>
    6dfc:	fe 01       	movw	r30, r28
    6dfe:	e7 54       	subi	r30, 0x47	; 71
    6e00:	ff 4f       	sbci	r31, 0xFF	; 255
    6e02:	80 e9       	ldi	r24, 0x90	; 144
    6e04:	91 e0       	ldi	r25, 0x01	; 1
    6e06:	91 83       	std	Z+1, r25	; 0x01
    6e08:	80 83       	st	Z, r24
    6e0a:	fe 01       	movw	r30, r28
    6e0c:	e7 54       	subi	r30, 0x47	; 71
    6e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    6e10:	80 81       	ld	r24, Z
    6e12:	91 81       	ldd	r25, Z+1	; 0x01
    6e14:	01 97       	sbiw	r24, 0x01	; 1
    6e16:	f1 f7       	brne	.-4      	; 0x6e14 <Forward+0x4a34>
    6e18:	fe 01       	movw	r30, r28
    6e1a:	e7 54       	subi	r30, 0x47	; 71
    6e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    6e1e:	91 83       	std	Z+1, r25	; 0x01
    6e20:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6e22:	de 01       	movw	r26, r28
    6e24:	a5 54       	subi	r26, 0x45	; 69
    6e26:	bf 4f       	sbci	r27, 0xFF	; 255
    6e28:	fe 01       	movw	r30, r28
    6e2a:	e5 54       	subi	r30, 0x45	; 69
    6e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    6e2e:	80 81       	ld	r24, Z
    6e30:	91 81       	ldd	r25, Z+1	; 0x01
    6e32:	01 97       	sbiw	r24, 0x01	; 1
    6e34:	11 96       	adiw	r26, 0x01	; 1
    6e36:	9c 93       	st	X, r25
    6e38:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6e3a:	fe 01       	movw	r30, r28
    6e3c:	e5 54       	subi	r30, 0x45	; 69
    6e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    6e40:	80 81       	ld	r24, Z
    6e42:	91 81       	ldd	r25, Z+1	; 0x01
    6e44:	00 97       	sbiw	r24, 0x00	; 0
    6e46:	d1 f6       	brne	.-76     	; 0x6dfc <Forward+0x4a1c>
    6e48:	27 c0       	rjmp	.+78     	; 0x6e98 <Forward+0x4ab8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6e4a:	8e 01       	movw	r16, r28
    6e4c:	05 54       	subi	r16, 0x45	; 69
    6e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    6e50:	fe 01       	movw	r30, r28
    6e52:	e3 54       	subi	r30, 0x43	; 67
    6e54:	ff 4f       	sbci	r31, 0xFF	; 255
    6e56:	60 81       	ld	r22, Z
    6e58:	71 81       	ldd	r23, Z+1	; 0x01
    6e5a:	82 81       	ldd	r24, Z+2	; 0x02
    6e5c:	93 81       	ldd	r25, Z+3	; 0x03
    6e5e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6e62:	dc 01       	movw	r26, r24
    6e64:	cb 01       	movw	r24, r22
    6e66:	f8 01       	movw	r30, r16
    6e68:	91 83       	std	Z+1, r25	; 0x01
    6e6a:	80 83       	st	Z, r24
    6e6c:	de 01       	movw	r26, r28
    6e6e:	a9 54       	subi	r26, 0x49	; 73
    6e70:	bf 4f       	sbci	r27, 0xFF	; 255
    6e72:	fe 01       	movw	r30, r28
    6e74:	e5 54       	subi	r30, 0x45	; 69
    6e76:	ff 4f       	sbci	r31, 0xFF	; 255
    6e78:	80 81       	ld	r24, Z
    6e7a:	91 81       	ldd	r25, Z+1	; 0x01
    6e7c:	8d 93       	st	X+, r24
    6e7e:	9c 93       	st	X, r25
    6e80:	fe 01       	movw	r30, r28
    6e82:	e9 54       	subi	r30, 0x49	; 73
    6e84:	ff 4f       	sbci	r31, 0xFF	; 255
    6e86:	80 81       	ld	r24, Z
    6e88:	91 81       	ldd	r25, Z+1	; 0x01
    6e8a:	01 97       	sbiw	r24, 0x01	; 1
    6e8c:	f1 f7       	brne	.-4      	; 0x6e8a <Forward+0x4aaa>
    6e8e:	fe 01       	movw	r30, r28
    6e90:	e9 54       	subi	r30, 0x49	; 73
    6e92:	ff 4f       	sbci	r31, 0xFF	; 255
    6e94:	91 83       	std	Z+1, r25	; 0x01
    6e96:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POS7N;
    6e98:	8e e0       	ldi	r24, 0x0E	; 14
    6e9a:	80 93 71 00 	sts	0x0071, r24
    6e9e:	fe 01       	movw	r30, r28
    6ea0:	ed 54       	subi	r30, 0x4D	; 77
    6ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    6ea4:	80 e0       	ldi	r24, 0x00	; 0
    6ea6:	90 e0       	ldi	r25, 0x00	; 0
    6ea8:	ac e8       	ldi	r26, 0x8C	; 140
    6eaa:	b2 e4       	ldi	r27, 0x42	; 66
    6eac:	80 83       	st	Z, r24
    6eae:	91 83       	std	Z+1, r25	; 0x01
    6eb0:	a2 83       	std	Z+2, r26	; 0x02
    6eb2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    6eb4:	8e 01       	movw	r16, r28
    6eb6:	01 55       	subi	r16, 0x51	; 81
    6eb8:	1f 4f       	sbci	r17, 0xFF	; 255
    6eba:	fe 01       	movw	r30, r28
    6ebc:	ed 54       	subi	r30, 0x4D	; 77
    6ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    6ec0:	60 81       	ld	r22, Z
    6ec2:	71 81       	ldd	r23, Z+1	; 0x01
    6ec4:	82 81       	ldd	r24, Z+2	; 0x02
    6ec6:	93 81       	ldd	r25, Z+3	; 0x03
    6ec8:	20 e0       	ldi	r18, 0x00	; 0
    6eca:	30 e0       	ldi	r19, 0x00	; 0
    6ecc:	4a e7       	ldi	r20, 0x7A	; 122
    6ece:	55 e4       	ldi	r21, 0x45	; 69
    6ed0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6ed4:	dc 01       	movw	r26, r24
    6ed6:	cb 01       	movw	r24, r22
    6ed8:	f8 01       	movw	r30, r16
    6eda:	80 83       	st	Z, r24
    6edc:	91 83       	std	Z+1, r25	; 0x01
    6ede:	a2 83       	std	Z+2, r26	; 0x02
    6ee0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    6ee2:	fe 01       	movw	r30, r28
    6ee4:	e1 55       	subi	r30, 0x51	; 81
    6ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    6ee8:	60 81       	ld	r22, Z
    6eea:	71 81       	ldd	r23, Z+1	; 0x01
    6eec:	82 81       	ldd	r24, Z+2	; 0x02
    6eee:	93 81       	ldd	r25, Z+3	; 0x03
    6ef0:	20 e0       	ldi	r18, 0x00	; 0
    6ef2:	30 e0       	ldi	r19, 0x00	; 0
    6ef4:	40 e8       	ldi	r20, 0x80	; 128
    6ef6:	5f e3       	ldi	r21, 0x3F	; 63
    6ef8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    6efc:	88 23       	and	r24, r24
    6efe:	44 f4       	brge	.+16     	; 0x6f10 <Forward+0x4b30>
		__ticks = 1;
    6f00:	fe 01       	movw	r30, r28
    6f02:	e3 55       	subi	r30, 0x53	; 83
    6f04:	ff 4f       	sbci	r31, 0xFF	; 255
    6f06:	81 e0       	ldi	r24, 0x01	; 1
    6f08:	90 e0       	ldi	r25, 0x00	; 0
    6f0a:	91 83       	std	Z+1, r25	; 0x01
    6f0c:	80 83       	st	Z, r24
    6f0e:	64 c0       	rjmp	.+200    	; 0x6fd8 <Forward+0x4bf8>
	else if (__tmp > 65535)
    6f10:	fe 01       	movw	r30, r28
    6f12:	e1 55       	subi	r30, 0x51	; 81
    6f14:	ff 4f       	sbci	r31, 0xFF	; 255
    6f16:	60 81       	ld	r22, Z
    6f18:	71 81       	ldd	r23, Z+1	; 0x01
    6f1a:	82 81       	ldd	r24, Z+2	; 0x02
    6f1c:	93 81       	ldd	r25, Z+3	; 0x03
    6f1e:	20 e0       	ldi	r18, 0x00	; 0
    6f20:	3f ef       	ldi	r19, 0xFF	; 255
    6f22:	4f e7       	ldi	r20, 0x7F	; 127
    6f24:	57 e4       	ldi	r21, 0x47	; 71
    6f26:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    6f2a:	18 16       	cp	r1, r24
    6f2c:	0c f0       	brlt	.+2      	; 0x6f30 <Forward+0x4b50>
    6f2e:	43 c0       	rjmp	.+134    	; 0x6fb6 <Forward+0x4bd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    6f30:	fe 01       	movw	r30, r28
    6f32:	ed 54       	subi	r30, 0x4D	; 77
    6f34:	ff 4f       	sbci	r31, 0xFF	; 255
    6f36:	60 81       	ld	r22, Z
    6f38:	71 81       	ldd	r23, Z+1	; 0x01
    6f3a:	82 81       	ldd	r24, Z+2	; 0x02
    6f3c:	93 81       	ldd	r25, Z+3	; 0x03
    6f3e:	20 e0       	ldi	r18, 0x00	; 0
    6f40:	30 e0       	ldi	r19, 0x00	; 0
    6f42:	40 e2       	ldi	r20, 0x20	; 32
    6f44:	51 e4       	ldi	r21, 0x41	; 65
    6f46:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    6f4a:	dc 01       	movw	r26, r24
    6f4c:	cb 01       	movw	r24, r22
    6f4e:	8e 01       	movw	r16, r28
    6f50:	03 55       	subi	r16, 0x53	; 83
    6f52:	1f 4f       	sbci	r17, 0xFF	; 255
    6f54:	bc 01       	movw	r22, r24
    6f56:	cd 01       	movw	r24, r26
    6f58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6f5c:	dc 01       	movw	r26, r24
    6f5e:	cb 01       	movw	r24, r22
    6f60:	f8 01       	movw	r30, r16
    6f62:	91 83       	std	Z+1, r25	; 0x01
    6f64:	80 83       	st	Z, r24
    6f66:	1f c0       	rjmp	.+62     	; 0x6fa6 <Forward+0x4bc6>
    6f68:	fe 01       	movw	r30, r28
    6f6a:	e5 55       	subi	r30, 0x55	; 85
    6f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    6f6e:	80 e9       	ldi	r24, 0x90	; 144
    6f70:	91 e0       	ldi	r25, 0x01	; 1
    6f72:	91 83       	std	Z+1, r25	; 0x01
    6f74:	80 83       	st	Z, r24
    6f76:	fe 01       	movw	r30, r28
    6f78:	e5 55       	subi	r30, 0x55	; 85
    6f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    6f7c:	80 81       	ld	r24, Z
    6f7e:	91 81       	ldd	r25, Z+1	; 0x01
    6f80:	01 97       	sbiw	r24, 0x01	; 1
    6f82:	f1 f7       	brne	.-4      	; 0x6f80 <Forward+0x4ba0>
    6f84:	fe 01       	movw	r30, r28
    6f86:	e5 55       	subi	r30, 0x55	; 85
    6f88:	ff 4f       	sbci	r31, 0xFF	; 255
    6f8a:	91 83       	std	Z+1, r25	; 0x01
    6f8c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    6f8e:	de 01       	movw	r26, r28
    6f90:	a3 55       	subi	r26, 0x53	; 83
    6f92:	bf 4f       	sbci	r27, 0xFF	; 255
    6f94:	fe 01       	movw	r30, r28
    6f96:	e3 55       	subi	r30, 0x53	; 83
    6f98:	ff 4f       	sbci	r31, 0xFF	; 255
    6f9a:	80 81       	ld	r24, Z
    6f9c:	91 81       	ldd	r25, Z+1	; 0x01
    6f9e:	01 97       	sbiw	r24, 0x01	; 1
    6fa0:	11 96       	adiw	r26, 0x01	; 1
    6fa2:	9c 93       	st	X, r25
    6fa4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    6fa6:	fe 01       	movw	r30, r28
    6fa8:	e3 55       	subi	r30, 0x53	; 83
    6faa:	ff 4f       	sbci	r31, 0xFF	; 255
    6fac:	80 81       	ld	r24, Z
    6fae:	91 81       	ldd	r25, Z+1	; 0x01
    6fb0:	00 97       	sbiw	r24, 0x00	; 0
    6fb2:	d1 f6       	brne	.-76     	; 0x6f68 <Forward+0x4b88>
    6fb4:	27 c0       	rjmp	.+78     	; 0x7004 <Forward+0x4c24>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    6fb6:	8e 01       	movw	r16, r28
    6fb8:	03 55       	subi	r16, 0x53	; 83
    6fba:	1f 4f       	sbci	r17, 0xFF	; 255
    6fbc:	fe 01       	movw	r30, r28
    6fbe:	e1 55       	subi	r30, 0x51	; 81
    6fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    6fc2:	60 81       	ld	r22, Z
    6fc4:	71 81       	ldd	r23, Z+1	; 0x01
    6fc6:	82 81       	ldd	r24, Z+2	; 0x02
    6fc8:	93 81       	ldd	r25, Z+3	; 0x03
    6fca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    6fce:	dc 01       	movw	r26, r24
    6fd0:	cb 01       	movw	r24, r22
    6fd2:	f8 01       	movw	r30, r16
    6fd4:	91 83       	std	Z+1, r25	; 0x01
    6fd6:	80 83       	st	Z, r24
    6fd8:	de 01       	movw	r26, r28
    6fda:	a7 55       	subi	r26, 0x57	; 87
    6fdc:	bf 4f       	sbci	r27, 0xFF	; 255
    6fde:	fe 01       	movw	r30, r28
    6fe0:	e3 55       	subi	r30, 0x53	; 83
    6fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    6fe4:	80 81       	ld	r24, Z
    6fe6:	91 81       	ldd	r25, Z+1	; 0x01
    6fe8:	8d 93       	st	X+, r24
    6fea:	9c 93       	st	X, r25
    6fec:	fe 01       	movw	r30, r28
    6fee:	e7 55       	subi	r30, 0x57	; 87
    6ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    6ff2:	80 81       	ld	r24, Z
    6ff4:	91 81       	ldd	r25, Z+1	; 0x01
    6ff6:	01 97       	sbiw	r24, 0x01	; 1
    6ff8:	f1 f7       	brne	.-4      	; 0x6ff6 <Forward+0x4c16>
    6ffa:	fe 01       	movw	r30, r28
    6ffc:	e7 55       	subi	r30, 0x57	; 87
    6ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    7000:	91 83       	std	Z+1, r25	; 0x01
    7002:	80 83       	st	Z, r24
	_delay_ms(70);
	angle9 = POS8N;
    7004:	8f e0       	ldi	r24, 0x0F	; 15
    7006:	80 93 71 00 	sts	0x0071, r24
	angle8 = POSN3;
    700a:	8a e0       	ldi	r24, 0x0A	; 10
    700c:	80 93 70 00 	sts	0x0070, r24
    7010:	fe 01       	movw	r30, r28
    7012:	eb 55       	subi	r30, 0x5B	; 91
    7014:	ff 4f       	sbci	r31, 0xFF	; 255
    7016:	80 e0       	ldi	r24, 0x00	; 0
    7018:	90 e0       	ldi	r25, 0x00	; 0
    701a:	ac e8       	ldi	r26, 0x8C	; 140
    701c:	b2 e4       	ldi	r27, 0x42	; 66
    701e:	80 83       	st	Z, r24
    7020:	91 83       	std	Z+1, r25	; 0x01
    7022:	a2 83       	std	Z+2, r26	; 0x02
    7024:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7026:	8e 01       	movw	r16, r28
    7028:	0f 55       	subi	r16, 0x5F	; 95
    702a:	1f 4f       	sbci	r17, 0xFF	; 255
    702c:	fe 01       	movw	r30, r28
    702e:	eb 55       	subi	r30, 0x5B	; 91
    7030:	ff 4f       	sbci	r31, 0xFF	; 255
    7032:	60 81       	ld	r22, Z
    7034:	71 81       	ldd	r23, Z+1	; 0x01
    7036:	82 81       	ldd	r24, Z+2	; 0x02
    7038:	93 81       	ldd	r25, Z+3	; 0x03
    703a:	20 e0       	ldi	r18, 0x00	; 0
    703c:	30 e0       	ldi	r19, 0x00	; 0
    703e:	4a e7       	ldi	r20, 0x7A	; 122
    7040:	55 e4       	ldi	r21, 0x45	; 69
    7042:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7046:	dc 01       	movw	r26, r24
    7048:	cb 01       	movw	r24, r22
    704a:	f8 01       	movw	r30, r16
    704c:	80 83       	st	Z, r24
    704e:	91 83       	std	Z+1, r25	; 0x01
    7050:	a2 83       	std	Z+2, r26	; 0x02
    7052:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7054:	fe 01       	movw	r30, r28
    7056:	ef 55       	subi	r30, 0x5F	; 95
    7058:	ff 4f       	sbci	r31, 0xFF	; 255
    705a:	60 81       	ld	r22, Z
    705c:	71 81       	ldd	r23, Z+1	; 0x01
    705e:	82 81       	ldd	r24, Z+2	; 0x02
    7060:	93 81       	ldd	r25, Z+3	; 0x03
    7062:	20 e0       	ldi	r18, 0x00	; 0
    7064:	30 e0       	ldi	r19, 0x00	; 0
    7066:	40 e8       	ldi	r20, 0x80	; 128
    7068:	5f e3       	ldi	r21, 0x3F	; 63
    706a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    706e:	88 23       	and	r24, r24
    7070:	44 f4       	brge	.+16     	; 0x7082 <Forward+0x4ca2>
		__ticks = 1;
    7072:	fe 01       	movw	r30, r28
    7074:	e1 56       	subi	r30, 0x61	; 97
    7076:	ff 4f       	sbci	r31, 0xFF	; 255
    7078:	81 e0       	ldi	r24, 0x01	; 1
    707a:	90 e0       	ldi	r25, 0x00	; 0
    707c:	91 83       	std	Z+1, r25	; 0x01
    707e:	80 83       	st	Z, r24
    7080:	64 c0       	rjmp	.+200    	; 0x714a <Forward+0x4d6a>
	else if (__tmp > 65535)
    7082:	fe 01       	movw	r30, r28
    7084:	ef 55       	subi	r30, 0x5F	; 95
    7086:	ff 4f       	sbci	r31, 0xFF	; 255
    7088:	60 81       	ld	r22, Z
    708a:	71 81       	ldd	r23, Z+1	; 0x01
    708c:	82 81       	ldd	r24, Z+2	; 0x02
    708e:	93 81       	ldd	r25, Z+3	; 0x03
    7090:	20 e0       	ldi	r18, 0x00	; 0
    7092:	3f ef       	ldi	r19, 0xFF	; 255
    7094:	4f e7       	ldi	r20, 0x7F	; 127
    7096:	57 e4       	ldi	r21, 0x47	; 71
    7098:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    709c:	18 16       	cp	r1, r24
    709e:	0c f0       	brlt	.+2      	; 0x70a2 <Forward+0x4cc2>
    70a0:	43 c0       	rjmp	.+134    	; 0x7128 <Forward+0x4d48>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    70a2:	fe 01       	movw	r30, r28
    70a4:	eb 55       	subi	r30, 0x5B	; 91
    70a6:	ff 4f       	sbci	r31, 0xFF	; 255
    70a8:	60 81       	ld	r22, Z
    70aa:	71 81       	ldd	r23, Z+1	; 0x01
    70ac:	82 81       	ldd	r24, Z+2	; 0x02
    70ae:	93 81       	ldd	r25, Z+3	; 0x03
    70b0:	20 e0       	ldi	r18, 0x00	; 0
    70b2:	30 e0       	ldi	r19, 0x00	; 0
    70b4:	40 e2       	ldi	r20, 0x20	; 32
    70b6:	51 e4       	ldi	r21, 0x41	; 65
    70b8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    70bc:	dc 01       	movw	r26, r24
    70be:	cb 01       	movw	r24, r22
    70c0:	8e 01       	movw	r16, r28
    70c2:	01 56       	subi	r16, 0x61	; 97
    70c4:	1f 4f       	sbci	r17, 0xFF	; 255
    70c6:	bc 01       	movw	r22, r24
    70c8:	cd 01       	movw	r24, r26
    70ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    70ce:	dc 01       	movw	r26, r24
    70d0:	cb 01       	movw	r24, r22
    70d2:	f8 01       	movw	r30, r16
    70d4:	91 83       	std	Z+1, r25	; 0x01
    70d6:	80 83       	st	Z, r24
    70d8:	1f c0       	rjmp	.+62     	; 0x7118 <Forward+0x4d38>
    70da:	fe 01       	movw	r30, r28
    70dc:	e3 56       	subi	r30, 0x63	; 99
    70de:	ff 4f       	sbci	r31, 0xFF	; 255
    70e0:	80 e9       	ldi	r24, 0x90	; 144
    70e2:	91 e0       	ldi	r25, 0x01	; 1
    70e4:	91 83       	std	Z+1, r25	; 0x01
    70e6:	80 83       	st	Z, r24
    70e8:	fe 01       	movw	r30, r28
    70ea:	e3 56       	subi	r30, 0x63	; 99
    70ec:	ff 4f       	sbci	r31, 0xFF	; 255
    70ee:	80 81       	ld	r24, Z
    70f0:	91 81       	ldd	r25, Z+1	; 0x01
    70f2:	01 97       	sbiw	r24, 0x01	; 1
    70f4:	f1 f7       	brne	.-4      	; 0x70f2 <Forward+0x4d12>
    70f6:	fe 01       	movw	r30, r28
    70f8:	e3 56       	subi	r30, 0x63	; 99
    70fa:	ff 4f       	sbci	r31, 0xFF	; 255
    70fc:	91 83       	std	Z+1, r25	; 0x01
    70fe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7100:	de 01       	movw	r26, r28
    7102:	a1 56       	subi	r26, 0x61	; 97
    7104:	bf 4f       	sbci	r27, 0xFF	; 255
    7106:	fe 01       	movw	r30, r28
    7108:	e1 56       	subi	r30, 0x61	; 97
    710a:	ff 4f       	sbci	r31, 0xFF	; 255
    710c:	80 81       	ld	r24, Z
    710e:	91 81       	ldd	r25, Z+1	; 0x01
    7110:	01 97       	sbiw	r24, 0x01	; 1
    7112:	11 96       	adiw	r26, 0x01	; 1
    7114:	9c 93       	st	X, r25
    7116:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7118:	fe 01       	movw	r30, r28
    711a:	e1 56       	subi	r30, 0x61	; 97
    711c:	ff 4f       	sbci	r31, 0xFF	; 255
    711e:	80 81       	ld	r24, Z
    7120:	91 81       	ldd	r25, Z+1	; 0x01
    7122:	00 97       	sbiw	r24, 0x00	; 0
    7124:	d1 f6       	brne	.-76     	; 0x70da <Forward+0x4cfa>
    7126:	27 c0       	rjmp	.+78     	; 0x7176 <Forward+0x4d96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7128:	8e 01       	movw	r16, r28
    712a:	01 56       	subi	r16, 0x61	; 97
    712c:	1f 4f       	sbci	r17, 0xFF	; 255
    712e:	fe 01       	movw	r30, r28
    7130:	ef 55       	subi	r30, 0x5F	; 95
    7132:	ff 4f       	sbci	r31, 0xFF	; 255
    7134:	60 81       	ld	r22, Z
    7136:	71 81       	ldd	r23, Z+1	; 0x01
    7138:	82 81       	ldd	r24, Z+2	; 0x02
    713a:	93 81       	ldd	r25, Z+3	; 0x03
    713c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7140:	dc 01       	movw	r26, r24
    7142:	cb 01       	movw	r24, r22
    7144:	f8 01       	movw	r30, r16
    7146:	91 83       	std	Z+1, r25	; 0x01
    7148:	80 83       	st	Z, r24
    714a:	de 01       	movw	r26, r28
    714c:	a5 56       	subi	r26, 0x65	; 101
    714e:	bf 4f       	sbci	r27, 0xFF	; 255
    7150:	fe 01       	movw	r30, r28
    7152:	e1 56       	subi	r30, 0x61	; 97
    7154:	ff 4f       	sbci	r31, 0xFF	; 255
    7156:	80 81       	ld	r24, Z
    7158:	91 81       	ldd	r25, Z+1	; 0x01
    715a:	8d 93       	st	X+, r24
    715c:	9c 93       	st	X, r25
    715e:	fe 01       	movw	r30, r28
    7160:	e5 56       	subi	r30, 0x65	; 101
    7162:	ff 4f       	sbci	r31, 0xFF	; 255
    7164:	80 81       	ld	r24, Z
    7166:	91 81       	ldd	r25, Z+1	; 0x01
    7168:	01 97       	sbiw	r24, 0x01	; 1
    716a:	f1 f7       	brne	.-4      	; 0x7168 <Forward+0x4d88>
    716c:	fe 01       	movw	r30, r28
    716e:	e5 56       	subi	r30, 0x65	; 101
    7170:	ff 4f       	sbci	r31, 0xFF	; 255
    7172:	91 83       	std	Z+1, r25	; 0x01
    7174:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = POSN4;
    7176:	8b e0       	ldi	r24, 0x0B	; 11
    7178:	80 93 70 00 	sts	0x0070, r24
    717c:	fe 01       	movw	r30, r28
    717e:	e9 56       	subi	r30, 0x69	; 105
    7180:	ff 4f       	sbci	r31, 0xFF	; 255
    7182:	80 e0       	ldi	r24, 0x00	; 0
    7184:	90 e0       	ldi	r25, 0x00	; 0
    7186:	ac e8       	ldi	r26, 0x8C	; 140
    7188:	b2 e4       	ldi	r27, 0x42	; 66
    718a:	80 83       	st	Z, r24
    718c:	91 83       	std	Z+1, r25	; 0x01
    718e:	a2 83       	std	Z+2, r26	; 0x02
    7190:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7192:	8e 01       	movw	r16, r28
    7194:	0d 56       	subi	r16, 0x6D	; 109
    7196:	1f 4f       	sbci	r17, 0xFF	; 255
    7198:	fe 01       	movw	r30, r28
    719a:	e9 56       	subi	r30, 0x69	; 105
    719c:	ff 4f       	sbci	r31, 0xFF	; 255
    719e:	60 81       	ld	r22, Z
    71a0:	71 81       	ldd	r23, Z+1	; 0x01
    71a2:	82 81       	ldd	r24, Z+2	; 0x02
    71a4:	93 81       	ldd	r25, Z+3	; 0x03
    71a6:	20 e0       	ldi	r18, 0x00	; 0
    71a8:	30 e0       	ldi	r19, 0x00	; 0
    71aa:	4a e7       	ldi	r20, 0x7A	; 122
    71ac:	55 e4       	ldi	r21, 0x45	; 69
    71ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    71b2:	dc 01       	movw	r26, r24
    71b4:	cb 01       	movw	r24, r22
    71b6:	f8 01       	movw	r30, r16
    71b8:	80 83       	st	Z, r24
    71ba:	91 83       	std	Z+1, r25	; 0x01
    71bc:	a2 83       	std	Z+2, r26	; 0x02
    71be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    71c0:	fe 01       	movw	r30, r28
    71c2:	ed 56       	subi	r30, 0x6D	; 109
    71c4:	ff 4f       	sbci	r31, 0xFF	; 255
    71c6:	60 81       	ld	r22, Z
    71c8:	71 81       	ldd	r23, Z+1	; 0x01
    71ca:	82 81       	ldd	r24, Z+2	; 0x02
    71cc:	93 81       	ldd	r25, Z+3	; 0x03
    71ce:	20 e0       	ldi	r18, 0x00	; 0
    71d0:	30 e0       	ldi	r19, 0x00	; 0
    71d2:	40 e8       	ldi	r20, 0x80	; 128
    71d4:	5f e3       	ldi	r21, 0x3F	; 63
    71d6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    71da:	88 23       	and	r24, r24
    71dc:	44 f4       	brge	.+16     	; 0x71ee <Forward+0x4e0e>
		__ticks = 1;
    71de:	fe 01       	movw	r30, r28
    71e0:	ef 56       	subi	r30, 0x6F	; 111
    71e2:	ff 4f       	sbci	r31, 0xFF	; 255
    71e4:	81 e0       	ldi	r24, 0x01	; 1
    71e6:	90 e0       	ldi	r25, 0x00	; 0
    71e8:	91 83       	std	Z+1, r25	; 0x01
    71ea:	80 83       	st	Z, r24
    71ec:	64 c0       	rjmp	.+200    	; 0x72b6 <Forward+0x4ed6>
	else if (__tmp > 65535)
    71ee:	fe 01       	movw	r30, r28
    71f0:	ed 56       	subi	r30, 0x6D	; 109
    71f2:	ff 4f       	sbci	r31, 0xFF	; 255
    71f4:	60 81       	ld	r22, Z
    71f6:	71 81       	ldd	r23, Z+1	; 0x01
    71f8:	82 81       	ldd	r24, Z+2	; 0x02
    71fa:	93 81       	ldd	r25, Z+3	; 0x03
    71fc:	20 e0       	ldi	r18, 0x00	; 0
    71fe:	3f ef       	ldi	r19, 0xFF	; 255
    7200:	4f e7       	ldi	r20, 0x7F	; 127
    7202:	57 e4       	ldi	r21, 0x47	; 71
    7204:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7208:	18 16       	cp	r1, r24
    720a:	0c f0       	brlt	.+2      	; 0x720e <Forward+0x4e2e>
    720c:	43 c0       	rjmp	.+134    	; 0x7294 <Forward+0x4eb4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    720e:	fe 01       	movw	r30, r28
    7210:	e9 56       	subi	r30, 0x69	; 105
    7212:	ff 4f       	sbci	r31, 0xFF	; 255
    7214:	60 81       	ld	r22, Z
    7216:	71 81       	ldd	r23, Z+1	; 0x01
    7218:	82 81       	ldd	r24, Z+2	; 0x02
    721a:	93 81       	ldd	r25, Z+3	; 0x03
    721c:	20 e0       	ldi	r18, 0x00	; 0
    721e:	30 e0       	ldi	r19, 0x00	; 0
    7220:	40 e2       	ldi	r20, 0x20	; 32
    7222:	51 e4       	ldi	r21, 0x41	; 65
    7224:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7228:	dc 01       	movw	r26, r24
    722a:	cb 01       	movw	r24, r22
    722c:	8e 01       	movw	r16, r28
    722e:	0f 56       	subi	r16, 0x6F	; 111
    7230:	1f 4f       	sbci	r17, 0xFF	; 255
    7232:	bc 01       	movw	r22, r24
    7234:	cd 01       	movw	r24, r26
    7236:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    723a:	dc 01       	movw	r26, r24
    723c:	cb 01       	movw	r24, r22
    723e:	f8 01       	movw	r30, r16
    7240:	91 83       	std	Z+1, r25	; 0x01
    7242:	80 83       	st	Z, r24
    7244:	1f c0       	rjmp	.+62     	; 0x7284 <Forward+0x4ea4>
    7246:	fe 01       	movw	r30, r28
    7248:	e1 57       	subi	r30, 0x71	; 113
    724a:	ff 4f       	sbci	r31, 0xFF	; 255
    724c:	80 e9       	ldi	r24, 0x90	; 144
    724e:	91 e0       	ldi	r25, 0x01	; 1
    7250:	91 83       	std	Z+1, r25	; 0x01
    7252:	80 83       	st	Z, r24
    7254:	fe 01       	movw	r30, r28
    7256:	e1 57       	subi	r30, 0x71	; 113
    7258:	ff 4f       	sbci	r31, 0xFF	; 255
    725a:	80 81       	ld	r24, Z
    725c:	91 81       	ldd	r25, Z+1	; 0x01
    725e:	01 97       	sbiw	r24, 0x01	; 1
    7260:	f1 f7       	brne	.-4      	; 0x725e <Forward+0x4e7e>
    7262:	fe 01       	movw	r30, r28
    7264:	e1 57       	subi	r30, 0x71	; 113
    7266:	ff 4f       	sbci	r31, 0xFF	; 255
    7268:	91 83       	std	Z+1, r25	; 0x01
    726a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    726c:	de 01       	movw	r26, r28
    726e:	af 56       	subi	r26, 0x6F	; 111
    7270:	bf 4f       	sbci	r27, 0xFF	; 255
    7272:	fe 01       	movw	r30, r28
    7274:	ef 56       	subi	r30, 0x6F	; 111
    7276:	ff 4f       	sbci	r31, 0xFF	; 255
    7278:	80 81       	ld	r24, Z
    727a:	91 81       	ldd	r25, Z+1	; 0x01
    727c:	01 97       	sbiw	r24, 0x01	; 1
    727e:	11 96       	adiw	r26, 0x01	; 1
    7280:	9c 93       	st	X, r25
    7282:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7284:	fe 01       	movw	r30, r28
    7286:	ef 56       	subi	r30, 0x6F	; 111
    7288:	ff 4f       	sbci	r31, 0xFF	; 255
    728a:	80 81       	ld	r24, Z
    728c:	91 81       	ldd	r25, Z+1	; 0x01
    728e:	00 97       	sbiw	r24, 0x00	; 0
    7290:	d1 f6       	brne	.-76     	; 0x7246 <Forward+0x4e66>
    7292:	27 c0       	rjmp	.+78     	; 0x72e2 <Forward+0x4f02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7294:	8e 01       	movw	r16, r28
    7296:	0f 56       	subi	r16, 0x6F	; 111
    7298:	1f 4f       	sbci	r17, 0xFF	; 255
    729a:	fe 01       	movw	r30, r28
    729c:	ed 56       	subi	r30, 0x6D	; 109
    729e:	ff 4f       	sbci	r31, 0xFF	; 255
    72a0:	60 81       	ld	r22, Z
    72a2:	71 81       	ldd	r23, Z+1	; 0x01
    72a4:	82 81       	ldd	r24, Z+2	; 0x02
    72a6:	93 81       	ldd	r25, Z+3	; 0x03
    72a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    72ac:	dc 01       	movw	r26, r24
    72ae:	cb 01       	movw	r24, r22
    72b0:	f8 01       	movw	r30, r16
    72b2:	91 83       	std	Z+1, r25	; 0x01
    72b4:	80 83       	st	Z, r24
    72b6:	de 01       	movw	r26, r28
    72b8:	a3 57       	subi	r26, 0x73	; 115
    72ba:	bf 4f       	sbci	r27, 0xFF	; 255
    72bc:	fe 01       	movw	r30, r28
    72be:	ef 56       	subi	r30, 0x6F	; 111
    72c0:	ff 4f       	sbci	r31, 0xFF	; 255
    72c2:	80 81       	ld	r24, Z
    72c4:	91 81       	ldd	r25, Z+1	; 0x01
    72c6:	8d 93       	st	X+, r24
    72c8:	9c 93       	st	X, r25
    72ca:	fe 01       	movw	r30, r28
    72cc:	e3 57       	subi	r30, 0x73	; 115
    72ce:	ff 4f       	sbci	r31, 0xFF	; 255
    72d0:	80 81       	ld	r24, Z
    72d2:	91 81       	ldd	r25, Z+1	; 0x01
    72d4:	01 97       	sbiw	r24, 0x01	; 1
    72d6:	f1 f7       	brne	.-4      	; 0x72d4 <Forward+0x4ef4>
    72d8:	fe 01       	movw	r30, r28
    72da:	e3 57       	subi	r30, 0x73	; 115
    72dc:	ff 4f       	sbci	r31, 0xFF	; 255
    72de:	91 83       	std	Z+1, r25	; 0x01
    72e0:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = POSN5;
    72e2:	8c e0       	ldi	r24, 0x0C	; 12
    72e4:	80 93 70 00 	sts	0x0070, r24
    72e8:	fe 01       	movw	r30, r28
    72ea:	e7 57       	subi	r30, 0x77	; 119
    72ec:	ff 4f       	sbci	r31, 0xFF	; 255
    72ee:	80 e0       	ldi	r24, 0x00	; 0
    72f0:	90 e0       	ldi	r25, 0x00	; 0
    72f2:	ac e8       	ldi	r26, 0x8C	; 140
    72f4:	b2 e4       	ldi	r27, 0x42	; 66
    72f6:	80 83       	st	Z, r24
    72f8:	91 83       	std	Z+1, r25	; 0x01
    72fa:	a2 83       	std	Z+2, r26	; 0x02
    72fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    72fe:	8e 01       	movw	r16, r28
    7300:	0b 57       	subi	r16, 0x7B	; 123
    7302:	1f 4f       	sbci	r17, 0xFF	; 255
    7304:	fe 01       	movw	r30, r28
    7306:	e7 57       	subi	r30, 0x77	; 119
    7308:	ff 4f       	sbci	r31, 0xFF	; 255
    730a:	60 81       	ld	r22, Z
    730c:	71 81       	ldd	r23, Z+1	; 0x01
    730e:	82 81       	ldd	r24, Z+2	; 0x02
    7310:	93 81       	ldd	r25, Z+3	; 0x03
    7312:	20 e0       	ldi	r18, 0x00	; 0
    7314:	30 e0       	ldi	r19, 0x00	; 0
    7316:	4a e7       	ldi	r20, 0x7A	; 122
    7318:	55 e4       	ldi	r21, 0x45	; 69
    731a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    731e:	dc 01       	movw	r26, r24
    7320:	cb 01       	movw	r24, r22
    7322:	f8 01       	movw	r30, r16
    7324:	80 83       	st	Z, r24
    7326:	91 83       	std	Z+1, r25	; 0x01
    7328:	a2 83       	std	Z+2, r26	; 0x02
    732a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    732c:	fe 01       	movw	r30, r28
    732e:	eb 57       	subi	r30, 0x7B	; 123
    7330:	ff 4f       	sbci	r31, 0xFF	; 255
    7332:	60 81       	ld	r22, Z
    7334:	71 81       	ldd	r23, Z+1	; 0x01
    7336:	82 81       	ldd	r24, Z+2	; 0x02
    7338:	93 81       	ldd	r25, Z+3	; 0x03
    733a:	20 e0       	ldi	r18, 0x00	; 0
    733c:	30 e0       	ldi	r19, 0x00	; 0
    733e:	40 e8       	ldi	r20, 0x80	; 128
    7340:	5f e3       	ldi	r21, 0x3F	; 63
    7342:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7346:	88 23       	and	r24, r24
    7348:	44 f4       	brge	.+16     	; 0x735a <Forward+0x4f7a>
		__ticks = 1;
    734a:	fe 01       	movw	r30, r28
    734c:	ed 57       	subi	r30, 0x7D	; 125
    734e:	ff 4f       	sbci	r31, 0xFF	; 255
    7350:	81 e0       	ldi	r24, 0x01	; 1
    7352:	90 e0       	ldi	r25, 0x00	; 0
    7354:	91 83       	std	Z+1, r25	; 0x01
    7356:	80 83       	st	Z, r24
    7358:	64 c0       	rjmp	.+200    	; 0x7422 <Forward+0x5042>
	else if (__tmp > 65535)
    735a:	fe 01       	movw	r30, r28
    735c:	eb 57       	subi	r30, 0x7B	; 123
    735e:	ff 4f       	sbci	r31, 0xFF	; 255
    7360:	60 81       	ld	r22, Z
    7362:	71 81       	ldd	r23, Z+1	; 0x01
    7364:	82 81       	ldd	r24, Z+2	; 0x02
    7366:	93 81       	ldd	r25, Z+3	; 0x03
    7368:	20 e0       	ldi	r18, 0x00	; 0
    736a:	3f ef       	ldi	r19, 0xFF	; 255
    736c:	4f e7       	ldi	r20, 0x7F	; 127
    736e:	57 e4       	ldi	r21, 0x47	; 71
    7370:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7374:	18 16       	cp	r1, r24
    7376:	0c f0       	brlt	.+2      	; 0x737a <Forward+0x4f9a>
    7378:	43 c0       	rjmp	.+134    	; 0x7400 <Forward+0x5020>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    737a:	fe 01       	movw	r30, r28
    737c:	e7 57       	subi	r30, 0x77	; 119
    737e:	ff 4f       	sbci	r31, 0xFF	; 255
    7380:	60 81       	ld	r22, Z
    7382:	71 81       	ldd	r23, Z+1	; 0x01
    7384:	82 81       	ldd	r24, Z+2	; 0x02
    7386:	93 81       	ldd	r25, Z+3	; 0x03
    7388:	20 e0       	ldi	r18, 0x00	; 0
    738a:	30 e0       	ldi	r19, 0x00	; 0
    738c:	40 e2       	ldi	r20, 0x20	; 32
    738e:	51 e4       	ldi	r21, 0x41	; 65
    7390:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7394:	dc 01       	movw	r26, r24
    7396:	cb 01       	movw	r24, r22
    7398:	8e 01       	movw	r16, r28
    739a:	0d 57       	subi	r16, 0x7D	; 125
    739c:	1f 4f       	sbci	r17, 0xFF	; 255
    739e:	bc 01       	movw	r22, r24
    73a0:	cd 01       	movw	r24, r26
    73a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    73a6:	dc 01       	movw	r26, r24
    73a8:	cb 01       	movw	r24, r22
    73aa:	f8 01       	movw	r30, r16
    73ac:	91 83       	std	Z+1, r25	; 0x01
    73ae:	80 83       	st	Z, r24
    73b0:	1f c0       	rjmp	.+62     	; 0x73f0 <Forward+0x5010>
    73b2:	fe 01       	movw	r30, r28
    73b4:	ef 57       	subi	r30, 0x7F	; 127
    73b6:	ff 4f       	sbci	r31, 0xFF	; 255
    73b8:	80 e9       	ldi	r24, 0x90	; 144
    73ba:	91 e0       	ldi	r25, 0x01	; 1
    73bc:	91 83       	std	Z+1, r25	; 0x01
    73be:	80 83       	st	Z, r24
    73c0:	fe 01       	movw	r30, r28
    73c2:	ef 57       	subi	r30, 0x7F	; 127
    73c4:	ff 4f       	sbci	r31, 0xFF	; 255
    73c6:	80 81       	ld	r24, Z
    73c8:	91 81       	ldd	r25, Z+1	; 0x01
    73ca:	01 97       	sbiw	r24, 0x01	; 1
    73cc:	f1 f7       	brne	.-4      	; 0x73ca <Forward+0x4fea>
    73ce:	fe 01       	movw	r30, r28
    73d0:	ef 57       	subi	r30, 0x7F	; 127
    73d2:	ff 4f       	sbci	r31, 0xFF	; 255
    73d4:	91 83       	std	Z+1, r25	; 0x01
    73d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    73d8:	de 01       	movw	r26, r28
    73da:	ad 57       	subi	r26, 0x7D	; 125
    73dc:	bf 4f       	sbci	r27, 0xFF	; 255
    73de:	fe 01       	movw	r30, r28
    73e0:	ed 57       	subi	r30, 0x7D	; 125
    73e2:	ff 4f       	sbci	r31, 0xFF	; 255
    73e4:	80 81       	ld	r24, Z
    73e6:	91 81       	ldd	r25, Z+1	; 0x01
    73e8:	01 97       	sbiw	r24, 0x01	; 1
    73ea:	11 96       	adiw	r26, 0x01	; 1
    73ec:	9c 93       	st	X, r25
    73ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    73f0:	fe 01       	movw	r30, r28
    73f2:	ed 57       	subi	r30, 0x7D	; 125
    73f4:	ff 4f       	sbci	r31, 0xFF	; 255
    73f6:	80 81       	ld	r24, Z
    73f8:	91 81       	ldd	r25, Z+1	; 0x01
    73fa:	00 97       	sbiw	r24, 0x00	; 0
    73fc:	d1 f6       	brne	.-76     	; 0x73b2 <Forward+0x4fd2>
    73fe:	27 c0       	rjmp	.+78     	; 0x744e <Forward+0x506e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7400:	8e 01       	movw	r16, r28
    7402:	0d 57       	subi	r16, 0x7D	; 125
    7404:	1f 4f       	sbci	r17, 0xFF	; 255
    7406:	fe 01       	movw	r30, r28
    7408:	eb 57       	subi	r30, 0x7B	; 123
    740a:	ff 4f       	sbci	r31, 0xFF	; 255
    740c:	60 81       	ld	r22, Z
    740e:	71 81       	ldd	r23, Z+1	; 0x01
    7410:	82 81       	ldd	r24, Z+2	; 0x02
    7412:	93 81       	ldd	r25, Z+3	; 0x03
    7414:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7418:	dc 01       	movw	r26, r24
    741a:	cb 01       	movw	r24, r22
    741c:	f8 01       	movw	r30, r16
    741e:	91 83       	std	Z+1, r25	; 0x01
    7420:	80 83       	st	Z, r24
    7422:	de 01       	movw	r26, r28
    7424:	a1 58       	subi	r26, 0x81	; 129
    7426:	bf 4f       	sbci	r27, 0xFF	; 255
    7428:	fe 01       	movw	r30, r28
    742a:	ed 57       	subi	r30, 0x7D	; 125
    742c:	ff 4f       	sbci	r31, 0xFF	; 255
    742e:	80 81       	ld	r24, Z
    7430:	91 81       	ldd	r25, Z+1	; 0x01
    7432:	8d 93       	st	X+, r24
    7434:	9c 93       	st	X, r25
    7436:	fe 01       	movw	r30, r28
    7438:	e1 58       	subi	r30, 0x81	; 129
    743a:	ff 4f       	sbci	r31, 0xFF	; 255
    743c:	80 81       	ld	r24, Z
    743e:	91 81       	ldd	r25, Z+1	; 0x01
    7440:	01 97       	sbiw	r24, 0x01	; 1
    7442:	f1 f7       	brne	.-4      	; 0x7440 <Forward+0x5060>
    7444:	fe 01       	movw	r30, r28
    7446:	e1 58       	subi	r30, 0x81	; 129
    7448:	ff 4f       	sbci	r31, 0xFF	; 255
    744a:	91 83       	std	Z+1, r25	; 0x01
    744c:	80 83       	st	Z, r24
	_delay_ms(70);
	angle8 = NaturalPos;
    744e:	8d e0       	ldi	r24, 0x0D	; 13
    7450:	80 93 70 00 	sts	0x0070, r24
    7454:	fe 01       	movw	r30, r28
    7456:	e5 58       	subi	r30, 0x85	; 133
    7458:	ff 4f       	sbci	r31, 0xFF	; 255
    745a:	80 e0       	ldi	r24, 0x00	; 0
    745c:	90 e0       	ldi	r25, 0x00	; 0
    745e:	aa ef       	ldi	r26, 0xFA	; 250
    7460:	b3 e4       	ldi	r27, 0x43	; 67
    7462:	80 83       	st	Z, r24
    7464:	91 83       	std	Z+1, r25	; 0x01
    7466:	a2 83       	std	Z+2, r26	; 0x02
    7468:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    746a:	8e 01       	movw	r16, r28
    746c:	09 58       	subi	r16, 0x89	; 137
    746e:	1f 4f       	sbci	r17, 0xFF	; 255
    7470:	fe 01       	movw	r30, r28
    7472:	e5 58       	subi	r30, 0x85	; 133
    7474:	ff 4f       	sbci	r31, 0xFF	; 255
    7476:	60 81       	ld	r22, Z
    7478:	71 81       	ldd	r23, Z+1	; 0x01
    747a:	82 81       	ldd	r24, Z+2	; 0x02
    747c:	93 81       	ldd	r25, Z+3	; 0x03
    747e:	20 e0       	ldi	r18, 0x00	; 0
    7480:	30 e0       	ldi	r19, 0x00	; 0
    7482:	4a e7       	ldi	r20, 0x7A	; 122
    7484:	55 e4       	ldi	r21, 0x45	; 69
    7486:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    748a:	dc 01       	movw	r26, r24
    748c:	cb 01       	movw	r24, r22
    748e:	f8 01       	movw	r30, r16
    7490:	80 83       	st	Z, r24
    7492:	91 83       	std	Z+1, r25	; 0x01
    7494:	a2 83       	std	Z+2, r26	; 0x02
    7496:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7498:	fe 01       	movw	r30, r28
    749a:	e9 58       	subi	r30, 0x89	; 137
    749c:	ff 4f       	sbci	r31, 0xFF	; 255
    749e:	60 81       	ld	r22, Z
    74a0:	71 81       	ldd	r23, Z+1	; 0x01
    74a2:	82 81       	ldd	r24, Z+2	; 0x02
    74a4:	93 81       	ldd	r25, Z+3	; 0x03
    74a6:	20 e0       	ldi	r18, 0x00	; 0
    74a8:	30 e0       	ldi	r19, 0x00	; 0
    74aa:	40 e8       	ldi	r20, 0x80	; 128
    74ac:	5f e3       	ldi	r21, 0x3F	; 63
    74ae:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    74b2:	88 23       	and	r24, r24
    74b4:	44 f4       	brge	.+16     	; 0x74c6 <Forward+0x50e6>
		__ticks = 1;
    74b6:	fe 01       	movw	r30, r28
    74b8:	eb 58       	subi	r30, 0x8B	; 139
    74ba:	ff 4f       	sbci	r31, 0xFF	; 255
    74bc:	81 e0       	ldi	r24, 0x01	; 1
    74be:	90 e0       	ldi	r25, 0x00	; 0
    74c0:	91 83       	std	Z+1, r25	; 0x01
    74c2:	80 83       	st	Z, r24
    74c4:	64 c0       	rjmp	.+200    	; 0x758e <Forward+0x51ae>
	else if (__tmp > 65535)
    74c6:	fe 01       	movw	r30, r28
    74c8:	e9 58       	subi	r30, 0x89	; 137
    74ca:	ff 4f       	sbci	r31, 0xFF	; 255
    74cc:	60 81       	ld	r22, Z
    74ce:	71 81       	ldd	r23, Z+1	; 0x01
    74d0:	82 81       	ldd	r24, Z+2	; 0x02
    74d2:	93 81       	ldd	r25, Z+3	; 0x03
    74d4:	20 e0       	ldi	r18, 0x00	; 0
    74d6:	3f ef       	ldi	r19, 0xFF	; 255
    74d8:	4f e7       	ldi	r20, 0x7F	; 127
    74da:	57 e4       	ldi	r21, 0x47	; 71
    74dc:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    74e0:	18 16       	cp	r1, r24
    74e2:	0c f0       	brlt	.+2      	; 0x74e6 <Forward+0x5106>
    74e4:	43 c0       	rjmp	.+134    	; 0x756c <Forward+0x518c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    74e6:	fe 01       	movw	r30, r28
    74e8:	e5 58       	subi	r30, 0x85	; 133
    74ea:	ff 4f       	sbci	r31, 0xFF	; 255
    74ec:	60 81       	ld	r22, Z
    74ee:	71 81       	ldd	r23, Z+1	; 0x01
    74f0:	82 81       	ldd	r24, Z+2	; 0x02
    74f2:	93 81       	ldd	r25, Z+3	; 0x03
    74f4:	20 e0       	ldi	r18, 0x00	; 0
    74f6:	30 e0       	ldi	r19, 0x00	; 0
    74f8:	40 e2       	ldi	r20, 0x20	; 32
    74fa:	51 e4       	ldi	r21, 0x41	; 65
    74fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7500:	dc 01       	movw	r26, r24
    7502:	cb 01       	movw	r24, r22
    7504:	8e 01       	movw	r16, r28
    7506:	0b 58       	subi	r16, 0x8B	; 139
    7508:	1f 4f       	sbci	r17, 0xFF	; 255
    750a:	bc 01       	movw	r22, r24
    750c:	cd 01       	movw	r24, r26
    750e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7512:	dc 01       	movw	r26, r24
    7514:	cb 01       	movw	r24, r22
    7516:	f8 01       	movw	r30, r16
    7518:	91 83       	std	Z+1, r25	; 0x01
    751a:	80 83       	st	Z, r24
    751c:	1f c0       	rjmp	.+62     	; 0x755c <Forward+0x517c>
    751e:	fe 01       	movw	r30, r28
    7520:	ed 58       	subi	r30, 0x8D	; 141
    7522:	ff 4f       	sbci	r31, 0xFF	; 255
    7524:	80 e9       	ldi	r24, 0x90	; 144
    7526:	91 e0       	ldi	r25, 0x01	; 1
    7528:	91 83       	std	Z+1, r25	; 0x01
    752a:	80 83       	st	Z, r24
    752c:	fe 01       	movw	r30, r28
    752e:	ed 58       	subi	r30, 0x8D	; 141
    7530:	ff 4f       	sbci	r31, 0xFF	; 255
    7532:	80 81       	ld	r24, Z
    7534:	91 81       	ldd	r25, Z+1	; 0x01
    7536:	01 97       	sbiw	r24, 0x01	; 1
    7538:	f1 f7       	brne	.-4      	; 0x7536 <Forward+0x5156>
    753a:	fe 01       	movw	r30, r28
    753c:	ed 58       	subi	r30, 0x8D	; 141
    753e:	ff 4f       	sbci	r31, 0xFF	; 255
    7540:	91 83       	std	Z+1, r25	; 0x01
    7542:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7544:	de 01       	movw	r26, r28
    7546:	ab 58       	subi	r26, 0x8B	; 139
    7548:	bf 4f       	sbci	r27, 0xFF	; 255
    754a:	fe 01       	movw	r30, r28
    754c:	eb 58       	subi	r30, 0x8B	; 139
    754e:	ff 4f       	sbci	r31, 0xFF	; 255
    7550:	80 81       	ld	r24, Z
    7552:	91 81       	ldd	r25, Z+1	; 0x01
    7554:	01 97       	sbiw	r24, 0x01	; 1
    7556:	11 96       	adiw	r26, 0x01	; 1
    7558:	9c 93       	st	X, r25
    755a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    755c:	fe 01       	movw	r30, r28
    755e:	eb 58       	subi	r30, 0x8B	; 139
    7560:	ff 4f       	sbci	r31, 0xFF	; 255
    7562:	80 81       	ld	r24, Z
    7564:	91 81       	ldd	r25, Z+1	; 0x01
    7566:	00 97       	sbiw	r24, 0x00	; 0
    7568:	d1 f6       	brne	.-76     	; 0x751e <Forward+0x513e>
    756a:	27 c0       	rjmp	.+78     	; 0x75ba <Forward+0x51da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    756c:	8e 01       	movw	r16, r28
    756e:	0b 58       	subi	r16, 0x8B	; 139
    7570:	1f 4f       	sbci	r17, 0xFF	; 255
    7572:	fe 01       	movw	r30, r28
    7574:	e9 58       	subi	r30, 0x89	; 137
    7576:	ff 4f       	sbci	r31, 0xFF	; 255
    7578:	60 81       	ld	r22, Z
    757a:	71 81       	ldd	r23, Z+1	; 0x01
    757c:	82 81       	ldd	r24, Z+2	; 0x02
    757e:	93 81       	ldd	r25, Z+3	; 0x03
    7580:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7584:	dc 01       	movw	r26, r24
    7586:	cb 01       	movw	r24, r22
    7588:	f8 01       	movw	r30, r16
    758a:	91 83       	std	Z+1, r25	; 0x01
    758c:	80 83       	st	Z, r24
    758e:	de 01       	movw	r26, r28
    7590:	af 58       	subi	r26, 0x8F	; 143
    7592:	bf 4f       	sbci	r27, 0xFF	; 255
    7594:	fe 01       	movw	r30, r28
    7596:	eb 58       	subi	r30, 0x8B	; 139
    7598:	ff 4f       	sbci	r31, 0xFF	; 255
    759a:	80 81       	ld	r24, Z
    759c:	91 81       	ldd	r25, Z+1	; 0x01
    759e:	8d 93       	st	X+, r24
    75a0:	9c 93       	st	X, r25
    75a2:	fe 01       	movw	r30, r28
    75a4:	ef 58       	subi	r30, 0x8F	; 143
    75a6:	ff 4f       	sbci	r31, 0xFF	; 255
    75a8:	80 81       	ld	r24, Z
    75aa:	91 81       	ldd	r25, Z+1	; 0x01
    75ac:	01 97       	sbiw	r24, 0x01	; 1
    75ae:	f1 f7       	brne	.-4      	; 0x75ac <Forward+0x51cc>
    75b0:	fe 01       	movw	r30, r28
    75b2:	ef 58       	subi	r30, 0x8F	; 143
    75b4:	ff 4f       	sbci	r31, 0xFF	; 255
    75b6:	91 83       	std	Z+1, r25	; 0x01
    75b8:	80 83       	st	Z, r24
	_delay_ms(500);

	/*leg 2*/
	angle5 = POSN2;
    75ba:	89 e0       	ldi	r24, 0x09	; 9
    75bc:	80 93 6d 00 	sts	0x006D, r24
	angle6 = POSN3;
    75c0:	8a e0       	ldi	r24, 0x0A	; 10
    75c2:	80 93 6e 00 	sts	0x006E, r24
    75c6:	fe 01       	movw	r30, r28
    75c8:	e3 59       	subi	r30, 0x93	; 147
    75ca:	ff 4f       	sbci	r31, 0xFF	; 255
    75cc:	80 e0       	ldi	r24, 0x00	; 0
    75ce:	90 e0       	ldi	r25, 0x00	; 0
    75d0:	aa ef       	ldi	r26, 0xFA	; 250
    75d2:	b3 e4       	ldi	r27, 0x43	; 67
    75d4:	80 83       	st	Z, r24
    75d6:	91 83       	std	Z+1, r25	; 0x01
    75d8:	a2 83       	std	Z+2, r26	; 0x02
    75da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    75dc:	8e 01       	movw	r16, r28
    75de:	07 59       	subi	r16, 0x97	; 151
    75e0:	1f 4f       	sbci	r17, 0xFF	; 255
    75e2:	fe 01       	movw	r30, r28
    75e4:	e3 59       	subi	r30, 0x93	; 147
    75e6:	ff 4f       	sbci	r31, 0xFF	; 255
    75e8:	60 81       	ld	r22, Z
    75ea:	71 81       	ldd	r23, Z+1	; 0x01
    75ec:	82 81       	ldd	r24, Z+2	; 0x02
    75ee:	93 81       	ldd	r25, Z+3	; 0x03
    75f0:	20 e0       	ldi	r18, 0x00	; 0
    75f2:	30 e0       	ldi	r19, 0x00	; 0
    75f4:	4a e7       	ldi	r20, 0x7A	; 122
    75f6:	55 e4       	ldi	r21, 0x45	; 69
    75f8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    75fc:	dc 01       	movw	r26, r24
    75fe:	cb 01       	movw	r24, r22
    7600:	f8 01       	movw	r30, r16
    7602:	80 83       	st	Z, r24
    7604:	91 83       	std	Z+1, r25	; 0x01
    7606:	a2 83       	std	Z+2, r26	; 0x02
    7608:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    760a:	fe 01       	movw	r30, r28
    760c:	e7 59       	subi	r30, 0x97	; 151
    760e:	ff 4f       	sbci	r31, 0xFF	; 255
    7610:	60 81       	ld	r22, Z
    7612:	71 81       	ldd	r23, Z+1	; 0x01
    7614:	82 81       	ldd	r24, Z+2	; 0x02
    7616:	93 81       	ldd	r25, Z+3	; 0x03
    7618:	20 e0       	ldi	r18, 0x00	; 0
    761a:	30 e0       	ldi	r19, 0x00	; 0
    761c:	40 e8       	ldi	r20, 0x80	; 128
    761e:	5f e3       	ldi	r21, 0x3F	; 63
    7620:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7624:	88 23       	and	r24, r24
    7626:	44 f4       	brge	.+16     	; 0x7638 <Forward+0x5258>
		__ticks = 1;
    7628:	fe 01       	movw	r30, r28
    762a:	e9 59       	subi	r30, 0x99	; 153
    762c:	ff 4f       	sbci	r31, 0xFF	; 255
    762e:	81 e0       	ldi	r24, 0x01	; 1
    7630:	90 e0       	ldi	r25, 0x00	; 0
    7632:	91 83       	std	Z+1, r25	; 0x01
    7634:	80 83       	st	Z, r24
    7636:	64 c0       	rjmp	.+200    	; 0x7700 <Forward+0x5320>
	else if (__tmp > 65535)
    7638:	fe 01       	movw	r30, r28
    763a:	e7 59       	subi	r30, 0x97	; 151
    763c:	ff 4f       	sbci	r31, 0xFF	; 255
    763e:	60 81       	ld	r22, Z
    7640:	71 81       	ldd	r23, Z+1	; 0x01
    7642:	82 81       	ldd	r24, Z+2	; 0x02
    7644:	93 81       	ldd	r25, Z+3	; 0x03
    7646:	20 e0       	ldi	r18, 0x00	; 0
    7648:	3f ef       	ldi	r19, 0xFF	; 255
    764a:	4f e7       	ldi	r20, 0x7F	; 127
    764c:	57 e4       	ldi	r21, 0x47	; 71
    764e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7652:	18 16       	cp	r1, r24
    7654:	0c f0       	brlt	.+2      	; 0x7658 <Forward+0x5278>
    7656:	43 c0       	rjmp	.+134    	; 0x76de <Forward+0x52fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7658:	fe 01       	movw	r30, r28
    765a:	e3 59       	subi	r30, 0x93	; 147
    765c:	ff 4f       	sbci	r31, 0xFF	; 255
    765e:	60 81       	ld	r22, Z
    7660:	71 81       	ldd	r23, Z+1	; 0x01
    7662:	82 81       	ldd	r24, Z+2	; 0x02
    7664:	93 81       	ldd	r25, Z+3	; 0x03
    7666:	20 e0       	ldi	r18, 0x00	; 0
    7668:	30 e0       	ldi	r19, 0x00	; 0
    766a:	40 e2       	ldi	r20, 0x20	; 32
    766c:	51 e4       	ldi	r21, 0x41	; 65
    766e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7672:	dc 01       	movw	r26, r24
    7674:	cb 01       	movw	r24, r22
    7676:	8e 01       	movw	r16, r28
    7678:	09 59       	subi	r16, 0x99	; 153
    767a:	1f 4f       	sbci	r17, 0xFF	; 255
    767c:	bc 01       	movw	r22, r24
    767e:	cd 01       	movw	r24, r26
    7680:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7684:	dc 01       	movw	r26, r24
    7686:	cb 01       	movw	r24, r22
    7688:	f8 01       	movw	r30, r16
    768a:	91 83       	std	Z+1, r25	; 0x01
    768c:	80 83       	st	Z, r24
    768e:	1f c0       	rjmp	.+62     	; 0x76ce <Forward+0x52ee>
    7690:	fe 01       	movw	r30, r28
    7692:	eb 59       	subi	r30, 0x9B	; 155
    7694:	ff 4f       	sbci	r31, 0xFF	; 255
    7696:	80 e9       	ldi	r24, 0x90	; 144
    7698:	91 e0       	ldi	r25, 0x01	; 1
    769a:	91 83       	std	Z+1, r25	; 0x01
    769c:	80 83       	st	Z, r24
    769e:	fe 01       	movw	r30, r28
    76a0:	eb 59       	subi	r30, 0x9B	; 155
    76a2:	ff 4f       	sbci	r31, 0xFF	; 255
    76a4:	80 81       	ld	r24, Z
    76a6:	91 81       	ldd	r25, Z+1	; 0x01
    76a8:	01 97       	sbiw	r24, 0x01	; 1
    76aa:	f1 f7       	brne	.-4      	; 0x76a8 <Forward+0x52c8>
    76ac:	fe 01       	movw	r30, r28
    76ae:	eb 59       	subi	r30, 0x9B	; 155
    76b0:	ff 4f       	sbci	r31, 0xFF	; 255
    76b2:	91 83       	std	Z+1, r25	; 0x01
    76b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    76b6:	de 01       	movw	r26, r28
    76b8:	a9 59       	subi	r26, 0x99	; 153
    76ba:	bf 4f       	sbci	r27, 0xFF	; 255
    76bc:	fe 01       	movw	r30, r28
    76be:	e9 59       	subi	r30, 0x99	; 153
    76c0:	ff 4f       	sbci	r31, 0xFF	; 255
    76c2:	80 81       	ld	r24, Z
    76c4:	91 81       	ldd	r25, Z+1	; 0x01
    76c6:	01 97       	sbiw	r24, 0x01	; 1
    76c8:	11 96       	adiw	r26, 0x01	; 1
    76ca:	9c 93       	st	X, r25
    76cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    76ce:	fe 01       	movw	r30, r28
    76d0:	e9 59       	subi	r30, 0x99	; 153
    76d2:	ff 4f       	sbci	r31, 0xFF	; 255
    76d4:	80 81       	ld	r24, Z
    76d6:	91 81       	ldd	r25, Z+1	; 0x01
    76d8:	00 97       	sbiw	r24, 0x00	; 0
    76da:	d1 f6       	brne	.-76     	; 0x7690 <Forward+0x52b0>
    76dc:	27 c0       	rjmp	.+78     	; 0x772c <Forward+0x534c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    76de:	8e 01       	movw	r16, r28
    76e0:	09 59       	subi	r16, 0x99	; 153
    76e2:	1f 4f       	sbci	r17, 0xFF	; 255
    76e4:	fe 01       	movw	r30, r28
    76e6:	e7 59       	subi	r30, 0x97	; 151
    76e8:	ff 4f       	sbci	r31, 0xFF	; 255
    76ea:	60 81       	ld	r22, Z
    76ec:	71 81       	ldd	r23, Z+1	; 0x01
    76ee:	82 81       	ldd	r24, Z+2	; 0x02
    76f0:	93 81       	ldd	r25, Z+3	; 0x03
    76f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    76f6:	dc 01       	movw	r26, r24
    76f8:	cb 01       	movw	r24, r22
    76fa:	f8 01       	movw	r30, r16
    76fc:	91 83       	std	Z+1, r25	; 0x01
    76fe:	80 83       	st	Z, r24
    7700:	de 01       	movw	r26, r28
    7702:	ad 59       	subi	r26, 0x9D	; 157
    7704:	bf 4f       	sbci	r27, 0xFF	; 255
    7706:	fe 01       	movw	r30, r28
    7708:	e9 59       	subi	r30, 0x99	; 153
    770a:	ff 4f       	sbci	r31, 0xFF	; 255
    770c:	80 81       	ld	r24, Z
    770e:	91 81       	ldd	r25, Z+1	; 0x01
    7710:	8d 93       	st	X+, r24
    7712:	9c 93       	st	X, r25
    7714:	fe 01       	movw	r30, r28
    7716:	ed 59       	subi	r30, 0x9D	; 157
    7718:	ff 4f       	sbci	r31, 0xFF	; 255
    771a:	80 81       	ld	r24, Z
    771c:	91 81       	ldd	r25, Z+1	; 0x01
    771e:	01 97       	sbiw	r24, 0x01	; 1
    7720:	f1 f7       	brne	.-4      	; 0x771e <Forward+0x533e>
    7722:	fe 01       	movw	r30, r28
    7724:	ed 59       	subi	r30, 0x9D	; 157
    7726:	ff 4f       	sbci	r31, 0xFF	; 255
    7728:	91 83       	std	Z+1, r25	; 0x01
    772a:	80 83       	st	Z, r24
	_delay_ms(500);
	angle4 = POS7N;
    772c:	8e e0       	ldi	r24, 0x0E	; 14
    772e:	80 93 6c 00 	sts	0x006C, r24
    7732:	fe 01       	movw	r30, r28
    7734:	e1 5a       	subi	r30, 0xA1	; 161
    7736:	ff 4f       	sbci	r31, 0xFF	; 255
    7738:	80 e0       	ldi	r24, 0x00	; 0
    773a:	90 e0       	ldi	r25, 0x00	; 0
    773c:	aa ef       	ldi	r26, 0xFA	; 250
    773e:	b3 e4       	ldi	r27, 0x43	; 67
    7740:	80 83       	st	Z, r24
    7742:	91 83       	std	Z+1, r25	; 0x01
    7744:	a2 83       	std	Z+2, r26	; 0x02
    7746:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7748:	8e 01       	movw	r16, r28
    774a:	05 5a       	subi	r16, 0xA5	; 165
    774c:	1f 4f       	sbci	r17, 0xFF	; 255
    774e:	fe 01       	movw	r30, r28
    7750:	e1 5a       	subi	r30, 0xA1	; 161
    7752:	ff 4f       	sbci	r31, 0xFF	; 255
    7754:	60 81       	ld	r22, Z
    7756:	71 81       	ldd	r23, Z+1	; 0x01
    7758:	82 81       	ldd	r24, Z+2	; 0x02
    775a:	93 81       	ldd	r25, Z+3	; 0x03
    775c:	20 e0       	ldi	r18, 0x00	; 0
    775e:	30 e0       	ldi	r19, 0x00	; 0
    7760:	4a e7       	ldi	r20, 0x7A	; 122
    7762:	55 e4       	ldi	r21, 0x45	; 69
    7764:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7768:	dc 01       	movw	r26, r24
    776a:	cb 01       	movw	r24, r22
    776c:	f8 01       	movw	r30, r16
    776e:	80 83       	st	Z, r24
    7770:	91 83       	std	Z+1, r25	; 0x01
    7772:	a2 83       	std	Z+2, r26	; 0x02
    7774:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7776:	fe 01       	movw	r30, r28
    7778:	e5 5a       	subi	r30, 0xA5	; 165
    777a:	ff 4f       	sbci	r31, 0xFF	; 255
    777c:	60 81       	ld	r22, Z
    777e:	71 81       	ldd	r23, Z+1	; 0x01
    7780:	82 81       	ldd	r24, Z+2	; 0x02
    7782:	93 81       	ldd	r25, Z+3	; 0x03
    7784:	20 e0       	ldi	r18, 0x00	; 0
    7786:	30 e0       	ldi	r19, 0x00	; 0
    7788:	40 e8       	ldi	r20, 0x80	; 128
    778a:	5f e3       	ldi	r21, 0x3F	; 63
    778c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7790:	88 23       	and	r24, r24
    7792:	44 f4       	brge	.+16     	; 0x77a4 <Forward+0x53c4>
		__ticks = 1;
    7794:	fe 01       	movw	r30, r28
    7796:	e7 5a       	subi	r30, 0xA7	; 167
    7798:	ff 4f       	sbci	r31, 0xFF	; 255
    779a:	81 e0       	ldi	r24, 0x01	; 1
    779c:	90 e0       	ldi	r25, 0x00	; 0
    779e:	91 83       	std	Z+1, r25	; 0x01
    77a0:	80 83       	st	Z, r24
    77a2:	64 c0       	rjmp	.+200    	; 0x786c <Forward+0x548c>
	else if (__tmp > 65535)
    77a4:	fe 01       	movw	r30, r28
    77a6:	e5 5a       	subi	r30, 0xA5	; 165
    77a8:	ff 4f       	sbci	r31, 0xFF	; 255
    77aa:	60 81       	ld	r22, Z
    77ac:	71 81       	ldd	r23, Z+1	; 0x01
    77ae:	82 81       	ldd	r24, Z+2	; 0x02
    77b0:	93 81       	ldd	r25, Z+3	; 0x03
    77b2:	20 e0       	ldi	r18, 0x00	; 0
    77b4:	3f ef       	ldi	r19, 0xFF	; 255
    77b6:	4f e7       	ldi	r20, 0x7F	; 127
    77b8:	57 e4       	ldi	r21, 0x47	; 71
    77ba:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    77be:	18 16       	cp	r1, r24
    77c0:	0c f0       	brlt	.+2      	; 0x77c4 <Forward+0x53e4>
    77c2:	43 c0       	rjmp	.+134    	; 0x784a <Forward+0x546a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    77c4:	fe 01       	movw	r30, r28
    77c6:	e1 5a       	subi	r30, 0xA1	; 161
    77c8:	ff 4f       	sbci	r31, 0xFF	; 255
    77ca:	60 81       	ld	r22, Z
    77cc:	71 81       	ldd	r23, Z+1	; 0x01
    77ce:	82 81       	ldd	r24, Z+2	; 0x02
    77d0:	93 81       	ldd	r25, Z+3	; 0x03
    77d2:	20 e0       	ldi	r18, 0x00	; 0
    77d4:	30 e0       	ldi	r19, 0x00	; 0
    77d6:	40 e2       	ldi	r20, 0x20	; 32
    77d8:	51 e4       	ldi	r21, 0x41	; 65
    77da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    77de:	dc 01       	movw	r26, r24
    77e0:	cb 01       	movw	r24, r22
    77e2:	8e 01       	movw	r16, r28
    77e4:	07 5a       	subi	r16, 0xA7	; 167
    77e6:	1f 4f       	sbci	r17, 0xFF	; 255
    77e8:	bc 01       	movw	r22, r24
    77ea:	cd 01       	movw	r24, r26
    77ec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    77f0:	dc 01       	movw	r26, r24
    77f2:	cb 01       	movw	r24, r22
    77f4:	f8 01       	movw	r30, r16
    77f6:	91 83       	std	Z+1, r25	; 0x01
    77f8:	80 83       	st	Z, r24
    77fa:	1f c0       	rjmp	.+62     	; 0x783a <Forward+0x545a>
    77fc:	fe 01       	movw	r30, r28
    77fe:	e9 5a       	subi	r30, 0xA9	; 169
    7800:	ff 4f       	sbci	r31, 0xFF	; 255
    7802:	80 e9       	ldi	r24, 0x90	; 144
    7804:	91 e0       	ldi	r25, 0x01	; 1
    7806:	91 83       	std	Z+1, r25	; 0x01
    7808:	80 83       	st	Z, r24
    780a:	fe 01       	movw	r30, r28
    780c:	e9 5a       	subi	r30, 0xA9	; 169
    780e:	ff 4f       	sbci	r31, 0xFF	; 255
    7810:	80 81       	ld	r24, Z
    7812:	91 81       	ldd	r25, Z+1	; 0x01
    7814:	01 97       	sbiw	r24, 0x01	; 1
    7816:	f1 f7       	brne	.-4      	; 0x7814 <Forward+0x5434>
    7818:	fe 01       	movw	r30, r28
    781a:	e9 5a       	subi	r30, 0xA9	; 169
    781c:	ff 4f       	sbci	r31, 0xFF	; 255
    781e:	91 83       	std	Z+1, r25	; 0x01
    7820:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7822:	de 01       	movw	r26, r28
    7824:	a7 5a       	subi	r26, 0xA7	; 167
    7826:	bf 4f       	sbci	r27, 0xFF	; 255
    7828:	fe 01       	movw	r30, r28
    782a:	e7 5a       	subi	r30, 0xA7	; 167
    782c:	ff 4f       	sbci	r31, 0xFF	; 255
    782e:	80 81       	ld	r24, Z
    7830:	91 81       	ldd	r25, Z+1	; 0x01
    7832:	01 97       	sbiw	r24, 0x01	; 1
    7834:	11 96       	adiw	r26, 0x01	; 1
    7836:	9c 93       	st	X, r25
    7838:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    783a:	fe 01       	movw	r30, r28
    783c:	e7 5a       	subi	r30, 0xA7	; 167
    783e:	ff 4f       	sbci	r31, 0xFF	; 255
    7840:	80 81       	ld	r24, Z
    7842:	91 81       	ldd	r25, Z+1	; 0x01
    7844:	00 97       	sbiw	r24, 0x00	; 0
    7846:	d1 f6       	brne	.-76     	; 0x77fc <Forward+0x541c>
    7848:	27 c0       	rjmp	.+78     	; 0x7898 <Forward+0x54b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    784a:	8e 01       	movw	r16, r28
    784c:	07 5a       	subi	r16, 0xA7	; 167
    784e:	1f 4f       	sbci	r17, 0xFF	; 255
    7850:	fe 01       	movw	r30, r28
    7852:	e5 5a       	subi	r30, 0xA5	; 165
    7854:	ff 4f       	sbci	r31, 0xFF	; 255
    7856:	60 81       	ld	r22, Z
    7858:	71 81       	ldd	r23, Z+1	; 0x01
    785a:	82 81       	ldd	r24, Z+2	; 0x02
    785c:	93 81       	ldd	r25, Z+3	; 0x03
    785e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7862:	dc 01       	movw	r26, r24
    7864:	cb 01       	movw	r24, r22
    7866:	f8 01       	movw	r30, r16
    7868:	91 83       	std	Z+1, r25	; 0x01
    786a:	80 83       	st	Z, r24
    786c:	de 01       	movw	r26, r28
    786e:	ab 5a       	subi	r26, 0xAB	; 171
    7870:	bf 4f       	sbci	r27, 0xFF	; 255
    7872:	fe 01       	movw	r30, r28
    7874:	e7 5a       	subi	r30, 0xA7	; 167
    7876:	ff 4f       	sbci	r31, 0xFF	; 255
    7878:	80 81       	ld	r24, Z
    787a:	91 81       	ldd	r25, Z+1	; 0x01
    787c:	8d 93       	st	X+, r24
    787e:	9c 93       	st	X, r25
    7880:	fe 01       	movw	r30, r28
    7882:	eb 5a       	subi	r30, 0xAB	; 171
    7884:	ff 4f       	sbci	r31, 0xFF	; 255
    7886:	80 81       	ld	r24, Z
    7888:	91 81       	ldd	r25, Z+1	; 0x01
    788a:	01 97       	sbiw	r24, 0x01	; 1
    788c:	f1 f7       	brne	.-4      	; 0x788a <Forward+0x54aa>
    788e:	fe 01       	movw	r30, r28
    7890:	eb 5a       	subi	r30, 0xAB	; 171
    7892:	ff 4f       	sbci	r31, 0xFF	; 255
    7894:	91 83       	std	Z+1, r25	; 0x01
    7896:	80 83       	st	Z, r24
	_delay_ms(500);
	angle6 = POS8N;
    7898:	8f e0       	ldi	r24, 0x0F	; 15
    789a:	80 93 6e 00 	sts	0x006E, r24
	angle5 = NaturalPos;
    789e:	8d e0       	ldi	r24, 0x0D	; 13
    78a0:	80 93 6d 00 	sts	0x006D, r24
    78a4:	fe 01       	movw	r30, r28
    78a6:	ef 5a       	subi	r30, 0xAF	; 175
    78a8:	ff 4f       	sbci	r31, 0xFF	; 255
    78aa:	80 e0       	ldi	r24, 0x00	; 0
    78ac:	90 e0       	ldi	r25, 0x00	; 0
    78ae:	aa ef       	ldi	r26, 0xFA	; 250
    78b0:	b3 e4       	ldi	r27, 0x43	; 67
    78b2:	80 83       	st	Z, r24
    78b4:	91 83       	std	Z+1, r25	; 0x01
    78b6:	a2 83       	std	Z+2, r26	; 0x02
    78b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    78ba:	8e 01       	movw	r16, r28
    78bc:	03 5b       	subi	r16, 0xB3	; 179
    78be:	1f 4f       	sbci	r17, 0xFF	; 255
    78c0:	fe 01       	movw	r30, r28
    78c2:	ef 5a       	subi	r30, 0xAF	; 175
    78c4:	ff 4f       	sbci	r31, 0xFF	; 255
    78c6:	60 81       	ld	r22, Z
    78c8:	71 81       	ldd	r23, Z+1	; 0x01
    78ca:	82 81       	ldd	r24, Z+2	; 0x02
    78cc:	93 81       	ldd	r25, Z+3	; 0x03
    78ce:	20 e0       	ldi	r18, 0x00	; 0
    78d0:	30 e0       	ldi	r19, 0x00	; 0
    78d2:	4a e7       	ldi	r20, 0x7A	; 122
    78d4:	55 e4       	ldi	r21, 0x45	; 69
    78d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    78da:	dc 01       	movw	r26, r24
    78dc:	cb 01       	movw	r24, r22
    78de:	f8 01       	movw	r30, r16
    78e0:	80 83       	st	Z, r24
    78e2:	91 83       	std	Z+1, r25	; 0x01
    78e4:	a2 83       	std	Z+2, r26	; 0x02
    78e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    78e8:	fe 01       	movw	r30, r28
    78ea:	e3 5b       	subi	r30, 0xB3	; 179
    78ec:	ff 4f       	sbci	r31, 0xFF	; 255
    78ee:	60 81       	ld	r22, Z
    78f0:	71 81       	ldd	r23, Z+1	; 0x01
    78f2:	82 81       	ldd	r24, Z+2	; 0x02
    78f4:	93 81       	ldd	r25, Z+3	; 0x03
    78f6:	20 e0       	ldi	r18, 0x00	; 0
    78f8:	30 e0       	ldi	r19, 0x00	; 0
    78fa:	40 e8       	ldi	r20, 0x80	; 128
    78fc:	5f e3       	ldi	r21, 0x3F	; 63
    78fe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7902:	88 23       	and	r24, r24
    7904:	44 f4       	brge	.+16     	; 0x7916 <Forward+0x5536>
		__ticks = 1;
    7906:	fe 01       	movw	r30, r28
    7908:	e5 5b       	subi	r30, 0xB5	; 181
    790a:	ff 4f       	sbci	r31, 0xFF	; 255
    790c:	81 e0       	ldi	r24, 0x01	; 1
    790e:	90 e0       	ldi	r25, 0x00	; 0
    7910:	91 83       	std	Z+1, r25	; 0x01
    7912:	80 83       	st	Z, r24
    7914:	64 c0       	rjmp	.+200    	; 0x79de <Forward+0x55fe>
	else if (__tmp > 65535)
    7916:	fe 01       	movw	r30, r28
    7918:	e3 5b       	subi	r30, 0xB3	; 179
    791a:	ff 4f       	sbci	r31, 0xFF	; 255
    791c:	60 81       	ld	r22, Z
    791e:	71 81       	ldd	r23, Z+1	; 0x01
    7920:	82 81       	ldd	r24, Z+2	; 0x02
    7922:	93 81       	ldd	r25, Z+3	; 0x03
    7924:	20 e0       	ldi	r18, 0x00	; 0
    7926:	3f ef       	ldi	r19, 0xFF	; 255
    7928:	4f e7       	ldi	r20, 0x7F	; 127
    792a:	57 e4       	ldi	r21, 0x47	; 71
    792c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7930:	18 16       	cp	r1, r24
    7932:	0c f0       	brlt	.+2      	; 0x7936 <Forward+0x5556>
    7934:	43 c0       	rjmp	.+134    	; 0x79bc <Forward+0x55dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7936:	fe 01       	movw	r30, r28
    7938:	ef 5a       	subi	r30, 0xAF	; 175
    793a:	ff 4f       	sbci	r31, 0xFF	; 255
    793c:	60 81       	ld	r22, Z
    793e:	71 81       	ldd	r23, Z+1	; 0x01
    7940:	82 81       	ldd	r24, Z+2	; 0x02
    7942:	93 81       	ldd	r25, Z+3	; 0x03
    7944:	20 e0       	ldi	r18, 0x00	; 0
    7946:	30 e0       	ldi	r19, 0x00	; 0
    7948:	40 e2       	ldi	r20, 0x20	; 32
    794a:	51 e4       	ldi	r21, 0x41	; 65
    794c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7950:	dc 01       	movw	r26, r24
    7952:	cb 01       	movw	r24, r22
    7954:	8e 01       	movw	r16, r28
    7956:	05 5b       	subi	r16, 0xB5	; 181
    7958:	1f 4f       	sbci	r17, 0xFF	; 255
    795a:	bc 01       	movw	r22, r24
    795c:	cd 01       	movw	r24, r26
    795e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7962:	dc 01       	movw	r26, r24
    7964:	cb 01       	movw	r24, r22
    7966:	f8 01       	movw	r30, r16
    7968:	91 83       	std	Z+1, r25	; 0x01
    796a:	80 83       	st	Z, r24
    796c:	1f c0       	rjmp	.+62     	; 0x79ac <Forward+0x55cc>
    796e:	fe 01       	movw	r30, r28
    7970:	e7 5b       	subi	r30, 0xB7	; 183
    7972:	ff 4f       	sbci	r31, 0xFF	; 255
    7974:	80 e9       	ldi	r24, 0x90	; 144
    7976:	91 e0       	ldi	r25, 0x01	; 1
    7978:	91 83       	std	Z+1, r25	; 0x01
    797a:	80 83       	st	Z, r24
    797c:	fe 01       	movw	r30, r28
    797e:	e7 5b       	subi	r30, 0xB7	; 183
    7980:	ff 4f       	sbci	r31, 0xFF	; 255
    7982:	80 81       	ld	r24, Z
    7984:	91 81       	ldd	r25, Z+1	; 0x01
    7986:	01 97       	sbiw	r24, 0x01	; 1
    7988:	f1 f7       	brne	.-4      	; 0x7986 <Forward+0x55a6>
    798a:	fe 01       	movw	r30, r28
    798c:	e7 5b       	subi	r30, 0xB7	; 183
    798e:	ff 4f       	sbci	r31, 0xFF	; 255
    7990:	91 83       	std	Z+1, r25	; 0x01
    7992:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7994:	de 01       	movw	r26, r28
    7996:	a5 5b       	subi	r26, 0xB5	; 181
    7998:	bf 4f       	sbci	r27, 0xFF	; 255
    799a:	fe 01       	movw	r30, r28
    799c:	e5 5b       	subi	r30, 0xB5	; 181
    799e:	ff 4f       	sbci	r31, 0xFF	; 255
    79a0:	80 81       	ld	r24, Z
    79a2:	91 81       	ldd	r25, Z+1	; 0x01
    79a4:	01 97       	sbiw	r24, 0x01	; 1
    79a6:	11 96       	adiw	r26, 0x01	; 1
    79a8:	9c 93       	st	X, r25
    79aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    79ac:	fe 01       	movw	r30, r28
    79ae:	e5 5b       	subi	r30, 0xB5	; 181
    79b0:	ff 4f       	sbci	r31, 0xFF	; 255
    79b2:	80 81       	ld	r24, Z
    79b4:	91 81       	ldd	r25, Z+1	; 0x01
    79b6:	00 97       	sbiw	r24, 0x00	; 0
    79b8:	d1 f6       	brne	.-76     	; 0x796e <Forward+0x558e>
    79ba:	27 c0       	rjmp	.+78     	; 0x7a0a <Forward+0x562a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    79bc:	8e 01       	movw	r16, r28
    79be:	05 5b       	subi	r16, 0xB5	; 181
    79c0:	1f 4f       	sbci	r17, 0xFF	; 255
    79c2:	fe 01       	movw	r30, r28
    79c4:	e3 5b       	subi	r30, 0xB3	; 179
    79c6:	ff 4f       	sbci	r31, 0xFF	; 255
    79c8:	60 81       	ld	r22, Z
    79ca:	71 81       	ldd	r23, Z+1	; 0x01
    79cc:	82 81       	ldd	r24, Z+2	; 0x02
    79ce:	93 81       	ldd	r25, Z+3	; 0x03
    79d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    79d4:	dc 01       	movw	r26, r24
    79d6:	cb 01       	movw	r24, r22
    79d8:	f8 01       	movw	r30, r16
    79da:	91 83       	std	Z+1, r25	; 0x01
    79dc:	80 83       	st	Z, r24
    79de:	de 01       	movw	r26, r28
    79e0:	a9 5b       	subi	r26, 0xB9	; 185
    79e2:	bf 4f       	sbci	r27, 0xFF	; 255
    79e4:	fe 01       	movw	r30, r28
    79e6:	e5 5b       	subi	r30, 0xB5	; 181
    79e8:	ff 4f       	sbci	r31, 0xFF	; 255
    79ea:	80 81       	ld	r24, Z
    79ec:	91 81       	ldd	r25, Z+1	; 0x01
    79ee:	8d 93       	st	X+, r24
    79f0:	9c 93       	st	X, r25
    79f2:	fe 01       	movw	r30, r28
    79f4:	e9 5b       	subi	r30, 0xB9	; 185
    79f6:	ff 4f       	sbci	r31, 0xFF	; 255
    79f8:	80 81       	ld	r24, Z
    79fa:	91 81       	ldd	r25, Z+1	; 0x01
    79fc:	01 97       	sbiw	r24, 0x01	; 1
    79fe:	f1 f7       	brne	.-4      	; 0x79fc <Forward+0x561c>
    7a00:	fe 01       	movw	r30, r28
    7a02:	e9 5b       	subi	r30, 0xB9	; 185
    7a04:	ff 4f       	sbci	r31, 0xFF	; 255
    7a06:	91 83       	std	Z+1, r25	; 0x01
    7a08:	80 83       	st	Z, r24
	_delay_ms(500);

	/*leg 1 and 4*/
	angle1 = POSN5;
    7a0a:	8c e0       	ldi	r24, 0x0C	; 12
    7a0c:	80 93 69 00 	sts	0x0069, r24
    7a10:	fe 01       	movw	r30, r28
    7a12:	ed 5b       	subi	r30, 0xBD	; 189
    7a14:	ff 4f       	sbci	r31, 0xFF	; 255
    7a16:	80 e0       	ldi	r24, 0x00	; 0
    7a18:	90 e0       	ldi	r25, 0x00	; 0
    7a1a:	ac e8       	ldi	r26, 0x8C	; 140
    7a1c:	b2 e4       	ldi	r27, 0x42	; 66
    7a1e:	80 83       	st	Z, r24
    7a20:	91 83       	std	Z+1, r25	; 0x01
    7a22:	a2 83       	std	Z+2, r26	; 0x02
    7a24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7a26:	8e 01       	movw	r16, r28
    7a28:	01 5c       	subi	r16, 0xC1	; 193
    7a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    7a2c:	fe 01       	movw	r30, r28
    7a2e:	ed 5b       	subi	r30, 0xBD	; 189
    7a30:	ff 4f       	sbci	r31, 0xFF	; 255
    7a32:	60 81       	ld	r22, Z
    7a34:	71 81       	ldd	r23, Z+1	; 0x01
    7a36:	82 81       	ldd	r24, Z+2	; 0x02
    7a38:	93 81       	ldd	r25, Z+3	; 0x03
    7a3a:	20 e0       	ldi	r18, 0x00	; 0
    7a3c:	30 e0       	ldi	r19, 0x00	; 0
    7a3e:	4a e7       	ldi	r20, 0x7A	; 122
    7a40:	55 e4       	ldi	r21, 0x45	; 69
    7a42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7a46:	dc 01       	movw	r26, r24
    7a48:	cb 01       	movw	r24, r22
    7a4a:	f8 01       	movw	r30, r16
    7a4c:	80 83       	st	Z, r24
    7a4e:	91 83       	std	Z+1, r25	; 0x01
    7a50:	a2 83       	std	Z+2, r26	; 0x02
    7a52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    7a54:	fe 01       	movw	r30, r28
    7a56:	ff 96       	adiw	r30, 0x3f	; 63
    7a58:	60 81       	ld	r22, Z
    7a5a:	71 81       	ldd	r23, Z+1	; 0x01
    7a5c:	82 81       	ldd	r24, Z+2	; 0x02
    7a5e:	93 81       	ldd	r25, Z+3	; 0x03
    7a60:	20 e0       	ldi	r18, 0x00	; 0
    7a62:	30 e0       	ldi	r19, 0x00	; 0
    7a64:	40 e8       	ldi	r20, 0x80	; 128
    7a66:	5f e3       	ldi	r21, 0x3F	; 63
    7a68:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7a6c:	88 23       	and	r24, r24
    7a6e:	2c f4       	brge	.+10     	; 0x7a7a <Forward+0x569a>
		__ticks = 1;
    7a70:	81 e0       	ldi	r24, 0x01	; 1
    7a72:	90 e0       	ldi	r25, 0x00	; 0
    7a74:	9e af       	std	Y+62, r25	; 0x3e
    7a76:	8d af       	std	Y+61, r24	; 0x3d
    7a78:	46 c0       	rjmp	.+140    	; 0x7b06 <Forward+0x5726>
	else if (__tmp > 65535)
    7a7a:	fe 01       	movw	r30, r28
    7a7c:	ff 96       	adiw	r30, 0x3f	; 63
    7a7e:	60 81       	ld	r22, Z
    7a80:	71 81       	ldd	r23, Z+1	; 0x01
    7a82:	82 81       	ldd	r24, Z+2	; 0x02
    7a84:	93 81       	ldd	r25, Z+3	; 0x03
    7a86:	20 e0       	ldi	r18, 0x00	; 0
    7a88:	3f ef       	ldi	r19, 0xFF	; 255
    7a8a:	4f e7       	ldi	r20, 0x7F	; 127
    7a8c:	57 e4       	ldi	r21, 0x47	; 71
    7a8e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7a92:	18 16       	cp	r1, r24
    7a94:	64 f5       	brge	.+88     	; 0x7aee <Forward+0x570e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7a96:	fe 01       	movw	r30, r28
    7a98:	ed 5b       	subi	r30, 0xBD	; 189
    7a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    7a9c:	60 81       	ld	r22, Z
    7a9e:	71 81       	ldd	r23, Z+1	; 0x01
    7aa0:	82 81       	ldd	r24, Z+2	; 0x02
    7aa2:	93 81       	ldd	r25, Z+3	; 0x03
    7aa4:	20 e0       	ldi	r18, 0x00	; 0
    7aa6:	30 e0       	ldi	r19, 0x00	; 0
    7aa8:	40 e2       	ldi	r20, 0x20	; 32
    7aaa:	51 e4       	ldi	r21, 0x41	; 65
    7aac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7ab0:	dc 01       	movw	r26, r24
    7ab2:	cb 01       	movw	r24, r22
    7ab4:	bc 01       	movw	r22, r24
    7ab6:	cd 01       	movw	r24, r26
    7ab8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7abc:	dc 01       	movw	r26, r24
    7abe:	cb 01       	movw	r24, r22
    7ac0:	9e af       	std	Y+62, r25	; 0x3e
    7ac2:	8d af       	std	Y+61, r24	; 0x3d
    7ac4:	0f c0       	rjmp	.+30     	; 0x7ae4 <Forward+0x5704>
    7ac6:	80 e9       	ldi	r24, 0x90	; 144
    7ac8:	91 e0       	ldi	r25, 0x01	; 1
    7aca:	9c af       	std	Y+60, r25	; 0x3c
    7acc:	8b af       	std	Y+59, r24	; 0x3b
    7ace:	8b ad       	ldd	r24, Y+59	; 0x3b
    7ad0:	9c ad       	ldd	r25, Y+60	; 0x3c
    7ad2:	01 97       	sbiw	r24, 0x01	; 1
    7ad4:	f1 f7       	brne	.-4      	; 0x7ad2 <Forward+0x56f2>
    7ad6:	9c af       	std	Y+60, r25	; 0x3c
    7ad8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7ada:	8d ad       	ldd	r24, Y+61	; 0x3d
    7adc:	9e ad       	ldd	r25, Y+62	; 0x3e
    7ade:	01 97       	sbiw	r24, 0x01	; 1
    7ae0:	9e af       	std	Y+62, r25	; 0x3e
    7ae2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7ae4:	8d ad       	ldd	r24, Y+61	; 0x3d
    7ae6:	9e ad       	ldd	r25, Y+62	; 0x3e
    7ae8:	00 97       	sbiw	r24, 0x00	; 0
    7aea:	69 f7       	brne	.-38     	; 0x7ac6 <Forward+0x56e6>
    7aec:	16 c0       	rjmp	.+44     	; 0x7b1a <Forward+0x573a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7aee:	fe 01       	movw	r30, r28
    7af0:	ff 96       	adiw	r30, 0x3f	; 63
    7af2:	60 81       	ld	r22, Z
    7af4:	71 81       	ldd	r23, Z+1	; 0x01
    7af6:	82 81       	ldd	r24, Z+2	; 0x02
    7af8:	93 81       	ldd	r25, Z+3	; 0x03
    7afa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7afe:	dc 01       	movw	r26, r24
    7b00:	cb 01       	movw	r24, r22
    7b02:	9e af       	std	Y+62, r25	; 0x3e
    7b04:	8d af       	std	Y+61, r24	; 0x3d
    7b06:	8d ad       	ldd	r24, Y+61	; 0x3d
    7b08:	9e ad       	ldd	r25, Y+62	; 0x3e
    7b0a:	9a af       	std	Y+58, r25	; 0x3a
    7b0c:	89 af       	std	Y+57, r24	; 0x39
    7b0e:	89 ad       	ldd	r24, Y+57	; 0x39
    7b10:	9a ad       	ldd	r25, Y+58	; 0x3a
    7b12:	01 97       	sbiw	r24, 0x01	; 1
    7b14:	f1 f7       	brne	.-4      	; 0x7b12 <Forward+0x5732>
    7b16:	9a af       	std	Y+58, r25	; 0x3a
    7b18:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(70);
	angle1 = POSN4;
    7b1a:	8b e0       	ldi	r24, 0x0B	; 11
    7b1c:	80 93 69 00 	sts	0x0069, r24
    7b20:	80 e0       	ldi	r24, 0x00	; 0
    7b22:	90 e0       	ldi	r25, 0x00	; 0
    7b24:	ac e8       	ldi	r26, 0x8C	; 140
    7b26:	b2 e4       	ldi	r27, 0x42	; 66
    7b28:	8d ab       	std	Y+53, r24	; 0x35
    7b2a:	9e ab       	std	Y+54, r25	; 0x36
    7b2c:	af ab       	std	Y+55, r26	; 0x37
    7b2e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7b30:	6d a9       	ldd	r22, Y+53	; 0x35
    7b32:	7e a9       	ldd	r23, Y+54	; 0x36
    7b34:	8f a9       	ldd	r24, Y+55	; 0x37
    7b36:	98 ad       	ldd	r25, Y+56	; 0x38
    7b38:	20 e0       	ldi	r18, 0x00	; 0
    7b3a:	30 e0       	ldi	r19, 0x00	; 0
    7b3c:	4a e7       	ldi	r20, 0x7A	; 122
    7b3e:	55 e4       	ldi	r21, 0x45	; 69
    7b40:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7b44:	dc 01       	movw	r26, r24
    7b46:	cb 01       	movw	r24, r22
    7b48:	89 ab       	std	Y+49, r24	; 0x31
    7b4a:	9a ab       	std	Y+50, r25	; 0x32
    7b4c:	ab ab       	std	Y+51, r26	; 0x33
    7b4e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    7b50:	69 a9       	ldd	r22, Y+49	; 0x31
    7b52:	7a a9       	ldd	r23, Y+50	; 0x32
    7b54:	8b a9       	ldd	r24, Y+51	; 0x33
    7b56:	9c a9       	ldd	r25, Y+52	; 0x34
    7b58:	20 e0       	ldi	r18, 0x00	; 0
    7b5a:	30 e0       	ldi	r19, 0x00	; 0
    7b5c:	40 e8       	ldi	r20, 0x80	; 128
    7b5e:	5f e3       	ldi	r21, 0x3F	; 63
    7b60:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7b64:	88 23       	and	r24, r24
    7b66:	2c f4       	brge	.+10     	; 0x7b72 <Forward+0x5792>
		__ticks = 1;
    7b68:	81 e0       	ldi	r24, 0x01	; 1
    7b6a:	90 e0       	ldi	r25, 0x00	; 0
    7b6c:	98 ab       	std	Y+48, r25	; 0x30
    7b6e:	8f a7       	std	Y+47, r24	; 0x2f
    7b70:	3f c0       	rjmp	.+126    	; 0x7bf0 <Forward+0x5810>
	else if (__tmp > 65535)
    7b72:	69 a9       	ldd	r22, Y+49	; 0x31
    7b74:	7a a9       	ldd	r23, Y+50	; 0x32
    7b76:	8b a9       	ldd	r24, Y+51	; 0x33
    7b78:	9c a9       	ldd	r25, Y+52	; 0x34
    7b7a:	20 e0       	ldi	r18, 0x00	; 0
    7b7c:	3f ef       	ldi	r19, 0xFF	; 255
    7b7e:	4f e7       	ldi	r20, 0x7F	; 127
    7b80:	57 e4       	ldi	r21, 0x47	; 71
    7b82:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7b86:	18 16       	cp	r1, r24
    7b88:	4c f5       	brge	.+82     	; 0x7bdc <Forward+0x57fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7b8a:	6d a9       	ldd	r22, Y+53	; 0x35
    7b8c:	7e a9       	ldd	r23, Y+54	; 0x36
    7b8e:	8f a9       	ldd	r24, Y+55	; 0x37
    7b90:	98 ad       	ldd	r25, Y+56	; 0x38
    7b92:	20 e0       	ldi	r18, 0x00	; 0
    7b94:	30 e0       	ldi	r19, 0x00	; 0
    7b96:	40 e2       	ldi	r20, 0x20	; 32
    7b98:	51 e4       	ldi	r21, 0x41	; 65
    7b9a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7b9e:	dc 01       	movw	r26, r24
    7ba0:	cb 01       	movw	r24, r22
    7ba2:	bc 01       	movw	r22, r24
    7ba4:	cd 01       	movw	r24, r26
    7ba6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7baa:	dc 01       	movw	r26, r24
    7bac:	cb 01       	movw	r24, r22
    7bae:	98 ab       	std	Y+48, r25	; 0x30
    7bb0:	8f a7       	std	Y+47, r24	; 0x2f
    7bb2:	0f c0       	rjmp	.+30     	; 0x7bd2 <Forward+0x57f2>
    7bb4:	80 e9       	ldi	r24, 0x90	; 144
    7bb6:	91 e0       	ldi	r25, 0x01	; 1
    7bb8:	9e a7       	std	Y+46, r25	; 0x2e
    7bba:	8d a7       	std	Y+45, r24	; 0x2d
    7bbc:	8d a5       	ldd	r24, Y+45	; 0x2d
    7bbe:	9e a5       	ldd	r25, Y+46	; 0x2e
    7bc0:	01 97       	sbiw	r24, 0x01	; 1
    7bc2:	f1 f7       	brne	.-4      	; 0x7bc0 <Forward+0x57e0>
    7bc4:	9e a7       	std	Y+46, r25	; 0x2e
    7bc6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7bc8:	8f a5       	ldd	r24, Y+47	; 0x2f
    7bca:	98 a9       	ldd	r25, Y+48	; 0x30
    7bcc:	01 97       	sbiw	r24, 0x01	; 1
    7bce:	98 ab       	std	Y+48, r25	; 0x30
    7bd0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7bd2:	8f a5       	ldd	r24, Y+47	; 0x2f
    7bd4:	98 a9       	ldd	r25, Y+48	; 0x30
    7bd6:	00 97       	sbiw	r24, 0x00	; 0
    7bd8:	69 f7       	brne	.-38     	; 0x7bb4 <Forward+0x57d4>
    7bda:	14 c0       	rjmp	.+40     	; 0x7c04 <Forward+0x5824>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7bdc:	69 a9       	ldd	r22, Y+49	; 0x31
    7bde:	7a a9       	ldd	r23, Y+50	; 0x32
    7be0:	8b a9       	ldd	r24, Y+51	; 0x33
    7be2:	9c a9       	ldd	r25, Y+52	; 0x34
    7be4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7be8:	dc 01       	movw	r26, r24
    7bea:	cb 01       	movw	r24, r22
    7bec:	98 ab       	std	Y+48, r25	; 0x30
    7bee:	8f a7       	std	Y+47, r24	; 0x2f
    7bf0:	8f a5       	ldd	r24, Y+47	; 0x2f
    7bf2:	98 a9       	ldd	r25, Y+48	; 0x30
    7bf4:	9c a7       	std	Y+44, r25	; 0x2c
    7bf6:	8b a7       	std	Y+43, r24	; 0x2b
    7bf8:	8b a5       	ldd	r24, Y+43	; 0x2b
    7bfa:	9c a5       	ldd	r25, Y+44	; 0x2c
    7bfc:	01 97       	sbiw	r24, 0x01	; 1
    7bfe:	f1 f7       	brne	.-4      	; 0x7bfc <Forward+0x581c>
    7c00:	9c a7       	std	Y+44, r25	; 0x2c
    7c02:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(70);
	angle1 = POSN3;
    7c04:	8a e0       	ldi	r24, 0x0A	; 10
    7c06:	80 93 69 00 	sts	0x0069, r24
	angle10 = POSN4;
    7c0a:	8b e0       	ldi	r24, 0x0B	; 11
    7c0c:	80 93 72 00 	sts	0x0072, r24
    7c10:	80 e0       	ldi	r24, 0x00	; 0
    7c12:	90 e0       	ldi	r25, 0x00	; 0
    7c14:	ac e8       	ldi	r26, 0x8C	; 140
    7c16:	b2 e4       	ldi	r27, 0x42	; 66
    7c18:	8f a3       	std	Y+39, r24	; 0x27
    7c1a:	98 a7       	std	Y+40, r25	; 0x28
    7c1c:	a9 a7       	std	Y+41, r26	; 0x29
    7c1e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7c20:	6f a1       	ldd	r22, Y+39	; 0x27
    7c22:	78 a5       	ldd	r23, Y+40	; 0x28
    7c24:	89 a5       	ldd	r24, Y+41	; 0x29
    7c26:	9a a5       	ldd	r25, Y+42	; 0x2a
    7c28:	20 e0       	ldi	r18, 0x00	; 0
    7c2a:	30 e0       	ldi	r19, 0x00	; 0
    7c2c:	4a e7       	ldi	r20, 0x7A	; 122
    7c2e:	55 e4       	ldi	r21, 0x45	; 69
    7c30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7c34:	dc 01       	movw	r26, r24
    7c36:	cb 01       	movw	r24, r22
    7c38:	8b a3       	std	Y+35, r24	; 0x23
    7c3a:	9c a3       	std	Y+36, r25	; 0x24
    7c3c:	ad a3       	std	Y+37, r26	; 0x25
    7c3e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    7c40:	6b a1       	ldd	r22, Y+35	; 0x23
    7c42:	7c a1       	ldd	r23, Y+36	; 0x24
    7c44:	8d a1       	ldd	r24, Y+37	; 0x25
    7c46:	9e a1       	ldd	r25, Y+38	; 0x26
    7c48:	20 e0       	ldi	r18, 0x00	; 0
    7c4a:	30 e0       	ldi	r19, 0x00	; 0
    7c4c:	40 e8       	ldi	r20, 0x80	; 128
    7c4e:	5f e3       	ldi	r21, 0x3F	; 63
    7c50:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7c54:	88 23       	and	r24, r24
    7c56:	2c f4       	brge	.+10     	; 0x7c62 <Forward+0x5882>
		__ticks = 1;
    7c58:	81 e0       	ldi	r24, 0x01	; 1
    7c5a:	90 e0       	ldi	r25, 0x00	; 0
    7c5c:	9a a3       	std	Y+34, r25	; 0x22
    7c5e:	89 a3       	std	Y+33, r24	; 0x21
    7c60:	3f c0       	rjmp	.+126    	; 0x7ce0 <Forward+0x5900>
	else if (__tmp > 65535)
    7c62:	6b a1       	ldd	r22, Y+35	; 0x23
    7c64:	7c a1       	ldd	r23, Y+36	; 0x24
    7c66:	8d a1       	ldd	r24, Y+37	; 0x25
    7c68:	9e a1       	ldd	r25, Y+38	; 0x26
    7c6a:	20 e0       	ldi	r18, 0x00	; 0
    7c6c:	3f ef       	ldi	r19, 0xFF	; 255
    7c6e:	4f e7       	ldi	r20, 0x7F	; 127
    7c70:	57 e4       	ldi	r21, 0x47	; 71
    7c72:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7c76:	18 16       	cp	r1, r24
    7c78:	4c f5       	brge	.+82     	; 0x7ccc <Forward+0x58ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7c7a:	6f a1       	ldd	r22, Y+39	; 0x27
    7c7c:	78 a5       	ldd	r23, Y+40	; 0x28
    7c7e:	89 a5       	ldd	r24, Y+41	; 0x29
    7c80:	9a a5       	ldd	r25, Y+42	; 0x2a
    7c82:	20 e0       	ldi	r18, 0x00	; 0
    7c84:	30 e0       	ldi	r19, 0x00	; 0
    7c86:	40 e2       	ldi	r20, 0x20	; 32
    7c88:	51 e4       	ldi	r21, 0x41	; 65
    7c8a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7c8e:	dc 01       	movw	r26, r24
    7c90:	cb 01       	movw	r24, r22
    7c92:	bc 01       	movw	r22, r24
    7c94:	cd 01       	movw	r24, r26
    7c96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7c9a:	dc 01       	movw	r26, r24
    7c9c:	cb 01       	movw	r24, r22
    7c9e:	9a a3       	std	Y+34, r25	; 0x22
    7ca0:	89 a3       	std	Y+33, r24	; 0x21
    7ca2:	0f c0       	rjmp	.+30     	; 0x7cc2 <Forward+0x58e2>
    7ca4:	80 e9       	ldi	r24, 0x90	; 144
    7ca6:	91 e0       	ldi	r25, 0x01	; 1
    7ca8:	98 a3       	std	Y+32, r25	; 0x20
    7caa:	8f 8f       	std	Y+31, r24	; 0x1f
    7cac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    7cae:	98 a1       	ldd	r25, Y+32	; 0x20
    7cb0:	01 97       	sbiw	r24, 0x01	; 1
    7cb2:	f1 f7       	brne	.-4      	; 0x7cb0 <Forward+0x58d0>
    7cb4:	98 a3       	std	Y+32, r25	; 0x20
    7cb6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7cb8:	89 a1       	ldd	r24, Y+33	; 0x21
    7cba:	9a a1       	ldd	r25, Y+34	; 0x22
    7cbc:	01 97       	sbiw	r24, 0x01	; 1
    7cbe:	9a a3       	std	Y+34, r25	; 0x22
    7cc0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7cc2:	89 a1       	ldd	r24, Y+33	; 0x21
    7cc4:	9a a1       	ldd	r25, Y+34	; 0x22
    7cc6:	00 97       	sbiw	r24, 0x00	; 0
    7cc8:	69 f7       	brne	.-38     	; 0x7ca4 <Forward+0x58c4>
    7cca:	14 c0       	rjmp	.+40     	; 0x7cf4 <Forward+0x5914>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7ccc:	6b a1       	ldd	r22, Y+35	; 0x23
    7cce:	7c a1       	ldd	r23, Y+36	; 0x24
    7cd0:	8d a1       	ldd	r24, Y+37	; 0x25
    7cd2:	9e a1       	ldd	r25, Y+38	; 0x26
    7cd4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7cd8:	dc 01       	movw	r26, r24
    7cda:	cb 01       	movw	r24, r22
    7cdc:	9a a3       	std	Y+34, r25	; 0x22
    7cde:	89 a3       	std	Y+33, r24	; 0x21
    7ce0:	89 a1       	ldd	r24, Y+33	; 0x21
    7ce2:	9a a1       	ldd	r25, Y+34	; 0x22
    7ce4:	9e 8f       	std	Y+30, r25	; 0x1e
    7ce6:	8d 8f       	std	Y+29, r24	; 0x1d
    7ce8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    7cea:	9e 8d       	ldd	r25, Y+30	; 0x1e
    7cec:	01 97       	sbiw	r24, 0x01	; 1
    7cee:	f1 f7       	brne	.-4      	; 0x7cec <Forward+0x590c>
    7cf0:	9e 8f       	std	Y+30, r25	; 0x1e
    7cf2:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(70);
	angle10 = POSN5;
    7cf4:	8c e0       	ldi	r24, 0x0C	; 12
    7cf6:	80 93 72 00 	sts	0x0072, r24
    7cfa:	80 e0       	ldi	r24, 0x00	; 0
    7cfc:	90 e0       	ldi	r25, 0x00	; 0
    7cfe:	ac e8       	ldi	r26, 0x8C	; 140
    7d00:	b2 e4       	ldi	r27, 0x42	; 66
    7d02:	89 8f       	std	Y+25, r24	; 0x19
    7d04:	9a 8f       	std	Y+26, r25	; 0x1a
    7d06:	ab 8f       	std	Y+27, r26	; 0x1b
    7d08:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7d0a:	69 8d       	ldd	r22, Y+25	; 0x19
    7d0c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7d0e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7d10:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7d12:	20 e0       	ldi	r18, 0x00	; 0
    7d14:	30 e0       	ldi	r19, 0x00	; 0
    7d16:	4a e7       	ldi	r20, 0x7A	; 122
    7d18:	55 e4       	ldi	r21, 0x45	; 69
    7d1a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7d1e:	dc 01       	movw	r26, r24
    7d20:	cb 01       	movw	r24, r22
    7d22:	8d 8b       	std	Y+21, r24	; 0x15
    7d24:	9e 8b       	std	Y+22, r25	; 0x16
    7d26:	af 8b       	std	Y+23, r26	; 0x17
    7d28:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    7d2a:	6d 89       	ldd	r22, Y+21	; 0x15
    7d2c:	7e 89       	ldd	r23, Y+22	; 0x16
    7d2e:	8f 89       	ldd	r24, Y+23	; 0x17
    7d30:	98 8d       	ldd	r25, Y+24	; 0x18
    7d32:	20 e0       	ldi	r18, 0x00	; 0
    7d34:	30 e0       	ldi	r19, 0x00	; 0
    7d36:	40 e8       	ldi	r20, 0x80	; 128
    7d38:	5f e3       	ldi	r21, 0x3F	; 63
    7d3a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7d3e:	88 23       	and	r24, r24
    7d40:	2c f4       	brge	.+10     	; 0x7d4c <Forward+0x596c>
		__ticks = 1;
    7d42:	81 e0       	ldi	r24, 0x01	; 1
    7d44:	90 e0       	ldi	r25, 0x00	; 0
    7d46:	9c 8b       	std	Y+20, r25	; 0x14
    7d48:	8b 8b       	std	Y+19, r24	; 0x13
    7d4a:	3f c0       	rjmp	.+126    	; 0x7dca <Forward+0x59ea>
	else if (__tmp > 65535)
    7d4c:	6d 89       	ldd	r22, Y+21	; 0x15
    7d4e:	7e 89       	ldd	r23, Y+22	; 0x16
    7d50:	8f 89       	ldd	r24, Y+23	; 0x17
    7d52:	98 8d       	ldd	r25, Y+24	; 0x18
    7d54:	20 e0       	ldi	r18, 0x00	; 0
    7d56:	3f ef       	ldi	r19, 0xFF	; 255
    7d58:	4f e7       	ldi	r20, 0x7F	; 127
    7d5a:	57 e4       	ldi	r21, 0x47	; 71
    7d5c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7d60:	18 16       	cp	r1, r24
    7d62:	4c f5       	brge	.+82     	; 0x7db6 <Forward+0x59d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7d64:	69 8d       	ldd	r22, Y+25	; 0x19
    7d66:	7a 8d       	ldd	r23, Y+26	; 0x1a
    7d68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7d6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    7d6c:	20 e0       	ldi	r18, 0x00	; 0
    7d6e:	30 e0       	ldi	r19, 0x00	; 0
    7d70:	40 e2       	ldi	r20, 0x20	; 32
    7d72:	51 e4       	ldi	r21, 0x41	; 65
    7d74:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7d78:	dc 01       	movw	r26, r24
    7d7a:	cb 01       	movw	r24, r22
    7d7c:	bc 01       	movw	r22, r24
    7d7e:	cd 01       	movw	r24, r26
    7d80:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7d84:	dc 01       	movw	r26, r24
    7d86:	cb 01       	movw	r24, r22
    7d88:	9c 8b       	std	Y+20, r25	; 0x14
    7d8a:	8b 8b       	std	Y+19, r24	; 0x13
    7d8c:	0f c0       	rjmp	.+30     	; 0x7dac <Forward+0x59cc>
    7d8e:	80 e9       	ldi	r24, 0x90	; 144
    7d90:	91 e0       	ldi	r25, 0x01	; 1
    7d92:	9a 8b       	std	Y+18, r25	; 0x12
    7d94:	89 8b       	std	Y+17, r24	; 0x11
    7d96:	89 89       	ldd	r24, Y+17	; 0x11
    7d98:	9a 89       	ldd	r25, Y+18	; 0x12
    7d9a:	01 97       	sbiw	r24, 0x01	; 1
    7d9c:	f1 f7       	brne	.-4      	; 0x7d9a <Forward+0x59ba>
    7d9e:	9a 8b       	std	Y+18, r25	; 0x12
    7da0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7da2:	8b 89       	ldd	r24, Y+19	; 0x13
    7da4:	9c 89       	ldd	r25, Y+20	; 0x14
    7da6:	01 97       	sbiw	r24, 0x01	; 1
    7da8:	9c 8b       	std	Y+20, r25	; 0x14
    7daa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7dac:	8b 89       	ldd	r24, Y+19	; 0x13
    7dae:	9c 89       	ldd	r25, Y+20	; 0x14
    7db0:	00 97       	sbiw	r24, 0x00	; 0
    7db2:	69 f7       	brne	.-38     	; 0x7d8e <Forward+0x59ae>
    7db4:	14 c0       	rjmp	.+40     	; 0x7dde <Forward+0x59fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7db6:	6d 89       	ldd	r22, Y+21	; 0x15
    7db8:	7e 89       	ldd	r23, Y+22	; 0x16
    7dba:	8f 89       	ldd	r24, Y+23	; 0x17
    7dbc:	98 8d       	ldd	r25, Y+24	; 0x18
    7dbe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7dc2:	dc 01       	movw	r26, r24
    7dc4:	cb 01       	movw	r24, r22
    7dc6:	9c 8b       	std	Y+20, r25	; 0x14
    7dc8:	8b 8b       	std	Y+19, r24	; 0x13
    7dca:	8b 89       	ldd	r24, Y+19	; 0x13
    7dcc:	9c 89       	ldd	r25, Y+20	; 0x14
    7dce:	98 8b       	std	Y+16, r25	; 0x10
    7dd0:	8f 87       	std	Y+15, r24	; 0x0f
    7dd2:	8f 85       	ldd	r24, Y+15	; 0x0f
    7dd4:	98 89       	ldd	r25, Y+16	; 0x10
    7dd6:	01 97       	sbiw	r24, 0x01	; 1
    7dd8:	f1 f7       	brne	.-4      	; 0x7dd6 <Forward+0x59f6>
    7dda:	98 8b       	std	Y+16, r25	; 0x10
    7ddc:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(70);
	angle10 = NaturalPos;
    7dde:	8d e0       	ldi	r24, 0x0D	; 13
    7de0:	80 93 72 00 	sts	0x0072, r24
    7de4:	80 e0       	ldi	r24, 0x00	; 0
    7de6:	90 e0       	ldi	r25, 0x00	; 0
    7de8:	aa ef       	ldi	r26, 0xFA	; 250
    7dea:	b3 e4       	ldi	r27, 0x43	; 67
    7dec:	8b 87       	std	Y+11, r24	; 0x0b
    7dee:	9c 87       	std	Y+12, r25	; 0x0c
    7df0:	ad 87       	std	Y+13, r26	; 0x0d
    7df2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    7df4:	6b 85       	ldd	r22, Y+11	; 0x0b
    7df6:	7c 85       	ldd	r23, Y+12	; 0x0c
    7df8:	8d 85       	ldd	r24, Y+13	; 0x0d
    7dfa:	9e 85       	ldd	r25, Y+14	; 0x0e
    7dfc:	20 e0       	ldi	r18, 0x00	; 0
    7dfe:	30 e0       	ldi	r19, 0x00	; 0
    7e00:	4a e7       	ldi	r20, 0x7A	; 122
    7e02:	55 e4       	ldi	r21, 0x45	; 69
    7e04:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7e08:	dc 01       	movw	r26, r24
    7e0a:	cb 01       	movw	r24, r22
    7e0c:	8f 83       	std	Y+7, r24	; 0x07
    7e0e:	98 87       	std	Y+8, r25	; 0x08
    7e10:	a9 87       	std	Y+9, r26	; 0x09
    7e12:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    7e14:	6f 81       	ldd	r22, Y+7	; 0x07
    7e16:	78 85       	ldd	r23, Y+8	; 0x08
    7e18:	89 85       	ldd	r24, Y+9	; 0x09
    7e1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    7e1c:	20 e0       	ldi	r18, 0x00	; 0
    7e1e:	30 e0       	ldi	r19, 0x00	; 0
    7e20:	40 e8       	ldi	r20, 0x80	; 128
    7e22:	5f e3       	ldi	r21, 0x3F	; 63
    7e24:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    7e28:	88 23       	and	r24, r24
    7e2a:	2c f4       	brge	.+10     	; 0x7e36 <Forward+0x5a56>
		__ticks = 1;
    7e2c:	81 e0       	ldi	r24, 0x01	; 1
    7e2e:	90 e0       	ldi	r25, 0x00	; 0
    7e30:	9e 83       	std	Y+6, r25	; 0x06
    7e32:	8d 83       	std	Y+5, r24	; 0x05
    7e34:	3f c0       	rjmp	.+126    	; 0x7eb4 <Forward+0x5ad4>
	else if (__tmp > 65535)
    7e36:	6f 81       	ldd	r22, Y+7	; 0x07
    7e38:	78 85       	ldd	r23, Y+8	; 0x08
    7e3a:	89 85       	ldd	r24, Y+9	; 0x09
    7e3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    7e3e:	20 e0       	ldi	r18, 0x00	; 0
    7e40:	3f ef       	ldi	r19, 0xFF	; 255
    7e42:	4f e7       	ldi	r20, 0x7F	; 127
    7e44:	57 e4       	ldi	r21, 0x47	; 71
    7e46:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    7e4a:	18 16       	cp	r1, r24
    7e4c:	4c f5       	brge	.+82     	; 0x7ea0 <Forward+0x5ac0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    7e4e:	6b 85       	ldd	r22, Y+11	; 0x0b
    7e50:	7c 85       	ldd	r23, Y+12	; 0x0c
    7e52:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e54:	9e 85       	ldd	r25, Y+14	; 0x0e
    7e56:	20 e0       	ldi	r18, 0x00	; 0
    7e58:	30 e0       	ldi	r19, 0x00	; 0
    7e5a:	40 e2       	ldi	r20, 0x20	; 32
    7e5c:	51 e4       	ldi	r21, 0x41	; 65
    7e5e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    7e62:	dc 01       	movw	r26, r24
    7e64:	cb 01       	movw	r24, r22
    7e66:	bc 01       	movw	r22, r24
    7e68:	cd 01       	movw	r24, r26
    7e6a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7e6e:	dc 01       	movw	r26, r24
    7e70:	cb 01       	movw	r24, r22
    7e72:	9e 83       	std	Y+6, r25	; 0x06
    7e74:	8d 83       	std	Y+5, r24	; 0x05
    7e76:	0f c0       	rjmp	.+30     	; 0x7e96 <Forward+0x5ab6>
    7e78:	80 e9       	ldi	r24, 0x90	; 144
    7e7a:	91 e0       	ldi	r25, 0x01	; 1
    7e7c:	9c 83       	std	Y+4, r25	; 0x04
    7e7e:	8b 83       	std	Y+3, r24	; 0x03
    7e80:	8b 81       	ldd	r24, Y+3	; 0x03
    7e82:	9c 81       	ldd	r25, Y+4	; 0x04
    7e84:	01 97       	sbiw	r24, 0x01	; 1
    7e86:	f1 f7       	brne	.-4      	; 0x7e84 <Forward+0x5aa4>
    7e88:	9c 83       	std	Y+4, r25	; 0x04
    7e8a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7e8c:	8d 81       	ldd	r24, Y+5	; 0x05
    7e8e:	9e 81       	ldd	r25, Y+6	; 0x06
    7e90:	01 97       	sbiw	r24, 0x01	; 1
    7e92:	9e 83       	std	Y+6, r25	; 0x06
    7e94:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7e96:	8d 81       	ldd	r24, Y+5	; 0x05
    7e98:	9e 81       	ldd	r25, Y+6	; 0x06
    7e9a:	00 97       	sbiw	r24, 0x00	; 0
    7e9c:	69 f7       	brne	.-38     	; 0x7e78 <Forward+0x5a98>
    7e9e:	14 c0       	rjmp	.+40     	; 0x7ec8 <Forward+0x5ae8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    7ea0:	6f 81       	ldd	r22, Y+7	; 0x07
    7ea2:	78 85       	ldd	r23, Y+8	; 0x08
    7ea4:	89 85       	ldd	r24, Y+9	; 0x09
    7ea6:	9a 85       	ldd	r25, Y+10	; 0x0a
    7ea8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    7eac:	dc 01       	movw	r26, r24
    7eae:	cb 01       	movw	r24, r22
    7eb0:	9e 83       	std	Y+6, r25	; 0x06
    7eb2:	8d 83       	std	Y+5, r24	; 0x05
    7eb4:	8d 81       	ldd	r24, Y+5	; 0x05
    7eb6:	9e 81       	ldd	r25, Y+6	; 0x06
    7eb8:	9a 83       	std	Y+2, r25	; 0x02
    7eba:	89 83       	std	Y+1, r24	; 0x01
    7ebc:	89 81       	ldd	r24, Y+1	; 0x01
    7ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    7ec0:	01 97       	sbiw	r24, 0x01	; 1
    7ec2:	f1 f7       	brne	.-4      	; 0x7ec0 <Forward+0x5ae0>
    7ec4:	9a 83       	std	Y+2, r25	; 0x02
    7ec6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);

}
    7ec8:	c2 57       	subi	r28, 0x72	; 114
    7eca:	dc 4f       	sbci	r29, 0xFC	; 252
    7ecc:	0f b6       	in	r0, 0x3f	; 63
    7ece:	f8 94       	cli
    7ed0:	de bf       	out	0x3e, r29	; 62
    7ed2:	0f be       	out	0x3f, r0	; 63
    7ed4:	cd bf       	out	0x3d, r28	; 61
    7ed6:	cf 91       	pop	r28
    7ed8:	df 91       	pop	r29
    7eda:	1f 91       	pop	r17
    7edc:	0f 91       	pop	r16
    7ede:	08 95       	ret

00007ee0 <Backward>:

void Backward(void)
{
    7ee0:	df 93       	push	r29
    7ee2:	cf 93       	push	r28
    7ee4:	cd b7       	in	r28, 0x3d	; 61
    7ee6:	de b7       	in	r29, 0x3e	; 62

}
    7ee8:	cf 91       	pop	r28
    7eea:	df 91       	pop	r29
    7eec:	08 95       	ret

00007eee <ToRight>:

void ToRight(void)
{
    7eee:	df 93       	push	r29
    7ef0:	cf 93       	push	r28
    7ef2:	cd b7       	in	r28, 0x3d	; 61
    7ef4:	de b7       	in	r29, 0x3e	; 62

}
    7ef6:	cf 91       	pop	r28
    7ef8:	df 91       	pop	r29
    7efa:	08 95       	ret

00007efc <ToLeft>:

void ToLeft(void)
{
    7efc:	df 93       	push	r29
    7efe:	cf 93       	push	r28
    7f00:	cd b7       	in	r28, 0x3d	; 61
    7f02:	de b7       	in	r29, 0x3e	; 62

}
    7f04:	cf 91       	pop	r28
    7f06:	df 91       	pop	r29
    7f08:	08 95       	ret

00007f0a <__prologue_saves__>:
    7f0a:	2f 92       	push	r2
    7f0c:	3f 92       	push	r3
    7f0e:	4f 92       	push	r4
    7f10:	5f 92       	push	r5
    7f12:	6f 92       	push	r6
    7f14:	7f 92       	push	r7
    7f16:	8f 92       	push	r8
    7f18:	9f 92       	push	r9
    7f1a:	af 92       	push	r10
    7f1c:	bf 92       	push	r11
    7f1e:	cf 92       	push	r12
    7f20:	df 92       	push	r13
    7f22:	ef 92       	push	r14
    7f24:	ff 92       	push	r15
    7f26:	0f 93       	push	r16
    7f28:	1f 93       	push	r17
    7f2a:	cf 93       	push	r28
    7f2c:	df 93       	push	r29
    7f2e:	cd b7       	in	r28, 0x3d	; 61
    7f30:	de b7       	in	r29, 0x3e	; 62
    7f32:	ca 1b       	sub	r28, r26
    7f34:	db 0b       	sbc	r29, r27
    7f36:	0f b6       	in	r0, 0x3f	; 63
    7f38:	f8 94       	cli
    7f3a:	de bf       	out	0x3e, r29	; 62
    7f3c:	0f be       	out	0x3f, r0	; 63
    7f3e:	cd bf       	out	0x3d, r28	; 61
    7f40:	09 94       	ijmp

00007f42 <__epilogue_restores__>:
    7f42:	2a 88       	ldd	r2, Y+18	; 0x12
    7f44:	39 88       	ldd	r3, Y+17	; 0x11
    7f46:	48 88       	ldd	r4, Y+16	; 0x10
    7f48:	5f 84       	ldd	r5, Y+15	; 0x0f
    7f4a:	6e 84       	ldd	r6, Y+14	; 0x0e
    7f4c:	7d 84       	ldd	r7, Y+13	; 0x0d
    7f4e:	8c 84       	ldd	r8, Y+12	; 0x0c
    7f50:	9b 84       	ldd	r9, Y+11	; 0x0b
    7f52:	aa 84       	ldd	r10, Y+10	; 0x0a
    7f54:	b9 84       	ldd	r11, Y+9	; 0x09
    7f56:	c8 84       	ldd	r12, Y+8	; 0x08
    7f58:	df 80       	ldd	r13, Y+7	; 0x07
    7f5a:	ee 80       	ldd	r14, Y+6	; 0x06
    7f5c:	fd 80       	ldd	r15, Y+5	; 0x05
    7f5e:	0c 81       	ldd	r16, Y+4	; 0x04
    7f60:	1b 81       	ldd	r17, Y+3	; 0x03
    7f62:	aa 81       	ldd	r26, Y+2	; 0x02
    7f64:	b9 81       	ldd	r27, Y+1	; 0x01
    7f66:	ce 0f       	add	r28, r30
    7f68:	d1 1d       	adc	r29, r1
    7f6a:	0f b6       	in	r0, 0x3f	; 63
    7f6c:	f8 94       	cli
    7f6e:	de bf       	out	0x3e, r29	; 62
    7f70:	0f be       	out	0x3f, r0	; 63
    7f72:	cd bf       	out	0x3d, r28	; 61
    7f74:	ed 01       	movw	r28, r26
    7f76:	08 95       	ret

00007f78 <_exit>:
    7f78:	f8 94       	cli

00007f7a <__stop_program>:
    7f7a:	ff cf       	rjmp	.-2      	; 0x7f7a <__stop_program>
